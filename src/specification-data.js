/*! resol-vbus | Copyright (c) 2013-2014, Daniel Wippermann | MIT license */
'use strict';



var createVBusSpecificationData = function() {
    // ---- UNITS ----
    var units = {

        Bars: {
            unitId: 'Bars',
            unitCode: 'Bars',
            unitFamily: 'Pressure',
            unitText: ' bar',
        },

        Btus: {
            unitId: 'Btus',
            unitCode: 'Btus',
            unitFamily: 'Energy',
            unitText: ' BTU',
        },

        CubicMeters: {
            unitId: 'CubicMeters',
            unitCode: 'CubicMeters',
            unitFamily: null,
            unitText: ' m³',
        },

        CubicMetersPerHour: {
            unitId: 'CubicMetersPerHour',
            unitCode: 'CubicMetersPerHour',
            unitFamily: 'VolumeFlow',
            unitText: ' m³/h',
        },

        Days: {
            unitId: 'Days',
            unitCode: 'Days',
            unitFamily: 'Time',
            unitText: ' d',
        },

        DegreesAngular: {
            unitId: 'DegreesAngular',
            unitCode: 'DegreesAngular',
            unitFamily: null,
            unitText: ' °',
        },

        DegreesCelsius: {
            unitId: 'DegreesCelsius',
            unitCode: 'DegreesCelsius',
            unitFamily: 'Temperature',
            unitText: ' °C',
        },

        DegreesFahrenheit: {
            unitId: 'DegreesFahrenheit',
            unitCode: 'DegreesFahrenheit',
            unitFamily: 'Temperature',
            unitText: ' °F',
        },

        DegreesKelvin: {
            unitId: 'DegreesKelvin',
            unitCode: 'DegreesKelvin',
            unitFamily: null,
            unitText: ' K',
        },

        GallonsPerHour: {
            unitId: 'GallonsPerHour',
            unitCode: 'GallonsPerHour',
            unitFamily: 'VolumeFlow',
            unitText: ' gal/h',
        },

        GallonsPerMinute: {
            unitId: 'GallonsPerMinute',
            unitCode: 'GallonsPerMinute',
            unitFamily: 'VolumeFlow',
            unitText: ' gal/min',
        },

        GramsCO2Gas: {
            unitId: 'GramsCO2Gas',
            unitCode: 'GramsCO2Gas',
            unitFamily: null,
            unitText: ' g CO₂ (Gas)',
        },

        GramsCO2Oil: {
            unitId: 'GramsCO2Oil',
            unitCode: 'GramsCO2Oil',
            unitFamily: null,
            unitText: ' g CO₂ (Oil)',
        },

        Hectopascals: {
            unitId: 'Hectopascals',
            unitCode: 'Hectopascals',
            unitFamily: null,
            unitText: ' hPa',
        },

        Hertz: {
            unitId: 'Hertz',
            unitCode: 'Hertz',
            unitFamily: null,
            unitText: ' Hz',
        },

        Hours: {
            unitId: 'Hours',
            unitCode: 'Hours',
            unitFamily: 'Time',
            unitText: ' h',
        },

        KiloBtus: {
            unitId: 'KiloBtus',
            unitCode: 'KiloBtus',
            unitFamily: 'Energy',
            unitText: ' MBTU',
        },

        KiloWattHoursPerSquareMeterPerDay: {
            unitId: 'KiloWattHoursPerSquareMeterPerDay',
            unitCode: 'KiloWattHoursPerSquareMeterPerDay',
            unitFamily: null,
            unitText: ' kWh/(m²*d)',
        },

        KilogramsCO2Gas: {
            unitId: 'KilogramsCO2Gas',
            unitCode: 'KilogramsCO2Gas',
            unitFamily: null,
            unitText: ' kg CO₂ (Gas)',
        },

        KilogramsCO2Oil: {
            unitId: 'KilogramsCO2Oil',
            unitCode: 'KilogramsCO2Oil',
            unitFamily: null,
            unitText: ' kg CO₂ (Oil)',
        },

        KilogramsPerCubicMeter: {
            unitId: 'KilogramsPerCubicMeter',
            unitCode: 'KilogramsPerCubicMeter',
            unitFamily: null,
            unitText: ' kg/m³',
        },

        KilogramsPerHour: {
            unitId: 'KilogramsPerHour',
            unitCode: 'KilogramsPerHour',
            unitFamily: null,
            unitText: ' kg/h',
        },

        KilowattHours: {
            unitId: 'KilowattHours',
            unitCode: 'KilowattHours',
            unitFamily: 'Energy',
            unitText: ' kWh',
        },

        Kilowatts: {
            unitId: 'Kilowatts',
            unitCode: 'Kilowatts',
            unitFamily: null,
            unitText: ' kW',
        },

        Liters: {
            unitId: 'Liters',
            unitCode: 'Liters',
            unitFamily: null,
            unitText: ' l',
        },

        LitersPerHour: {
            unitId: 'LitersPerHour',
            unitCode: 'LitersPerHour',
            unitFamily: 'VolumeFlow',
            unitText: ' l/h',
        },

        LitersPerMinute: {
            unitId: 'LitersPerMinute',
            unitCode: 'LitersPerMinute',
            unitFamily: 'VolumeFlow',
            unitText: ' l/min',
        },

        LitersPerSquareMeterPerDay: {
            unitId: 'LitersPerSquareMeterPerDay',
            unitCode: 'LitersPerSquareMeterPerDay',
            unitFamily: null,
            unitText: ' l/(m²*d)',
        },

        MegaBtus: {
            unitId: 'MegaBtus',
            unitCode: 'MegaBtus',
            unitFamily: 'Energy',
            unitText: ' MMBTU',
        },

        MegawattHours: {
            unitId: 'MegawattHours',
            unitCode: 'MegawattHours',
            unitFamily: 'Energy',
            unitText: ' MWh',
        },

        MetersPerSecond: {
            unitId: 'MetersPerSecond',
            unitCode: 'MetersPerSecond',
            unitFamily: null,
            unitText: ' m/s',
        },

        Milliamperes: {
            unitId: 'Milliamperes',
            unitCode: 'Milliamperes',
            unitFamily: null,
            unitText: ' mA',
        },

        Milliseconds: {
            unitId: 'Milliseconds',
            unitCode: 'Milliseconds',
            unitFamily: null,
            unitText: ' ms',
        },

        Minutes: {
            unitId: 'Minutes',
            unitCode: 'Minutes',
            unitFamily: 'Time',
            unitText: ' min',
        },

        None: {
            unitId: 'None',
            unitCode: 'None',
            unitFamily: null,
            unitText: '',
        },

        Ohms: {
            unitId: 'Ohms',
            unitCode: 'Ohms',
            unitFamily: null,
            unitText: ' Ω',
        },

        Percent: {
            unitId: 'Percent',
            unitCode: 'Percent',
            unitFamily: null,
            unitText: '%',
        },

        Seconds: {
            unitId: 'Seconds',
            unitCode: 'Seconds',
            unitFamily: 'Time',
            unitText: ' s',
        },

        SquareMeters: {
            unitId: 'SquareMeters',
            unitCode: 'SquareMeters',
            unitFamily: null,
            unitText: ' m²',
        },

        TonsCO2Gas: {
            unitId: 'TonsCO2Gas',
            unitCode: 'TonsCO2Gas',
            unitFamily: null,
            unitText: ' t CO₂ (Gas)',
        },

        TonsCO2Oil: {
            unitId: 'TonsCO2Oil',
            unitCode: 'TonsCO2Oil',
            unitFamily: null,
            unitText: ' t CO₂ (Oil)',
        },

        Volts: {
            unitId: 'Volts',
            unitCode: 'Volts',
            unitFamily: null,
            unitText: ' V',
        },

        WattHours: {
            unitId: 'WattHours',
            unitCode: 'WattHours',
            unitFamily: 'Energy',
            unitText: ' Wh',
        },

        Watts: {
            unitId: 'Watts',
            unitCode: 'Watts',
            unitFamily: null,
            unitText: ' W',
        },

        WattsPerSquareMeter: {
            unitId: 'WattsPerSquareMeter',
            unitCode: 'WattsPerSquareMeter',
            unitFamily: null,
            unitText: ' W/m²',
        },

    };



    var types = {

        DateTime_1_None: {
            typeId: 'DateTime_1_None',
            rootTypeId: 'DateTime',
            precision: 0,
            unit: units.None,
        },

        Number_0_0001_KilogramsPerCubicMeter: {
            typeId: 'Number_0_0001_KilogramsPerCubicMeter',
            rootTypeId: 'Number',
            precision: 4,
            unit: units.KilogramsPerCubicMeter,
        },

        Number_0_001_CubicMeters: {
            typeId: 'Number_0_001_CubicMeters',
            rootTypeId: 'Number',
            precision: 3,
            unit: units.CubicMeters,
        },

        Number_0_001_KiloWattHoursPerSquareMeterPerDay: {
            typeId: 'Number_0_001_KiloWattHoursPerSquareMeterPerDay',
            rootTypeId: 'Number',
            precision: 3,
            unit: units.KiloWattHoursPerSquareMeterPerDay,
        },

        Number_0_001_Kilowatts: {
            typeId: 'Number_0_001_Kilowatts',
            rootTypeId: 'Number',
            precision: 3,
            unit: units.Kilowatts,
        },

        Number_0_001_Milliamperes: {
            typeId: 'Number_0_001_Milliamperes',
            rootTypeId: 'Number',
            precision: 3,
            unit: units.Milliamperes,
        },

        Number_0_001_Ohms: {
            typeId: 'Number_0_001_Ohms',
            rootTypeId: 'Number',
            precision: 3,
            unit: units.Ohms,
        },

        Number_0_01_Bars: {
            typeId: 'Number_0_01_Bars',
            rootTypeId: 'Number',
            precision: 2,
            unit: units.Bars,
        },

        Number_0_01_CubicMeters: {
            typeId: 'Number_0_01_CubicMeters',
            rootTypeId: 'Number',
            precision: 2,
            unit: units.CubicMeters,
        },

        Number_0_01_CubicMetersPerHour: {
            typeId: 'Number_0_01_CubicMetersPerHour',
            rootTypeId: 'Number',
            precision: 2,
            unit: units.CubicMetersPerHour,
        },

        Number_0_01_DegreesCelsius: {
            typeId: 'Number_0_01_DegreesCelsius',
            rootTypeId: 'Number',
            precision: 2,
            unit: units.DegreesCelsius,
        },

        Number_0_01_Hours: {
            typeId: 'Number_0_01_Hours',
            rootTypeId: 'Number',
            precision: 2,
            unit: units.Hours,
        },

        Number_0_01_KiloWattHoursPerSquareMeterPerDay: {
            typeId: 'Number_0_01_KiloWattHoursPerSquareMeterPerDay',
            rootTypeId: 'Number',
            precision: 2,
            unit: units.KiloWattHoursPerSquareMeterPerDay,
        },

        Number_0_01_KilowattHours: {
            typeId: 'Number_0_01_KilowattHours',
            rootTypeId: 'Number',
            precision: 2,
            unit: units.KilowattHours,
        },

        Number_0_01_LitersPerHour: {
            typeId: 'Number_0_01_LitersPerHour',
            rootTypeId: 'Number',
            precision: 2,
            unit: units.LitersPerHour,
        },

        Number_0_01_LitersPerMinute: {
            typeId: 'Number_0_01_LitersPerMinute',
            rootTypeId: 'Number',
            precision: 2,
            unit: units.LitersPerMinute,
        },

        Number_0_01_MetersPerSecond: {
            typeId: 'Number_0_01_MetersPerSecond',
            rootTypeId: 'Number',
            precision: 2,
            unit: units.MetersPerSecond,
        },

        Number_0_01_Milliamperes: {
            typeId: 'Number_0_01_Milliamperes',
            rootTypeId: 'Number',
            precision: 2,
            unit: units.Milliamperes,
        },

        Number_0_01_None: {
            typeId: 'Number_0_01_None',
            rootTypeId: 'Number',
            precision: 2,
            unit: units.None,
        },

        Number_0_01_SquareMeters: {
            typeId: 'Number_0_01_SquareMeters',
            rootTypeId: 'Number',
            precision: 2,
            unit: units.SquareMeters,
        },

        Number_0_1_Bars: {
            typeId: 'Number_0_1_Bars',
            rootTypeId: 'Number',
            precision: 1,
            unit: units.Bars,
        },

        Number_0_1_CubicMeters: {
            typeId: 'Number_0_1_CubicMeters',
            rootTypeId: 'Number',
            precision: 1,
            unit: units.CubicMeters,
        },

        Number_0_1_DegreesCelsius: {
            typeId: 'Number_0_1_DegreesCelsius',
            rootTypeId: 'Number',
            precision: 1,
            unit: units.DegreesCelsius,
        },

        Number_0_1_DegreesFahrenheit: {
            typeId: 'Number_0_1_DegreesFahrenheit',
            rootTypeId: 'Number',
            precision: 1,
            unit: units.DegreesFahrenheit,
        },

        Number_0_1_DegreesKelvin: {
            typeId: 'Number_0_1_DegreesKelvin',
            rootTypeId: 'Number',
            precision: 1,
            unit: units.DegreesKelvin,
        },

        Number_0_1_KilowattHours: {
            typeId: 'Number_0_1_KilowattHours',
            rootTypeId: 'Number',
            precision: 1,
            unit: units.KilowattHours,
        },

        Number_0_1_Kilowatts: {
            typeId: 'Number_0_1_Kilowatts',
            rootTypeId: 'Number',
            precision: 1,
            unit: units.Kilowatts,
        },

        Number_0_1_Liters: {
            typeId: 'Number_0_1_Liters',
            rootTypeId: 'Number',
            precision: 1,
            unit: units.Liters,
        },

        Number_0_1_LitersPerMinute: {
            typeId: 'Number_0_1_LitersPerMinute',
            rootTypeId: 'Number',
            precision: 1,
            unit: units.LitersPerMinute,
        },

        Number_0_1_LitersPerSquareMeterPerDay: {
            typeId: 'Number_0_1_LitersPerSquareMeterPerDay',
            rootTypeId: 'Number',
            precision: 1,
            unit: units.LitersPerSquareMeterPerDay,
        },

        Number_0_1_None: {
            typeId: 'Number_0_1_None',
            rootTypeId: 'Number',
            precision: 1,
            unit: units.None,
        },

        Number_0_1_Percent: {
            typeId: 'Number_0_1_Percent',
            rootTypeId: 'Number',
            precision: 1,
            unit: units.Percent,
        },

        Number_0_1_Volts: {
            typeId: 'Number_0_1_Volts',
            rootTypeId: 'Number',
            precision: 1,
            unit: units.Volts,
        },

        Number_0_1_WattsPerSquareMeter: {
            typeId: 'Number_0_1_WattsPerSquareMeter',
            rootTypeId: 'Number',
            precision: 1,
            unit: units.WattsPerSquareMeter,
        },

        Number_1_Btus: {
            typeId: 'Number_1_Btus',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.Btus,
        },

        Number_1_CubicMeters: {
            typeId: 'Number_1_CubicMeters',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.CubicMeters,
        },

        Number_1_CubicMetersPerHour: {
            typeId: 'Number_1_CubicMetersPerHour',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.CubicMetersPerHour,
        },

        Number_1_Days: {
            typeId: 'Number_1_Days',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.Days,
        },

        Number_1_DegreesAngular: {
            typeId: 'Number_1_DegreesAngular',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.DegreesAngular,
        },

        Number_1_DegreesCelsius: {
            typeId: 'Number_1_DegreesCelsius',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.DegreesCelsius,
        },

        Number_1_DegreesKelvin: {
            typeId: 'Number_1_DegreesKelvin',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.DegreesKelvin,
        },

        Number_1_Hectopascals: {
            typeId: 'Number_1_Hectopascals',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.Hectopascals,
        },

        Number_1_Hertz: {
            typeId: 'Number_1_Hertz',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.Hertz,
        },

        Number_1_Hours: {
            typeId: 'Number_1_Hours',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.Hours,
        },

        Number_1_KilogramsPerHour: {
            typeId: 'Number_1_KilogramsPerHour',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.KilogramsPerHour,
        },

        Number_1_KilowattHours: {
            typeId: 'Number_1_KilowattHours',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.KilowattHours,
        },

        Number_1_Liters: {
            typeId: 'Number_1_Liters',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.Liters,
        },

        Number_1_LitersPerHour: {
            typeId: 'Number_1_LitersPerHour',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.LitersPerHour,
        },

        Number_1_MegawattHours: {
            typeId: 'Number_1_MegawattHours',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.MegawattHours,
        },

        Number_1_Milliseconds: {
            typeId: 'Number_1_Milliseconds',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.Milliseconds,
        },

        Number_1_Minutes: {
            typeId: 'Number_1_Minutes',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.Minutes,
        },

        Number_1_None: {
            typeId: 'Number_1_None',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.None,
        },

        Number_1_Percent: {
            typeId: 'Number_1_Percent',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.Percent,
        },

        Number_1_Seconds: {
            typeId: 'Number_1_Seconds',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.Seconds,
        },

        Number_1_WattHours: {
            typeId: 'Number_1_WattHours',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.WattHours,
        },

        Number_1_Watts: {
            typeId: 'Number_1_Watts',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.Watts,
        },

        Number_1_WattsPerSquareMeter: {
            typeId: 'Number_1_WattsPerSquareMeter',
            rootTypeId: 'Number',
            precision: 0,
            unit: units.WattsPerSquareMeter,
        },

        Time_1_None: {
            typeId: 'Time_1_None',
            rootTypeId: 'Time',
            precision: 0,
            unit: units.None,
        },

        Weektime_1_None: {
            typeId: 'Weektime_1_None',
            rootTypeId: 'Weektime',
            precision: 0,
            unit: units.None,
        },

    };



    var getRawValueFunctions = {

        _0000_4010_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readUInt8(start + 3) * 256;
                valid = true;
            }
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1000;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 256000;
                valid = true;
            }
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1000000;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_4010_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.01;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_4010_0100_006_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 10;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 2560;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_4010_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_4010_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_4010_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_4010_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.01;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_4420_0100_000_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_4420_0100_001_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 1;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_4420_0100_003_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 3 < end) {
                rawValue += buffer.readUInt8(start + 3) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_4420_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_4420_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_4420_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_4420_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_4420_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_4420_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_000_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_001_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 1;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_003_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 3 < end) {
                rawValue += buffer.readUInt8(start + 3) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_003_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_003_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_003_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_003_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_003_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_003_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6510_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6520_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6520_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6520_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6520_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6520_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6520_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6650_0100_000_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.001;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 0.256;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 65.536;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6650_0100_004_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.001;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 0.256;
                valid = true;
            }
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 65.536;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6650_0100_008_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.001;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 0.256;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 65.536;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6650_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.001;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 0.256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65.536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6650_0100_016_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.001;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 0.256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 65.536;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0000_6650_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.001;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 0.256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65.536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_0053_0100_000_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.001;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 0.256;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 65.536;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_0053_0100_004_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.001;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 0.256;
                valid = true;
            }
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 65.536;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_0053_0100_008_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.001;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 0.256;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 65.536;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_0053_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.001;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 0.256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65.536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_0053_0100_016_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 65536;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_0053_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_0053_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 65536;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_0053_0100_034_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 0.1;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_0053_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 0.1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readInt8(start + 37) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_0053_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 0.1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_0053_0100_040_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readInt8(start + 41) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_1120_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_1120_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_1120_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_1120_0100_006_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_1120_0100_007_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_1120_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_1120_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_1120_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_1120_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_1120_0100_016_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 65536;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_017_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_020_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_020_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_020_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_020_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 65536;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2211_0100_032_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 0.01;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 0.1;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 0.1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_030_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 0.1;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readInt8(start + 37) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_038_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 256;
                valid = true;
            }
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 65536;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readInt8(start + 41) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_040_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 65536;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_042_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_043_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 43 < end) {
                rawValue += buffer.readUInt8(start + 43) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_044_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_045_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_046_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_047_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readUInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_048_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_049_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_050_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_051_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 51 < end) {
                rawValue += buffer.readUInt8(start + 51) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_052_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_053_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 53 < end) {
                rawValue += buffer.readUInt8(start + 53) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_054_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_056_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readUInt8(start + 57) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_058_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 1;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readUInt8(start + 59) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_072_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 72 < end) {
                rawValue += buffer.readUInt8(start + 72) * 1;
                valid = true;
            }
            if (start + 73 < end) {
                rawValue += buffer.readUInt8(start + 73) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_074_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 74 < end) {
                rawValue += buffer.readUInt8(start + 74) * 1;
                valid = true;
            }
            if (start + 75 < end) {
                rawValue += buffer.readUInt8(start + 75) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_080_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 80 < end) {
                rawValue += buffer.readUInt8(start + 80) * 1;
                valid = true;
            }
            if (start + 81 < end) {
                rawValue += buffer.readUInt8(start + 81) * 256;
                valid = true;
            }
            if (start + 82 < end) {
                rawValue += buffer.readUInt8(start + 82) * 65536;
                valid = true;
            }
            if (start + 83 < end) {
                rawValue += buffer.readUInt8(start + 83) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_084_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 84 < end) {
                rawValue += buffer.readUInt8(start + 84) * 1;
                valid = true;
            }
            if (start + 85 < end) {
                rawValue += buffer.readUInt8(start + 85) * 256;
                valid = true;
            }
            if (start + 86 < end) {
                rawValue += buffer.readUInt8(start + 86) * 65536;
                valid = true;
            }
            if (start + 87 < end) {
                rawValue += buffer.readUInt8(start + 87) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_088_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 88 < end) {
                rawValue += buffer.readUInt8(start + 88) * 1;
                valid = true;
            }
            if (start + 89 < end) {
                rawValue += buffer.readUInt8(start + 89) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2231_0100_090_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 90 < end) {
                rawValue += buffer.readUInt8(start + 90) * 1;
                valid = true;
            }
            if (start + 91 < end) {
                rawValue += buffer.readUInt8(start + 91) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2232_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2232_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2232_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2232_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2232_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2232_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_000_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 256;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 65536;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 65536;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_032_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 0.01;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readInt8(start + 33) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_034_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 34 < end) {
                rawValue += buffer.readInt8(start + 34) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_035_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_036_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_037_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 37 < end) {
                rawValue += buffer.readInt8(start + 37) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_038_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readInt8(start + 38) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_039_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_040_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 65536;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_044_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_048_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 256;
                valid = true;
            }
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 65536;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_052_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readUInt8(start + 53) * 256;
                valid = true;
            }
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 65536;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readInt8(start + 55) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_056_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readUInt8(start + 57) * 256;
                valid = true;
            }
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 65536;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readInt8(start + 59) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_060_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readUInt8(start + 60) * 1;
                valid = true;
            }
            if (start + 61 < end) {
                rawValue += buffer.readUInt8(start + 61) * 256;
                valid = true;
            }
            if (start + 62 < end) {
                rawValue += buffer.readUInt8(start + 62) * 65536;
                valid = true;
            }
            if (start + 63 < end) {
                rawValue += buffer.readInt8(start + 63) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_064_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 64 < end) {
                rawValue += buffer.readInt8(start + 64) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_065_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 65 < end) {
                rawValue += buffer.readInt8(start + 65) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_066_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 66 < end) {
                rawValue += buffer.readInt8(start + 66) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_067_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 67 < end) {
                rawValue += buffer.readInt8(start + 67) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_068_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 68 < end) {
                rawValue += buffer.readUInt8(start + 68) * 1;
                valid = true;
            }
            if (start + 69 < end) {
                rawValue += buffer.readUInt8(start + 69) * 256;
                valid = true;
            }
            if (start + 70 < end) {
                rawValue += buffer.readUInt8(start + 70) * 65536;
                valid = true;
            }
            if (start + 71 < end) {
                rawValue += buffer.readInt8(start + 71) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_072_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 72 < end) {
                rawValue += buffer.readUInt8(start + 72) * 1;
                valid = true;
            }
            if (start + 73 < end) {
                rawValue += buffer.readUInt8(start + 73) * 256;
                valid = true;
            }
            if (start + 74 < end) {
                rawValue += buffer.readUInt8(start + 74) * 65536;
                valid = true;
            }
            if (start + 75 < end) {
                rawValue += buffer.readInt8(start + 75) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_076_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 76 < end) {
                rawValue += buffer.readUInt8(start + 76) * 1;
                valid = true;
            }
            if (start + 77 < end) {
                rawValue += buffer.readUInt8(start + 77) * 256;
                valid = true;
            }
            if (start + 78 < end) {
                rawValue += buffer.readUInt8(start + 78) * 65536;
                valid = true;
            }
            if (start + 79 < end) {
                rawValue += buffer.readInt8(start + 79) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_080_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 80 < end) {
                rawValue += buffer.readInt8(start + 80) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_081_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 81 < end) {
                rawValue += buffer.readInt8(start + 81) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_082_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 82 < end) {
                rawValue += buffer.readInt8(start + 82) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_083_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 83 < end) {
                rawValue += buffer.readInt8(start + 83) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_084_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 84 < end) {
                rawValue += buffer.readInt8(start + 84) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_085_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 85 < end) {
                rawValue += buffer.readInt8(start + 85) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_086_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 86 < end) {
                rawValue += buffer.readInt8(start + 86) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_087_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 87 < end) {
                rawValue += buffer.readInt8(start + 87) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_088_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 88 < end) {
                rawValue += buffer.readInt8(start + 88) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_089_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 89 < end) {
                rawValue += buffer.readInt8(start + 89) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_090_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 90 < end) {
                rawValue += buffer.readInt8(start + 90) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_091_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 91 < end) {
                rawValue += buffer.readInt8(start + 91) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_093_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 93 < end) {
                rawValue += buffer.readInt8(start + 93) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_094_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 94 < end) {
                rawValue += buffer.readInt8(start + 94) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_095_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 95 < end) {
                rawValue += buffer.readInt8(start + 95) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2251_0100_096_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 96 < end) {
                rawValue += buffer.readUInt8(start + 96) * 1;
                valid = true;
            }
            if (start + 97 < end) {
                rawValue += buffer.readUInt8(start + 97) * 256;
                valid = true;
            }
            if (start + 98 < end) {
                rawValue += buffer.readUInt8(start + 98) * 65536;
                valid = true;
            }
            if (start + 99 < end) {
                rawValue += buffer.readInt8(start + 99) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2252_0100_000_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 256;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 65536;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2252_0100_004_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 65536;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2252_0100_008_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 65536;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_2252_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3011_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3011_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3011_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.01;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3011_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3011_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.01;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3011_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3011_0100_016_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 65536;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3011_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.0001;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 0.0256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3011_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3011_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3011_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3011_0100_030_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 1;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3211_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3211_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3211_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3211_0100_006_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3211_0100_007_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3211_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3211_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3211_0100_011_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3221_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3221_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3221_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3221_0100_006_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3221_0100_007_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3221_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3221_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3221_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3221_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3231_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3231_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3231_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3231_0100_006_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readInt8(start + 6) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3231_0100_007_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3231_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3231_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3231_0100_010_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3231_0100_010_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3241_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3241_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3241_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3241_0100_006_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3241_0100_007_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3241_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3251_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3251_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3251_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3251_0100_006_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readInt8(start + 6) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3251_0100_007_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3251_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_011_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_015_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_015_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_015_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1000;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 256000;
                valid = true;
            }
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1000000;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3271_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 0.01;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3311_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3311_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3311_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3311_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3311_0100_006_2_0_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3311_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3311_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3311_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3311_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3311_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3311_0100_011_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_3311_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4111_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4111_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4111_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4111_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4111_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4111_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4111_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4111_0100_016_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 65536;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4211_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4211_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4211_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4211_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4211_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4211_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4211_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4211_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4211_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4211_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1000;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 256000;
                valid = true;
            }
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1000000;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4212_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4212_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4212_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4212_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4212_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4212_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4212_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4212_0100_011_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4212_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4212_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4212_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1000;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 256000;
                valid = true;
            }
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1000000;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4212_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4213_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4213_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4213_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4213_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4213_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4213_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4213_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4213_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4213_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4213_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1000;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 256000;
                valid = true;
            }
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1000000;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4213_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4213_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4213_0100_032_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 0.1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4214_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4214_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4214_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4214_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4214_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4214_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4214_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4214_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4214_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4214_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1000;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 256000;
                valid = true;
            }
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1000000;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4214_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4214_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4214_0100_032_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 0.1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_011_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_015_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_015_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_015_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_015_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_015_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_015_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1000;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 256000;
                valid = true;
            }
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1000000;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4221_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 0.01;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_011_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_015_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_015_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_015_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_015_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_015_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_015_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1000;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 256000;
                valid = true;
            }
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1000000;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4223_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 0.01;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_011_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_015_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_015_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_015_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_015_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_015_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_015_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1000;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 256000;
                valid = true;
            }
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1000000;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4224_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 0.01;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_017_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_019_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1000;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 256000;
                valid = true;
            }
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1000000;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_030_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 1;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 0.01;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_032_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 0.1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readInt8(start + 33) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_034_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 0.1;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readInt8(start + 37) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4231_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 0.1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.01;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_012_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_012_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_013_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_013_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_013_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_013_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_013_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_013_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_013_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_013_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_014_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_014_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_015_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_015_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_015_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_015_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_017_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_018_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_019_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1000;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 256000;
                valid = true;
            }
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1000000;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_030_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_031_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_032_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 0.1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readInt8(start + 33) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_034_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 0.1;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_040_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 0.1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readInt8(start + 41) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_042_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 0.1;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_044_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_045_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_046_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_047_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readUInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_048_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4241_0100_050_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 1;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readUInt8(start + 51) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_022_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_022_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_022_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_022_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_022_1_256: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_022_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_022_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_022_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_022_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4251_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.01;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_011_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_016_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 65536;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_020_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_020_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_020_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_020_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_022_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_022_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_022_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_022_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_022_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_022_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_022_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_022_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_023_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_023_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_023_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_023_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 65536;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4252_0100_030_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 0.01;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_014_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_014_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_014_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_014_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_014_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_014_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_014_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_017_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_018_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_019_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 0.1;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_030_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 0.1;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readUInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_036_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 65536;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_040_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readInt8(start + 41) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_042_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_044_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_045_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_046_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 0.01;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_048_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 0.1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_050_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 0.1;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_052_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 0.1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readInt8(start + 53) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_052_2_0_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 0.1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readInt8(start + 53) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_054_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 0.1;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readInt8(start + 55) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_056_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 0.1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readInt8(start + 57) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4261_0100_058_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 1;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readInt8(start + 59) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4265_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4265_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4265_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4265_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4265_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4265_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4265_0100_010_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4265_0100_010_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4265_0100_010_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4265_0100_010_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4265_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4265_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4265_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1000;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 256000;
                valid = true;
            }
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1000000;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4265_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.01;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_010_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_010_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_010_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_010_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_010_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_010_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_011_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_011_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1000;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 256000;
                valid = true;
            }
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1000000;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_022_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_023_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4278_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.01;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_010_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_010_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_010_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_010_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_010_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_010_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_011_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_011_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1000;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 256000;
                valid = true;
            }
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1000000;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_022_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_023_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4279_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.01;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_017_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_020_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_020_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_020_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_020_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 65536;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_032_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 0.01;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_427B_0100_034_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 1;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readUInt8(start + 35) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4311_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4311_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4311_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4311_0100_006_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4311_0100_007_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4311_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4311_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4311_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4311_0100_016_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 25.6;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 6553.6;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 1677721.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4321_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4321_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4321_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4321_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4321_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4321_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4321_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4321_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4321_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4321_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4321_0100_016_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4321_0100_019_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_4321_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 65536;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5111_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5111_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5111_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5111_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5111_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5111_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5111_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5111_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5111_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5111_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5111_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 65536;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5111_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5112_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5112_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5112_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5112_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5112_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5112_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5112_0100_011_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5112_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.001;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 0.256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65.536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5112_0100_016_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 65536;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5112_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5112_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.01;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.01;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.01;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.01;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.01;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_017_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_018_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_019_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 65536;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 1000;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 256000;
                valid = true;
            }
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1000000;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_036_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 0.1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 25.6;
                valid = true;
            }
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 6553.6;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 1677721.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_040_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 65536;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_044_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5121_0100_046_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 0.01;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readUInt8(start + 47) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5141_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5141_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5141_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5141_0100_006_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5141_0100_007_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5141_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5141_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5141_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5141_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_011_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1000;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 256000;
                valid = true;
            }
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1000000;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_022_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_023_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_024_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_025_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_027_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5210_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5221_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5221_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5221_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5221_0100_006_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5221_0100_007_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5221_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5221_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5221_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5221_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5221_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 256;
                valid = true;
            }
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1000;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256000;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1000000;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_016_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 65536;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 65536;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 0.001;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 0.256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65.536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readUInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5231_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 0.01;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_011_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 256;
                valid = true;
            }
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1000;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256000;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1000000;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_021_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_022_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_022_1_1024: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_022_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_022_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_022_1_2048: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_022_1_256: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_022_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_022_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_022_1_4096: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_022_1_512: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_022_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_022_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_022_1_8192: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_024_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_025_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5311_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 65536;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 0.01;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readInt8(start + 37) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 0.01;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_040_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readInt8(start + 40) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_041_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 41 < end) {
                rawValue += buffer.readInt8(start + 41) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_042_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readInt8(start + 42) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_043_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_044_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_045_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_046_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_048_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 256;
                valid = true;
            }
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 65536;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_052_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readUInt8(start + 53) * 256;
                valid = true;
            }
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 65536;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readInt8(start + 55) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5400_0100_056_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readUInt8(start + 57) * 256;
                valid = true;
            }
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 65536;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readInt8(start + 59) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5410_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5410_0100_002_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readInt8(start + 2) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5410_0100_003_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5410_0100_004_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 65536;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5420_0100_000_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 256;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 65536;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5420_0100_004_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 65536;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5420_0100_008_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 65536;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5420_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5510_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5510_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5510_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5510_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5510_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5510_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5510_0100_011_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5510_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5611_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5611_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5611_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5611_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5611_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5611_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5611_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5611_0100_011_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5611_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5611_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_5611_0100_018_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_012_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_012_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_012_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_012_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_012_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_012_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_018_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_019_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_020_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_021_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_024_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_025_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 1;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_027_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_030_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_031_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_032_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_033_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 1;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6610_0100_035_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 35 < end) {
                rawValue += buffer.readUInt8(start + 35) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_012_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_012_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_012_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_012_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_012_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_012_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_018_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_019_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_020_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_021_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_024_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_025_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 1;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_027_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_030_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_6620_0100_031_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_016_2_0_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_020_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_022_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_023_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_024_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_025_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_027_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readUInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_036_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 65536;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_040_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 65536;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readUInt8(start + 43) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_044_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_044_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_044_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_044_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_044_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_044_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_044_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_044_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_044_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_045_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_045_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_045_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_045_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_045_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_046_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_046_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_046_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_046_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_046_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_046_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_046_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_046_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_046_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 1;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readUInt8(start + 47) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_047_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_047_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_047_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_047_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_047_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_047_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_047_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_047_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_048_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 256;
                valid = true;
            }
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 65536;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_052_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 0.01;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readUInt8(start + 53) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_054_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 1;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readUInt8(start + 55) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_056_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readUInt8(start + 57) * 256;
                valid = true;
            }
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 65536;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readUInt8(start + 59) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7101_0100_060_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readUInt8(start + 60) * 1;
                valid = true;
            }
            if (start + 61 < end) {
                rawValue += buffer.readInt8(start + 61) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 65536;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 0.01;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readInt8(start + 37) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 0.01;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_040_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_041_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_042_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_043_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 43 < end) {
                rawValue += buffer.readUInt8(start + 43) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_044_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_048_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 256;
                valid = true;
            }
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 65536;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7112_0100_052_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readUInt8(start + 53) * 256;
                valid = true;
            }
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 65536;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readInt8(start + 55) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7113_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7113_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7113_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7113_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7113_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7113_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7113_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7113_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7113_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7113_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7113_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7113_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7120_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7120_0100_002_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7130_0100_000_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 256;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 65536;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7130_0100_008_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 65536;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7130_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7140_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7140_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7140_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7140_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7140_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7140_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7140_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7140_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7140_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7140_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7140_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7140_0100_024_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7140_0100_025_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7140_0100_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7140_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7140_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7150_0100_000_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 256;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 65536;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7150_0100_008_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 65536;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7150_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_020_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_021_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_022_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_023_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1000;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 256000;
                valid = true;
            }
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1000000;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 256000000;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 1000000000;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 256000000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_032_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_033_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_034_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 0.1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readInt8(start + 37) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 0.1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_042_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_042_2_0_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_044_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 256;
                valid = true;
            }
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 65536;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_048_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 256;
                valid = true;
            }
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 65536;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_052_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 0.001;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readUInt8(start + 53) * 0.256;
                valid = true;
            }
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 65.536;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readInt8(start + 55) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_056_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 0.001;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readUInt8(start + 57) * 0.256;
                valid = true;
            }
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 65.536;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readInt8(start + 59) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_060_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readUInt8(start + 60) * 1;
                valid = true;
            }
            if (start + 61 < end) {
                rawValue += buffer.readInt8(start + 61) * 256;
                valid = true;
            }
            if (start + 62 < end) {
                rawValue += buffer.readUInt8(start + 62) * 1000;
                valid = true;
            }
            if (start + 63 < end) {
                rawValue += buffer.readInt8(start + 63) * 256000;
                valid = true;
            }
            if (start + 64 < end) {
                rawValue += buffer.readUInt8(start + 64) * 1000000;
                valid = true;
            }
            if (start + 65 < end) {
                rawValue += buffer.readInt8(start + 65) * 256000000;
                valid = true;
            }
            if (start + 66 < end) {
                rawValue += buffer.readUInt8(start + 66) * 1000000000;
                valid = true;
            }
            if (start + 67 < end) {
                rawValue += buffer.readInt8(start + 67) * 256000000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7160_0100_068_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 68 < end) {
                rawValue += buffer.readUInt8(start + 68) * 1;
                valid = true;
            }
            if (start + 69 < end) {
                rawValue += buffer.readInt8(start + 69) * 256;
                valid = true;
            }
            if (start + 70 < end) {
                rawValue += buffer.readUInt8(start + 70) * 1000;
                valid = true;
            }
            if (start + 71 < end) {
                rawValue += buffer.readInt8(start + 71) * 256000;
                valid = true;
            }
            if (start + 72 < end) {
                rawValue += buffer.readUInt8(start + 72) * 1000000;
                valid = true;
            }
            if (start + 73 < end) {
                rawValue += buffer.readInt8(start + 73) * 256000000;
                valid = true;
            }
            if (start + 74 < end) {
                rawValue += buffer.readUInt8(start + 74) * 1000000000;
                valid = true;
            }
            if (start + 75 < end) {
                rawValue += buffer.readInt8(start + 75) * 256000000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7161_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7161_0100_002_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7161_0100_003_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 3 < end) {
                rawValue += buffer.readUInt8(start + 3) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7161_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7162_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7162_0100_002_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7162_0100_003_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 3 < end) {
                rawValue += buffer.readUInt8(start + 3) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7162_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7163_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7163_0100_002_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7163_0100_003_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 3 < end) {
                rawValue += buffer.readUInt8(start + 3) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7163_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_020_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_021_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_022_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_023_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1000;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 256000;
                valid = true;
            }
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1000000;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 256000000;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 1000000000;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 256000000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_032_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_033_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_034_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_042_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7210_0100_042_2_0_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7211_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7211_0100_002_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7211_0100_003_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 3 < end) {
                rawValue += buffer.readUInt8(start + 3) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7211_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7212_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7212_0100_002_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7212_0100_003_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 3 < end) {
                rawValue += buffer.readUInt8(start + 3) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7212_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7213_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7213_0100_002_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7213_0100_003_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 3 < end) {
                rawValue += buffer.readUInt8(start + 3) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7213_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_017_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_018_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_019_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_036_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 0.01;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7221_0100_040_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 65536;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_017_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_018_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_019_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_020_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_021_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_022_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_022_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 65536;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_028_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readInt8(start + 28) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_028_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readInt8(start + 28) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_028_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readInt8(start + 28) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_028_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readInt8(start + 28) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_028_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readInt8(start + 28) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_028_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readInt8(start + 28) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_028_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readInt8(start + 28) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_028_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readInt8(start + 28) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_029_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_029_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_029_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_029_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_032_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readInt8(start + 32) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_032_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readInt8(start + 32) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_032_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readInt8(start + 32) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_036_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_036_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_036_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_036_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_036_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_036_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_036_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_036_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_037_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 37 < end) {
                rawValue += buffer.readInt8(start + 37) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_040_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 0.01;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_042_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7231_0100_044_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 256;
                valid = true;
            }
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 65536;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_040_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_044_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_045_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_046_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_047_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readUInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_048_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_049_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_050_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_051_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 51 < end) {
                rawValue += buffer.readUInt8(start + 51) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_052_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_058_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 1;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readUInt8(start + 59) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_060_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readUInt8(start + 60) * 1;
                valid = true;
            }
            if (start + 61 < end) {
                rawValue += buffer.readUInt8(start + 61) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_062_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 62 < end) {
                rawValue += buffer.readUInt8(start + 62) * 1;
                valid = true;
            }
            if (start + 63 < end) {
                rawValue += buffer.readUInt8(start + 63) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_064_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 64 < end) {
                rawValue += buffer.readUInt8(start + 64) * 1;
                valid = true;
            }
            if (start + 65 < end) {
                rawValue += buffer.readUInt8(start + 65) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7311_0100_066_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 66 < end) {
                rawValue += buffer.readUInt8(start + 66) * 1;
                valid = true;
            }
            if (start + 67 < end) {
                rawValue += buffer.readUInt8(start + 67) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7312_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7312_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7312_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7312_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7312_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7312_0100_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7315_0100_000_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 256;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 65536;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readUInt8(start + 3) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7315_0100_004_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 65536;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7315_0100_008_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 65536;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7315_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7315_0100_016_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 65536;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7315_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7315_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 65536;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7315_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7315_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readUInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7315_0100_036_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 0.1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 25.6;
                valid = true;
            }
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 6553.6;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 1677721.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7315_0100_040_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 0.1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 25.6;
                valid = true;
            }
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 6553.6;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readUInt8(start + 43) * 1677721.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7316_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7316_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7316_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7316_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 256;
                valid = true;
            }
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1000;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256000;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1000000;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_040_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_044_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_045_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_046_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_047_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readUInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_048_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_049_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_050_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_051_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 51 < end) {
                rawValue += buffer.readUInt8(start + 51) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_052_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_058_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 1;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readUInt8(start + 59) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_060_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readUInt8(start + 60) * 1;
                valid = true;
            }
            if (start + 61 < end) {
                rawValue += buffer.readUInt8(start + 61) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_062_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 62 < end) {
                rawValue += buffer.readUInt8(start + 62) * 1;
                valid = true;
            }
            if (start + 63 < end) {
                rawValue += buffer.readUInt8(start + 63) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_064_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 64 < end) {
                rawValue += buffer.readUInt8(start + 64) * 1;
                valid = true;
            }
            if (start + 65 < end) {
                rawValue += buffer.readUInt8(start + 65) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7321_0100_066_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 66 < end) {
                rawValue += buffer.readUInt8(start + 66) * 1;
                valid = true;
            }
            if (start + 67 < end) {
                rawValue += buffer.readUInt8(start + 67) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7326_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7326_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7326_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7326_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 256;
                valid = true;
            }
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1000;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256000;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1000000;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 0.1;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 0.1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_030_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 0.1;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_032_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 0.1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readInt8(start + 33) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_034_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 0.1;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 0.1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readInt8(start + 37) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 0.1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_040_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 0.1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readInt8(start + 41) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_042_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 0.1;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_044_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_045_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_046_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_047_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readUInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_048_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_049_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_050_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_051_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 51 < end) {
                rawValue += buffer.readUInt8(start + 51) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_052_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_053_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 53 < end) {
                rawValue += buffer.readUInt8(start + 53) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_054_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_055_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 55 < end) {
                rawValue += buffer.readUInt8(start + 55) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_056_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_057_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 57 < end) {
                rawValue += buffer.readUInt8(start + 57) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_058_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_059_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 59 < end) {
                rawValue += buffer.readUInt8(start + 59) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_060_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readUInt8(start + 60) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_061_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 61 < end) {
                rawValue += buffer.readUInt8(start + 61) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_064_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 64 < end) {
                rawValue += buffer.readUInt8(start + 64) * 1;
                valid = true;
            }
            if (start + 65 < end) {
                rawValue += buffer.readUInt8(start + 65) * 256;
                valid = true;
            }
            if (start + 66 < end) {
                rawValue += buffer.readUInt8(start + 66) * 65536;
                valid = true;
            }
            if (start + 67 < end) {
                rawValue += buffer.readUInt8(start + 67) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_068_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 68 < end) {
                rawValue += buffer.readUInt8(start + 68) * 1;
                valid = true;
            }
            if (start + 69 < end) {
                rawValue += buffer.readUInt8(start + 69) * 256;
                valid = true;
            }
            if (start + 70 < end) {
                rawValue += buffer.readUInt8(start + 70) * 65536;
                valid = true;
            }
            if (start + 71 < end) {
                rawValue += buffer.readUInt8(start + 71) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_072_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 72 < end) {
                rawValue += buffer.readUInt8(start + 72) * 1;
                valid = true;
            }
            if (start + 73 < end) {
                rawValue += buffer.readUInt8(start + 73) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_074_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 74 < end) {
                rawValue += buffer.readUInt8(start + 74) * 1;
                valid = true;
            }
            if (start + 75 < end) {
                rawValue += buffer.readUInt8(start + 75) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_076_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 76 < end) {
                rawValue += buffer.readUInt8(start + 76) * 1;
                valid = true;
            }
            if (start + 77 < end) {
                rawValue += buffer.readUInt8(start + 77) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_078_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 78 < end) {
                rawValue += buffer.readUInt8(start + 78) * 1;
                valid = true;
            }
            if (start + 79 < end) {
                rawValue += buffer.readInt8(start + 79) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7331_0100_080_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 80 < end) {
                rawValue += buffer.readUInt8(start + 80) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7332_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7332_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7332_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7332_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7332_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7332_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7332_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7332_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7332_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7332_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7332_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7333_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7333_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7333_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7333_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7333_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7333_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7333_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7333_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7333_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7333_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7333_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7334_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7334_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7334_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7334_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7334_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7334_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7334_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7334_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7334_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7334_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7334_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7335_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7335_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7335_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7335_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7335_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7335_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7335_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7335_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7335_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7335_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7335_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 0.1;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 0.1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_030_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 0.1;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_036_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 65536;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_040_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 65536;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_044_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 256;
                valid = true;
            }
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 65536;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_048_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 0.01;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_050_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 0.01;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_052_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 0.01;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readInt8(start + 53) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_054_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 0.01;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readInt8(start + 55) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_056_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readInt8(start + 56) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_057_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 57 < end) {
                rawValue += buffer.readInt8(start + 57) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_058_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 58 < end) {
                rawValue += buffer.readInt8(start + 58) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_059_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 59 < end) {
                rawValue += buffer.readInt8(start + 59) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_060_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readInt8(start + 60) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_061_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 61 < end) {
                rawValue += buffer.readInt8(start + 61) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_062_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 62 < end) {
                rawValue += buffer.readInt8(start + 62) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_063_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 63 < end) {
                rawValue += buffer.readInt8(start + 63) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_064_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 64 < end) {
                rawValue += buffer.readInt8(start + 64) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_065_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 65 < end) {
                rawValue += buffer.readInt8(start + 65) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_066_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 66 < end) {
                rawValue += buffer.readInt8(start + 66) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_067_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 67 < end) {
                rawValue += buffer.readInt8(start + 67) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_068_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 68 < end) {
                rawValue += buffer.readInt8(start + 68) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_069_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 69 < end) {
                rawValue += buffer.readInt8(start + 69) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_072_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 72 < end) {
                rawValue += buffer.readUInt8(start + 72) * 0.1;
                valid = true;
            }
            if (start + 73 < end) {
                rawValue += buffer.readInt8(start + 73) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_074_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 74 < end) {
                rawValue += buffer.readUInt8(start + 74) * 0.1;
                valid = true;
            }
            if (start + 75 < end) {
                rawValue += buffer.readInt8(start + 75) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_076_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 76 < end) {
                rawValue += buffer.readUInt8(start + 76) * 0.1;
                valid = true;
            }
            if (start + 77 < end) {
                rawValue += buffer.readInt8(start + 77) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_078_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 78 < end) {
                rawValue += buffer.readUInt8(start + 78) * 0.1;
                valid = true;
            }
            if (start + 79 < end) {
                rawValue += buffer.readInt8(start + 79) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_080_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 80 < end) {
                rawValue += buffer.readUInt8(start + 80) * 0.1;
                valid = true;
            }
            if (start + 81 < end) {
                rawValue += buffer.readInt8(start + 81) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_082_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 82 < end) {
                rawValue += buffer.readUInt8(start + 82) * 0.1;
                valid = true;
            }
            if (start + 83 < end) {
                rawValue += buffer.readInt8(start + 83) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_084_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 84 < end) {
                rawValue += buffer.readUInt8(start + 84) * 1;
                valid = true;
            }
            if (start + 85 < end) {
                rawValue += buffer.readUInt8(start + 85) * 256;
                valid = true;
            }
            if (start + 86 < end) {
                rawValue += buffer.readUInt8(start + 86) * 65536;
                valid = true;
            }
            if (start + 87 < end) {
                rawValue += buffer.readInt8(start + 87) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_088_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 88 < end) {
                rawValue += buffer.readUInt8(start + 88) * 1;
                valid = true;
            }
            if (start + 89 < end) {
                rawValue += buffer.readUInt8(start + 89) * 256;
                valid = true;
            }
            if (start + 90 < end) {
                rawValue += buffer.readUInt8(start + 90) * 65536;
                valid = true;
            }
            if (start + 91 < end) {
                rawValue += buffer.readInt8(start + 91) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_092_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 92 < end) {
                rawValue += buffer.readUInt8(start + 92) * 1;
                valid = true;
            }
            if (start + 93 < end) {
                rawValue += buffer.readUInt8(start + 93) * 256;
                valid = true;
            }
            if (start + 94 < end) {
                rawValue += buffer.readUInt8(start + 94) * 65536;
                valid = true;
            }
            if (start + 95 < end) {
                rawValue += buffer.readInt8(start + 95) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_096_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 96 < end) {
                rawValue += buffer.readUInt8(start + 96) * 1;
                valid = true;
            }
            if (start + 97 < end) {
                rawValue += buffer.readUInt8(start + 97) * 256;
                valid = true;
            }
            if (start + 98 < end) {
                rawValue += buffer.readUInt8(start + 98) * 65536;
                valid = true;
            }
            if (start + 99 < end) {
                rawValue += buffer.readUInt8(start + 99) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_100_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 100 < end) {
                rawValue += buffer.readUInt8(start + 100) * 1;
                valid = true;
            }
            if (start + 101 < end) {
                rawValue += buffer.readUInt8(start + 101) * 256;
                valid = true;
            }
            if (start + 102 < end) {
                rawValue += buffer.readUInt8(start + 102) * 65536;
                valid = true;
            }
            if (start + 103 < end) {
                rawValue += buffer.readUInt8(start + 103) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_104_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 104 < end) {
                rawValue += buffer.readUInt8(start + 104) * 1;
                valid = true;
            }
            if (start + 105 < end) {
                rawValue += buffer.readUInt8(start + 105) * 256;
                valid = true;
            }
            if (start + 106 < end) {
                rawValue += buffer.readUInt8(start + 106) * 65536;
                valid = true;
            }
            if (start + 107 < end) {
                rawValue += buffer.readUInt8(start + 107) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_108_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 108 < end) {
                rawValue += buffer.readUInt8(start + 108) * 1;
                valid = true;
            }
            if (start + 109 < end) {
                rawValue += buffer.readUInt8(start + 109) * 256;
                valid = true;
            }
            if (start + 110 < end) {
                rawValue += buffer.readUInt8(start + 110) * 65536;
                valid = true;
            }
            if (start + 111 < end) {
                rawValue += buffer.readUInt8(start + 111) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_112_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 112 < end) {
                rawValue += buffer.readUInt8(start + 112) * 1;
                valid = true;
            }
            if (start + 113 < end) {
                rawValue += buffer.readUInt8(start + 113) * 256;
                valid = true;
            }
            if (start + 114 < end) {
                rawValue += buffer.readUInt8(start + 114) * 65536;
                valid = true;
            }
            if (start + 115 < end) {
                rawValue += buffer.readUInt8(start + 115) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_116_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 116 < end) {
                rawValue += buffer.readUInt8(start + 116) * 1;
                valid = true;
            }
            if (start + 117 < end) {
                rawValue += buffer.readUInt8(start + 117) * 256;
                valid = true;
            }
            if (start + 118 < end) {
                rawValue += buffer.readUInt8(start + 118) * 65536;
                valid = true;
            }
            if (start + 119 < end) {
                rawValue += buffer.readUInt8(start + 119) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_120_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 120 < end) {
                rawValue += buffer.readUInt8(start + 120) * 1;
                valid = true;
            }
            if (start + 121 < end) {
                rawValue += buffer.readUInt8(start + 121) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_122_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 122 < end) {
                rawValue += buffer.readUInt8(start + 122) * 1;
                valid = true;
            }
            if (start + 123 < end) {
                rawValue += buffer.readUInt8(start + 123) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7341_0100_124_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 124 < end) {
                rawValue += buffer.readUInt8(start + 124) * 1;
                valid = true;
            }
            if (start + 125 < end) {
                rawValue += buffer.readUInt8(start + 125) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7342_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7342_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7342_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7342_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7342_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7342_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7342_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7342_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7342_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7342_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7342_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7343_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7343_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7343_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7343_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7343_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7343_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7343_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7343_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7343_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7343_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7343_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7344_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7344_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7344_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7344_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7344_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7344_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7344_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7344_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7344_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7344_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7344_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7345_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7345_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7345_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7345_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7345_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7345_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7345_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7345_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7345_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7345_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7345_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7346_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7346_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7346_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7346_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7346_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7346_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7346_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7346_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7346_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7346_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7346_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.01;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_020_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_020_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_020_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_021_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_022_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_023_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_027_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_027_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_027_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_027_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_027_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_027_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_030_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 1;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_032_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_034_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 1;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readUInt8(start + 35) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7411_0100_040_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1000;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readUInt8(start + 43) * 256000;
                valid = true;
            }
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1000000;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_016_2_0_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_020_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_022_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_023_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_024_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_025_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_027_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readUInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_036_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 65536;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_040_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 65536;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readUInt8(start + 43) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_044_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_044_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_044_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_044_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_044_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_044_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_044_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_044_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_044_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_045_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_045_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_045_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_045_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_045_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_046_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_046_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_046_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_046_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_046_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_046_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_046_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_046_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_046_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 1;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readUInt8(start + 47) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_047_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_047_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_047_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_047_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_047_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_047_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_047_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_047_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_048_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 256;
                valid = true;
            }
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 65536;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_052_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 0.01;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readUInt8(start + 53) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_054_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 1;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readUInt8(start + 55) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7421_0100_056_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readUInt8(start + 57) * 256;
                valid = true;
            }
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 65536;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readUInt8(start + 59) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_020_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_024_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_025_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_027_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readUInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_036_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 65536;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_040_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 65536;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readUInt8(start + 43) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_044_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_044_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_044_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_044_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_044_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_044_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_045_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_046_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_046_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_046_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_046_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_046_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_046_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_046_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_046_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 1;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readUInt8(start + 47) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_047_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_047_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_047_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_047_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_047_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_047_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_047_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_048_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 256;
                valid = true;
            }
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 65536;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_052_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 0.01;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readUInt8(start + 53) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_054_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 1;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readUInt8(start + 55) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7428_0100_056_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readUInt8(start + 57) * 256;
                valid = true;
            }
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 65536;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readUInt8(start + 59) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_016_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_016_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_016_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_016_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_016_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_016_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_017_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_018_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_019_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_025_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 0.1;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 0.1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 25.6;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 6553.6;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 1677721.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 0.1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 25.6;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 6553.6;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 1677721.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 0.1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readInt8(start + 37) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 0.1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_040_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 0.1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readInt8(start + 41) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_042_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_044_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 256;
                valid = true;
            }
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 65536;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_048_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 256;
                valid = true;
            }
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 65536;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_056_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 0.1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readInt8(start + 57) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7511_0100_058_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 1;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readInt8(start + 59) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7512_0100_000_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 256;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 65536;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7512_0100_004_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 65536;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7512_0100_008_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 65536;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7512_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7512_0100_016_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 65536;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7512_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7512_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7512_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 0.1;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7512_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 0.01;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7512_0100_030_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 0.01;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_020_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_021_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_022_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_023_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_026_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_027_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readUInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_036_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 65536;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_040_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 65536;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readUInt8(start + 43) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_044_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 256;
                valid = true;
            }
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 65536;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readUInt8(start + 47) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_048_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readInt8(start + 48) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_048_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readInt8(start + 48) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_048_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readInt8(start + 48) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_048_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readInt8(start + 48) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_048_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readInt8(start + 48) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_048_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readInt8(start + 48) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_048_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readInt8(start + 48) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_048_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readInt8(start + 48) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_048_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_049_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_049_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_049_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_049_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_049_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_049_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_049_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_049_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_050_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 50 < end) {
                rawValue += buffer.readInt8(start + 50) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_051_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_051_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_051_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_052_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readUInt8(start + 53) * 256;
                valid = true;
            }
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 65536;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readUInt8(start + 55) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_056_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 0.01;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readUInt8(start + 57) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_058_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 1;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readUInt8(start + 59) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7521_0100_060_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readUInt8(start + 60) * 1;
                valid = true;
            }
            if (start + 61 < end) {
                rawValue += buffer.readUInt8(start + 61) * 256;
                valid = true;
            }
            if (start + 62 < end) {
                rawValue += buffer.readUInt8(start + 62) * 65536;
                valid = true;
            }
            if (start + 63 < end) {
                rawValue += buffer.readUInt8(start + 63) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 65536;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 0.01;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readInt8(start + 37) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 0.01;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_040_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_041_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_042_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_043_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 43 < end) {
                rawValue += buffer.readUInt8(start + 43) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_044_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_048_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 256;
                valid = true;
            }
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 65536;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7522_0100_052_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readUInt8(start + 53) * 256;
                valid = true;
            }
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 65536;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readInt8(start + 55) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 0.1;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 0.1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_030_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 0.1;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_032_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 0.1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readInt8(start + 33) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_034_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 0.1;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 0.1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readInt8(start + 37) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 0.1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_040_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 0.1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readInt8(start + 41) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_042_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 0.1;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_044_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 0.1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_046_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 0.1;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_048_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 0.1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_050_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 0.1;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_052_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 0.1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readInt8(start + 53) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_054_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 0.1;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readInt8(start + 55) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_056_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 0.1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readInt8(start + 57) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7523_0100_058_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 0.1;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readInt8(start + 59) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7530_0100_000_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 256;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 65536;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7530_0100_008_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 65536;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7530_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_020_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_021_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_022_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_022_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_023_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_024_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_025_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 1000;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 256000;
                valid = true;
            }
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1000000;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7611_0100_034_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 34 < end) {
                rawValue += buffer.readInt8(start + 34) * 1;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 0.01;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_020_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_021_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_022_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_023_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_024_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readInt8(start + 24) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_025_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 1;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7621_0100_030_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readInt8(start + 30) * 1;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 0.01;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7622_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7622_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7622_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7622_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 256;
                valid = true;
            }
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1000;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256000;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1000000;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_017_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_018_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readInt8(start + 18) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_019_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_020_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_021_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_022_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_022_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_022_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_022_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_022_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readInt8(start + 22) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.01;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7651_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_027_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_028_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_029_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_030_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_031_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_032_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_034_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 1;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readUInt8(start + 35) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_040_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_042_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_043_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 43 < end) {
                rawValue += buffer.readUInt8(start + 43) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_044_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 0.1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_046_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_047_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readUInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_048_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 0.1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_050_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_051_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 51 < end) {
                rawValue += buffer.readUInt8(start + 51) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_052_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 0.1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readInt8(start + 53) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_054_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_055_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 55 < end) {
                rawValue += buffer.readUInt8(start + 55) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_056_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readUInt8(start + 57) * 256;
                valid = true;
            }
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 65536;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readUInt8(start + 59) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7711_0100_060_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readUInt8(start + 60) * 1;
                valid = true;
            }
            if (start + 61 < end) {
                rawValue += buffer.readUInt8(start + 61) * 256;
                valid = true;
            }
            if (start + 62 < end) {
                rawValue += buffer.readUInt8(start + 62) * 65536;
                valid = true;
            }
            if (start + 63 < end) {
                rawValue += buffer.readUInt8(start + 63) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7712_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7712_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7712_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7712_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 256;
                valid = true;
            }
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1000;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256000;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1000000;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_027_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_028_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readInt8(start + 28) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_029_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_030_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readInt8(start + 30) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_031_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_032_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readInt8(start + 32) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_040_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readInt8(start + 40) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_042_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readUInt8(start + 43) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_044_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 0.1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_046_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 1;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readUInt8(start + 47) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_048_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 0.1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_050_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 1;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readUInt8(start + 51) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_052_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 0.1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readInt8(start + 53) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_054_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 1;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readUInt8(start + 55) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_056_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 0.1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readInt8(start + 57) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_058_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 1;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readUInt8(start + 59) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_060_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readInt8(start + 60) * 1;
                valid = true;
            }
            if (start + 61 < end) {
                rawValue += buffer.readInt8(start + 61) * 0.01;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_062_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 62 < end) {
                rawValue += buffer.readUInt8(start + 62) * 1;
                valid = true;
            }
            if (start + 63 < end) {
                rawValue += buffer.readInt8(start + 63) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_064_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 64 < end) {
                rawValue += buffer.readUInt8(start + 64) * 1;
                valid = true;
            }
            if (start + 65 < end) {
                rawValue += buffer.readInt8(start + 65) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_066_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 66 < end) {
                rawValue += buffer.readInt8(start + 66) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7721_0100_067_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 67 < end) {
                rawValue += buffer.readInt8(start + 67) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7722_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7722_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7722_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7722_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 256;
                valid = true;
            }
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1000;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256000;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1000000;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_027_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_028_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readInt8(start + 28) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_029_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_030_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readInt8(start + 30) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_031_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_032_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readInt8(start + 32) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_040_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readInt8(start + 40) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_042_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readUInt8(start + 43) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_044_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 0.1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_046_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 1;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readUInt8(start + 47) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_048_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 0.1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_050_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 1;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readUInt8(start + 51) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_052_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 0.1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readInt8(start + 53) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_054_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 1;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readUInt8(start + 55) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_056_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 0.1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readInt8(start + 57) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_058_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 1;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readUInt8(start + 59) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_060_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readInt8(start + 60) * 1;
                valid = true;
            }
            if (start + 61 < end) {
                rawValue += buffer.readInt8(start + 61) * 0.01;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_062_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 62 < end) {
                rawValue += buffer.readUInt8(start + 62) * 1;
                valid = true;
            }
            if (start + 63 < end) {
                rawValue += buffer.readInt8(start + 63) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_064_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 64 < end) {
                rawValue += buffer.readUInt8(start + 64) * 1;
                valid = true;
            }
            if (start + 65 < end) {
                rawValue += buffer.readInt8(start + 65) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_066_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 66 < end) {
                rawValue += buffer.readInt8(start + 66) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7729_0100_067_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 67 < end) {
                rawValue += buffer.readInt8(start + 67) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_772A_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_772A_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_772A_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_772A_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 256;
                valid = true;
            }
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1000;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256000;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1000000;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7731_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7731_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7731_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7731_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7731_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7731_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7731_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7731_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7731_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7731_0100_017_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7731_0100_018_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7731_0100_019_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7731_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1000;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 256000;
                valid = true;
            }
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1000000;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7731_0100_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_024_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_025_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_027_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_027_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_027_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_027_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_027_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_027_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readUInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7751_0100_039_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_027_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_028_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readInt8(start + 28) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_029_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_030_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readInt8(start + 30) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_031_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_032_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readInt8(start + 32) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_033_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 1;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_1024: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_1048576: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_128: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_16: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_16384: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_16777216: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_2048: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_2097152: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_256: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_262144: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_32: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_32768: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_4: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_4096: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_4194304: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_512: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_524288: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_524288_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_64: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_65536: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_67108864: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_8: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_8192: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_1_8388608: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_036_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 65536;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_040_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_044_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 0.01;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_044_1_0_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_046_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 1;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_048_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_050_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 50 < end) {
                rawValue += buffer.readInt8(start + 50) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_051_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_052_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readUInt8(start + 53) * 256;
                valid = true;
            }
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 65536;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readUInt8(start + 55) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_056_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readUInt8(start + 57) * 256;
                valid = true;
            }
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 65536;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readUInt8(start + 59) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_060_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readUInt8(start + 60) * 1;
                valid = true;
            }
            if (start + 61 < end) {
                rawValue += buffer.readUInt8(start + 61) * 256;
                valid = true;
            }
            if (start + 62 < end) {
                rawValue += buffer.readUInt8(start + 62) * 65536;
                valid = true;
            }
            if (start + 63 < end) {
                rawValue += buffer.readUInt8(start + 63) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_064_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 64 < end) {
                rawValue += buffer.readUInt8(start + 64) * 1;
                valid = true;
            }
            if (start + 65 < end) {
                rawValue += buffer.readUInt8(start + 65) * 256;
                valid = true;
            }
            if (start + 66 < end) {
                rawValue += buffer.readUInt8(start + 66) * 65536;
                valid = true;
            }
            if (start + 67 < end) {
                rawValue += buffer.readUInt8(start + 67) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_068_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 68 < end) {
                rawValue += buffer.readUInt8(start + 68) * 1;
                valid = true;
            }
            if (start + 69 < end) {
                rawValue += buffer.readUInt8(start + 69) * 256;
                valid = true;
            }
            if (start + 70 < end) {
                rawValue += buffer.readUInt8(start + 70) * 65536;
                valid = true;
            }
            if (start + 71 < end) {
                rawValue += buffer.readUInt8(start + 71) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7761_0100_072_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 72 < end) {
                rawValue += buffer.readUInt8(start + 72) * 1;
                valid = true;
            }
            if (start + 73 < end) {
                rawValue += buffer.readUInt8(start + 73) * 256;
                valid = true;
            }
            if (start + 74 < end) {
                rawValue += buffer.readUInt8(start + 74) * 65536;
                valid = true;
            }
            if (start + 75 < end) {
                rawValue += buffer.readUInt8(start + 75) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7762_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7762_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7762_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7762_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 256;
                valid = true;
            }
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1000;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256000;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1000000;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_000_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 256;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 65536;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.01;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 2.56;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 655.36;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 167772.16;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 0.1;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_030_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 1;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_032_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_034_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 1;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readUInt8(start + 35) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 0.1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readInt8(start + 37) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 0.1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_040_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_042_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readUInt8(start + 43) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_044_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_046_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 1;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readUInt8(start + 47) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_048_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 0.1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_050_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 0.1;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_052_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readUInt8(start + 53) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_054_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 1;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readUInt8(start + 55) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_056_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readUInt8(start + 57) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_058_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 1;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readUInt8(start + 59) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_060_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readUInt8(start + 60) * 0.1;
                valid = true;
            }
            if (start + 61 < end) {
                rawValue += buffer.readInt8(start + 61) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_062_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 62 < end) {
                rawValue += buffer.readUInt8(start + 62) * 0.1;
                valid = true;
            }
            if (start + 63 < end) {
                rawValue += buffer.readInt8(start + 63) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_064_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 64 < end) {
                rawValue += buffer.readUInt8(start + 64) * 1;
                valid = true;
            }
            if (start + 65 < end) {
                rawValue += buffer.readUInt8(start + 65) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_066_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 66 < end) {
                rawValue += buffer.readUInt8(start + 66) * 1;
                valid = true;
            }
            if (start + 67 < end) {
                rawValue += buffer.readUInt8(start + 67) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_068_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 68 < end) {
                rawValue += buffer.readUInt8(start + 68) * 1;
                valid = true;
            }
            if (start + 69 < end) {
                rawValue += buffer.readUInt8(start + 69) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_070_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 70 < end) {
                rawValue += buffer.readUInt8(start + 70) * 1;
                valid = true;
            }
            if (start + 71 < end) {
                rawValue += buffer.readUInt8(start + 71) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_072_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 72 < end) {
                rawValue += buffer.readUInt8(start + 72) * 1;
                valid = true;
            }
            if (start + 73 < end) {
                rawValue += buffer.readUInt8(start + 73) * 256;
                valid = true;
            }
            if (start + 74 < end) {
                rawValue += buffer.readUInt8(start + 74) * 65536;
                valid = true;
            }
            if (start + 75 < end) {
                rawValue += buffer.readUInt8(start + 75) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_076_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 76 < end) {
                rawValue += buffer.readUInt8(start + 76) * 1;
                valid = true;
            }
            if (start + 77 < end) {
                rawValue += buffer.readUInt8(start + 77) * 256;
                valid = true;
            }
            if (start + 78 < end) {
                rawValue += buffer.readUInt8(start + 78) * 65536;
                valid = true;
            }
            if (start + 79 < end) {
                rawValue += buffer.readUInt8(start + 79) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_080_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 80 < end) {
                rawValue += buffer.readUInt8(start + 80) * 1;
                valid = true;
            }
            if (start + 81 < end) {
                rawValue += buffer.readUInt8(start + 81) * 256;
                valid = true;
            }
            if (start + 82 < end) {
                rawValue += buffer.readUInt8(start + 82) * 65536;
                valid = true;
            }
            if (start + 83 < end) {
                rawValue += buffer.readUInt8(start + 83) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_084_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 84 < end) {
                rawValue += buffer.readUInt8(start + 84) * 0.01;
                valid = true;
            }
            if (start + 85 < end) {
                rawValue += buffer.readUInt8(start + 85) * 2.56;
                valid = true;
            }
            if (start + 86 < end) {
                rawValue += buffer.readUInt8(start + 86) * 655.36;
                valid = true;
            }
            if (start + 87 < end) {
                rawValue += buffer.readUInt8(start + 87) * 167772.16;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_088_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 88 < end) {
                rawValue += buffer.readUInt8(start + 88) * 1;
                valid = true;
            }
            if (start + 89 < end) {
                rawValue += buffer.readUInt8(start + 89) * 256;
                valid = true;
            }
            if (start + 90 < end) {
                rawValue += buffer.readUInt8(start + 90) * 65536;
                valid = true;
            }
            if (start + 91 < end) {
                rawValue += buffer.readUInt8(start + 91) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_092_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 92 < end) {
                rawValue += buffer.readUInt8(start + 92) * 1;
                valid = true;
            }
            if (start + 93 < end) {
                rawValue += buffer.readUInt8(start + 93) * 256;
                valid = true;
            }
            if (start + 94 < end) {
                rawValue += buffer.readUInt8(start + 94) * 65536;
                valid = true;
            }
            if (start + 95 < end) {
                rawValue += buffer.readUInt8(start + 95) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_096_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 96 < end) {
                rawValue += buffer.readUInt8(start + 96) * 1;
                valid = true;
            }
            if (start + 97 < end) {
                rawValue += buffer.readUInt8(start + 97) * 256;
                valid = true;
            }
            if (start + 98 < end) {
                rawValue += buffer.readUInt8(start + 98) * 65536;
                valid = true;
            }
            if (start + 99 < end) {
                rawValue += buffer.readUInt8(start + 99) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_096_4_0_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 96 < end) {
                rawValue += buffer.readUInt8(start + 96) * 1;
                valid = true;
            }
            if (start + 97 < end) {
                rawValue += buffer.readUInt8(start + 97) * 256;
                valid = true;
            }
            if (start + 98 < end) {
                rawValue += buffer.readUInt8(start + 98) * 65536;
                valid = true;
            }
            if (start + 99 < end) {
                rawValue += buffer.readUInt8(start + 99) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_096_4_0_2: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 96 < end) {
                rawValue += buffer.readUInt8(start + 96) * 1;
                valid = true;
            }
            if (start + 97 < end) {
                rawValue += buffer.readUInt8(start + 97) * 256;
                valid = true;
            }
            if (start + 98 < end) {
                rawValue += buffer.readUInt8(start + 98) * 65536;
                valid = true;
            }
            if (start + 99 < end) {
                rawValue += buffer.readUInt8(start + 99) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_100_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 100 < end) {
                rawValue += buffer.readUInt8(start + 100) * 1;
                valid = true;
            }
            if (start + 101 < end) {
                rawValue += buffer.readUInt8(start + 101) * 256;
                valid = true;
            }
            if (start + 102 < end) {
                rawValue += buffer.readUInt8(start + 102) * 65536;
                valid = true;
            }
            if (start + 103 < end) {
                rawValue += buffer.readUInt8(start + 103) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_100_4_0_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 100 < end) {
                rawValue += buffer.readUInt8(start + 100) * 1;
                valid = true;
            }
            if (start + 101 < end) {
                rawValue += buffer.readUInt8(start + 101) * 256;
                valid = true;
            }
            if (start + 102 < end) {
                rawValue += buffer.readUInt8(start + 102) * 65536;
                valid = true;
            }
            if (start + 103 < end) {
                rawValue += buffer.readUInt8(start + 103) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_104_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 104 < end) {
                rawValue += buffer.readUInt8(start + 104) * 1;
                valid = true;
            }
            if (start + 105 < end) {
                rawValue += buffer.readUInt8(start + 105) * 256;
                valid = true;
            }
            if (start + 106 < end) {
                rawValue += buffer.readUInt8(start + 106) * 65536;
                valid = true;
            }
            if (start + 107 < end) {
                rawValue += buffer.readUInt8(start + 107) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_104_4_0_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 104 < end) {
                rawValue += buffer.readUInt8(start + 104) * 1;
                valid = true;
            }
            if (start + 105 < end) {
                rawValue += buffer.readUInt8(start + 105) * 256;
                valid = true;
            }
            if (start + 106 < end) {
                rawValue += buffer.readUInt8(start + 106) * 65536;
                valid = true;
            }
            if (start + 107 < end) {
                rawValue += buffer.readUInt8(start + 107) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_108_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 108 < end) {
                rawValue += buffer.readUInt8(start + 108) * 1;
                valid = true;
            }
            if (start + 109 < end) {
                rawValue += buffer.readUInt8(start + 109) * 256;
                valid = true;
            }
            if (start + 110 < end) {
                rawValue += buffer.readUInt8(start + 110) * 65536;
                valid = true;
            }
            if (start + 111 < end) {
                rawValue += buffer.readUInt8(start + 111) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_108_4_0_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 108 < end) {
                rawValue += buffer.readUInt8(start + 108) * 1;
                valid = true;
            }
            if (start + 109 < end) {
                rawValue += buffer.readUInt8(start + 109) * 256;
                valid = true;
            }
            if (start + 110 < end) {
                rawValue += buffer.readUInt8(start + 110) * 65536;
                valid = true;
            }
            if (start + 111 < end) {
                rawValue += buffer.readUInt8(start + 111) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_112_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 112 < end) {
                rawValue += buffer.readUInt8(start + 112) * 1;
                valid = true;
            }
            if (start + 113 < end) {
                rawValue += buffer.readUInt8(start + 113) * 256;
                valid = true;
            }
            if (start + 114 < end) {
                rawValue += buffer.readUInt8(start + 114) * 65536;
                valid = true;
            }
            if (start + 115 < end) {
                rawValue += buffer.readUInt8(start + 115) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_112_4_0_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 112 < end) {
                rawValue += buffer.readUInt8(start + 112) * 1;
                valid = true;
            }
            if (start + 113 < end) {
                rawValue += buffer.readUInt8(start + 113) * 256;
                valid = true;
            }
            if (start + 114 < end) {
                rawValue += buffer.readUInt8(start + 114) * 65536;
                valid = true;
            }
            if (start + 115 < end) {
                rawValue += buffer.readUInt8(start + 115) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_116_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 116 < end) {
                rawValue += buffer.readUInt8(start + 116) * 1;
                valid = true;
            }
            if (start + 117 < end) {
                rawValue += buffer.readUInt8(start + 117) * 256;
                valid = true;
            }
            if (start + 118 < end) {
                rawValue += buffer.readUInt8(start + 118) * 65536;
                valid = true;
            }
            if (start + 119 < end) {
                rawValue += buffer.readUInt8(start + 119) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_116_4_0_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 116 < end) {
                rawValue += buffer.readUInt8(start + 116) * 1;
                valid = true;
            }
            if (start + 117 < end) {
                rawValue += buffer.readUInt8(start + 117) * 256;
                valid = true;
            }
            if (start + 118 < end) {
                rawValue += buffer.readUInt8(start + 118) * 65536;
                valid = true;
            }
            if (start + 119 < end) {
                rawValue += buffer.readUInt8(start + 119) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_120_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 120 < end) {
                rawValue += buffer.readUInt8(start + 120) * 1;
                valid = true;
            }
            if (start + 121 < end) {
                rawValue += buffer.readUInt8(start + 121) * 256;
                valid = true;
            }
            if (start + 122 < end) {
                rawValue += buffer.readUInt8(start + 122) * 65536;
                valid = true;
            }
            if (start + 123 < end) {
                rawValue += buffer.readUInt8(start + 123) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_120_4_0_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 120 < end) {
                rawValue += buffer.readUInt8(start + 120) * 1;
                valid = true;
            }
            if (start + 121 < end) {
                rawValue += buffer.readUInt8(start + 121) * 256;
                valid = true;
            }
            if (start + 122 < end) {
                rawValue += buffer.readUInt8(start + 122) * 65536;
                valid = true;
            }
            if (start + 123 < end) {
                rawValue += buffer.readUInt8(start + 123) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_124_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 124 < end) {
                rawValue += buffer.readUInt8(start + 124) * 1;
                valid = true;
            }
            if (start + 125 < end) {
                rawValue += buffer.readUInt8(start + 125) * 256;
                valid = true;
            }
            if (start + 126 < end) {
                rawValue += buffer.readUInt8(start + 126) * 65536;
                valid = true;
            }
            if (start + 127 < end) {
                rawValue += buffer.readUInt8(start + 127) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_124_4_0_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 124 < end) {
                rawValue += buffer.readUInt8(start + 124) * 1;
                valid = true;
            }
            if (start + 125 < end) {
                rawValue += buffer.readUInt8(start + 125) * 256;
                valid = true;
            }
            if (start + 126 < end) {
                rawValue += buffer.readUInt8(start + 126) * 65536;
                valid = true;
            }
            if (start + 127 < end) {
                rawValue += buffer.readUInt8(start + 127) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_128_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 128 < end) {
                rawValue += buffer.readUInt8(start + 128) * 1;
                valid = true;
            }
            if (start + 129 < end) {
                rawValue += buffer.readUInt8(start + 129) * 256;
                valid = true;
            }
            if (start + 130 < end) {
                rawValue += buffer.readUInt8(start + 130) * 65536;
                valid = true;
            }
            if (start + 131 < end) {
                rawValue += buffer.readUInt8(start + 131) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7774_0100_128_4_0_1: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 128 < end) {
                rawValue += buffer.readUInt8(start + 128) * 1;
                valid = true;
            }
            if (start + 129 < end) {
                rawValue += buffer.readUInt8(start + 129) * 256;
                valid = true;
            }
            if (start + 130 < end) {
                rawValue += buffer.readUInt8(start + 130) * 65536;
                valid = true;
            }
            if (start + 131 < end) {
                rawValue += buffer.readUInt8(start + 131) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readUInt8(start + 23) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_027_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_028_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readInt8(start + 28) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_029_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_030_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readInt8(start + 30) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_031_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_032_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readInt8(start + 32) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_040_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readInt8(start + 40) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_042_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readUInt8(start + 43) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_044_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 0.1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_046_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 1;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readUInt8(start + 47) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_048_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 0.1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_050_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 1;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readUInt8(start + 51) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_052_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 0.1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readInt8(start + 53) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_054_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 1;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readUInt8(start + 55) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_056_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 0.1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readInt8(start + 57) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_058_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 1;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readUInt8(start + 59) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_060_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readInt8(start + 60) * 1;
                valid = true;
            }
            if (start + 61 < end) {
                rawValue += buffer.readInt8(start + 61) * 0.01;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_062_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 62 < end) {
                rawValue += buffer.readUInt8(start + 62) * 1;
                valid = true;
            }
            if (start + 63 < end) {
                rawValue += buffer.readInt8(start + 63) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_064_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 64 < end) {
                rawValue += buffer.readUInt8(start + 64) * 1;
                valid = true;
            }
            if (start + 65 < end) {
                rawValue += buffer.readInt8(start + 65) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_066_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 66 < end) {
                rawValue += buffer.readInt8(start + 66) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7821_0100_067_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 67 < end) {
                rawValue += buffer.readInt8(start + 67) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7822_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7822_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7822_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7822_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readUInt8(start + 7) * 256;
                valid = true;
            }
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1000;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256000;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1000000;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_002_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readInt8(start + 2) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_003_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_006_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readInt8(start + 6) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_007_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_017_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_018_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readInt8(start + 18) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_019_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7830_0100_027_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_017_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_019_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 19 < end) {
                rawValue += buffer.readUInt8(start + 19) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1000;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 256000;
                valid = true;
            }
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1000000;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_030_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 1;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readUInt8(start + 31) * 0.01;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_032_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 0.1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readInt8(start + 33) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_034_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 0.1;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readInt8(start + 37) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7D04_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 0.1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readUInt8(start + 39) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 0.1;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 0.1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_030_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 1;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_032_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 0.1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readInt8(start + 33) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_034_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 0.1;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 0.1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readInt8(start + 37) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 0.1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_040_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 65536;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_044_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 256;
                valid = true;
            }
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 65536;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_048_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 256;
                valid = true;
            }
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 65536;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_052_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readUInt8(start + 53) * 256;
                valid = true;
            }
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 65536;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readInt8(start + 55) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_056_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readUInt8(start + 57) * 256;
                valid = true;
            }
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 65536;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readInt8(start + 59) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_060_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readUInt8(start + 60) * 1;
                valid = true;
            }
            if (start + 61 < end) {
                rawValue += buffer.readUInt8(start + 61) * 256;
                valid = true;
            }
            if (start + 62 < end) {
                rawValue += buffer.readUInt8(start + 62) * 65536;
                valid = true;
            }
            if (start + 63 < end) {
                rawValue += buffer.readInt8(start + 63) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_064_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 64 < end) {
                rawValue += buffer.readUInt8(start + 64) * 1;
                valid = true;
            }
            if (start + 65 < end) {
                rawValue += buffer.readUInt8(start + 65) * 256;
                valid = true;
            }
            if (start + 66 < end) {
                rawValue += buffer.readUInt8(start + 66) * 65536;
                valid = true;
            }
            if (start + 67 < end) {
                rawValue += buffer.readInt8(start + 67) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_068_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 68 < end) {
                rawValue += buffer.readUInt8(start + 68) * 0.01;
                valid = true;
            }
            if (start + 69 < end) {
                rawValue += buffer.readInt8(start + 69) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_070_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 70 < end) {
                rawValue += buffer.readUInt8(start + 70) * 0.01;
                valid = true;
            }
            if (start + 71 < end) {
                rawValue += buffer.readInt8(start + 71) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_072_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 72 < end) {
                rawValue += buffer.readUInt8(start + 72) * 0.01;
                valid = true;
            }
            if (start + 73 < end) {
                rawValue += buffer.readInt8(start + 73) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_074_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 74 < end) {
                rawValue += buffer.readUInt8(start + 74) * 0.01;
                valid = true;
            }
            if (start + 75 < end) {
                rawValue += buffer.readInt8(start + 75) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_076_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 76 < end) {
                rawValue += buffer.readUInt8(start + 76) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_077_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 77 < end) {
                rawValue += buffer.readUInt8(start + 77) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_078_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 78 < end) {
                rawValue += buffer.readUInt8(start + 78) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_079_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 79 < end) {
                rawValue += buffer.readUInt8(start + 79) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_080_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 80 < end) {
                rawValue += buffer.readUInt8(start + 80) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_081_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 81 < end) {
                rawValue += buffer.readUInt8(start + 81) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_082_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 82 < end) {
                rawValue += buffer.readUInt8(start + 82) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_083_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 83 < end) {
                rawValue += buffer.readUInt8(start + 83) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_084_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 84 < end) {
                rawValue += buffer.readUInt8(start + 84) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_085_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 85 < end) {
                rawValue += buffer.readUInt8(start + 85) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_086_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 86 < end) {
                rawValue += buffer.readUInt8(start + 86) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_087_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 87 < end) {
                rawValue += buffer.readUInt8(start + 87) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_088_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 88 < end) {
                rawValue += buffer.readUInt8(start + 88) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_089_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 89 < end) {
                rawValue += buffer.readUInt8(start + 89) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_092_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 92 < end) {
                rawValue += buffer.readUInt8(start + 92) * 1;
                valid = true;
            }
            if (start + 93 < end) {
                rawValue += buffer.readUInt8(start + 93) * 256;
                valid = true;
            }
            if (start + 94 < end) {
                rawValue += buffer.readUInt8(start + 94) * 65536;
                valid = true;
            }
            if (start + 95 < end) {
                rawValue += buffer.readInt8(start + 95) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E11_0100_096_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 96 < end) {
                rawValue += buffer.readUInt8(start + 96) * 1;
                valid = true;
            }
            if (start + 97 < end) {
                rawValue += buffer.readUInt8(start + 97) * 256;
                valid = true;
            }
            if (start + 98 < end) {
                rawValue += buffer.readUInt8(start + 98) * 65536;
                valid = true;
            }
            if (start + 99 < end) {
                rawValue += buffer.readInt8(start + 99) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_014_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 0.1;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 0.1;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 0.1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_030_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 0.1;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_032_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 0.1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readInt8(start + 33) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_034_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 0.1;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_036_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 0.1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readInt8(start + 37) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_038_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 0.1;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_040_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 0.1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readInt8(start + 41) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_042_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 0.1;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_044_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 0.1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_046_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 0.1;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_048_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 0.1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readInt8(start + 49) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_050_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 0.1;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_052_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 0.1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readInt8(start + 53) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_054_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 0.1;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readInt8(start + 55) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_056_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 0.1;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readInt8(start + 57) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E12_0100_058_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 0.1;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readInt8(start + 59) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E20_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E20_0100_002_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E30_0100_000_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 256;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 65536;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E30_0100_008_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 65536;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7E30_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_000_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 256;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 65536;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_004_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 25.6;
                valid = true;
            }
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 6553.6;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 1677721.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_008_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 25.6;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 6553.6;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 1677721.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 25.6;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 6553.6;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 1677721.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_016_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 25.6;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 6553.6;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 1677721.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 25.6;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 6553.6;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 1677721.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 25.6;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 6553.6;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 1677721.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 65536;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_036_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 0.1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 25.6;
                valid = true;
            }
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 6553.6;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 1677721.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_040_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 0.1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 25.6;
                valid = true;
            }
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 6553.6;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 1677721.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_044_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 0.01;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 2.56;
                valid = true;
            }
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 655.36;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 167772.16;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_048_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 0.01;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 2.56;
                valid = true;
            }
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 655.36;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 167772.16;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_052_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readUInt8(start + 53) * 256;
                valid = true;
            }
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 65536;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readInt8(start + 55) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_056_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 0.01;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readUInt8(start + 57) * 2.56;
                valid = true;
            }
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 655.36;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readInt8(start + 59) * 167772.16;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_060_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readUInt8(start + 60) * 0.01;
                valid = true;
            }
            if (start + 61 < end) {
                rawValue += buffer.readUInt8(start + 61) * 2.56;
                valid = true;
            }
            if (start + 62 < end) {
                rawValue += buffer.readUInt8(start + 62) * 655.36;
                valid = true;
            }
            if (start + 63 < end) {
                rawValue += buffer.readInt8(start + 63) * 167772.16;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_064_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 64 < end) {
                rawValue += buffer.readUInt8(start + 64) * 1;
                valid = true;
            }
            if (start + 65 < end) {
                rawValue += buffer.readUInt8(start + 65) * 256;
                valid = true;
            }
            if (start + 66 < end) {
                rawValue += buffer.readUInt8(start + 66) * 65536;
                valid = true;
            }
            if (start + 67 < end) {
                rawValue += buffer.readInt8(start + 67) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F61_0100_068_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 68 < end) {
                rawValue += buffer.readUInt8(start + 68) * 1;
                valid = true;
            }
            if (start + 69 < end) {
                rawValue += buffer.readInt8(start + 69) * 256;
                valid = true;
            }
            if (start + 70 < end) {
                rawValue += buffer.readUInt8(start + 70) * 1000;
                valid = true;
            }
            if (start + 71 < end) {
                rawValue += buffer.readInt8(start + 71) * 256000;
                valid = true;
            }
            if (start + 72 < end) {
                rawValue += buffer.readUInt8(start + 72) * 1000000;
                valid = true;
            }
            if (start + 73 < end) {
                rawValue += buffer.readInt8(start + 73) * 256000000;
                valid = true;
            }
            if (start + 74 < end) {
                rawValue += buffer.readUInt8(start + 74) * 1000000000;
                valid = true;
            }
            if (start + 75 < end) {
                rawValue += buffer.readInt8(start + 75) * 256000000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_000_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 256;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 65536;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_004_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.01;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 2.56;
                valid = true;
            }
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 655.36;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 167772.16;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_008_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.001;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 0.256;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 65.536;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 0.001;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 0.256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65.536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_016_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.001;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 0.256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 65.536;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.01;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 2.56;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 655.36;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 167772.16;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_028_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 0.01;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 2.56;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 655.36;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 167772.16;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 0.01;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 2.56;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 655.36;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 167772.16;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_036_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 0.01;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 2.56;
                valid = true;
            }
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 655.36;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 167772.16;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_040_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 0.01;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 2.56;
                valid = true;
            }
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 655.36;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 167772.16;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_044_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 0.01;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 2.56;
                valid = true;
            }
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 655.36;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 167772.16;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_048_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 0.001;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 0.256;
                valid = true;
            }
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 65.536;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_052_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 0.001;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readUInt8(start + 53) * 0.256;
                valid = true;
            }
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 65.536;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readInt8(start + 55) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_056_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 56 < end) {
                rawValue += buffer.readUInt8(start + 56) * 0.001;
                valid = true;
            }
            if (start + 57 < end) {
                rawValue += buffer.readUInt8(start + 57) * 0.256;
                valid = true;
            }
            if (start + 58 < end) {
                rawValue += buffer.readUInt8(start + 58) * 65.536;
                valid = true;
            }
            if (start + 59 < end) {
                rawValue += buffer.readInt8(start + 59) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_060_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 60 < end) {
                rawValue += buffer.readUInt8(start + 60) * 0.001;
                valid = true;
            }
            if (start + 61 < end) {
                rawValue += buffer.readUInt8(start + 61) * 0.256;
                valid = true;
            }
            if (start + 62 < end) {
                rawValue += buffer.readUInt8(start + 62) * 65.536;
                valid = true;
            }
            if (start + 63 < end) {
                rawValue += buffer.readInt8(start + 63) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_064_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 64 < end) {
                rawValue += buffer.readUInt8(start + 64) * 0.001;
                valid = true;
            }
            if (start + 65 < end) {
                rawValue += buffer.readUInt8(start + 65) * 0.256;
                valid = true;
            }
            if (start + 66 < end) {
                rawValue += buffer.readUInt8(start + 66) * 65.536;
                valid = true;
            }
            if (start + 67 < end) {
                rawValue += buffer.readInt8(start + 67) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_068_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 68 < end) {
                rawValue += buffer.readUInt8(start + 68) * 0.001;
                valid = true;
            }
            if (start + 69 < end) {
                rawValue += buffer.readUInt8(start + 69) * 0.256;
                valid = true;
            }
            if (start + 70 < end) {
                rawValue += buffer.readUInt8(start + 70) * 65.536;
                valid = true;
            }
            if (start + 71 < end) {
                rawValue += buffer.readInt8(start + 71) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F62_0100_072_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 72 < end) {
                rawValue += buffer.readUInt8(start + 72) * 0.01;
                valid = true;
            }
            if (start + 73 < end) {
                rawValue += buffer.readUInt8(start + 73) * 2.56;
                valid = true;
            }
            if (start + 74 < end) {
                rawValue += buffer.readUInt8(start + 74) * 655.36;
                valid = true;
            }
            if (start + 75 < end) {
                rawValue += buffer.readInt8(start + 75) * 167772.16;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F63_0100_000_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 25.6;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 6553.6;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 1677721.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F63_0100_004_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.001;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 0.256;
                valid = true;
            }
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 65.536;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 16777.216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F63_0100_008_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 65536;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F64_0100_000_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 25.6;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 6553.6;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 1677721.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F64_0100_004_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 256;
                valid = true;
            }
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 65536;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F64_0100_008_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 256;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 65536;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F64_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F64_0100_016_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 65536;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F65_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F65_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F65_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F65_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F65_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F65_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.1;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F65_0100_012_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 256;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 65536;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F65_0100_016_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 65536;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F65_0100_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F65_0100_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F65_0100_024_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 0.01;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readInt8(start + 25) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F65_0100_026_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 0.01;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F65_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 256;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 1000;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 256000;
                valid = true;
            }
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1000000;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readInt8(start + 33) * 256000000;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 1000000000;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 256000000000;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F65_0100_036_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 65536;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 0.1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readInt8(start + 1) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_002_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 0.1;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_004_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 0.1;
                valid = true;
            }
            if (start + 5 < end) {
                rawValue += buffer.readInt8(start + 5) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_006_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 0.1;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_008_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 0.1;
                valid = true;
            }
            if (start + 9 < end) {
                rawValue += buffer.readInt8(start + 9) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_010_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 0.01;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 2.56;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_012_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            if (start + 13 < end) {
                rawValue += buffer.readInt8(start + 13) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_016_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 256;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 65536;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_020_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 256;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 65536;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_024_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 256;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 65536;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_028_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            if (start + 29 < end) {
                rawValue += buffer.readInt8(start + 29) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_030_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_032_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 256;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 65536;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_036_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 256;
                valid = true;
            }
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 65536;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_040_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 256;
                valid = true;
            }
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 65536;
                valid = true;
            }
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_044_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 256;
                valid = true;
            }
            if (start + 46 < end) {
                rawValue += buffer.readUInt8(start + 46) * 65536;
                valid = true;
            }
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_048_4_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 48 < end) {
                rawValue += buffer.readUInt8(start + 48) * 1;
                valid = true;
            }
            if (start + 49 < end) {
                rawValue += buffer.readUInt8(start + 49) * 256;
                valid = true;
            }
            if (start + 50 < end) {
                rawValue += buffer.readUInt8(start + 50) * 65536;
                valid = true;
            }
            if (start + 51 < end) {
                rawValue += buffer.readInt8(start + 51) * 16777216;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_052_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 52 < end) {
                rawValue += buffer.readUInt8(start + 52) * 1;
                valid = true;
            }
            if (start + 53 < end) {
                rawValue += buffer.readInt8(start + 53) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _0010_7F71_0100_054_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 54 < end) {
                rawValue += buffer.readUInt8(start + 54) * 0.1;
                valid = true;
            }
            if (start + 55 < end) {
                rawValue += buffer.readInt8(start + 55) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _4420_0000_0200_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _4420_0000_0200_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 0.1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _4420_0000_0200_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _4420_0000_0200_011_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _4420_0000_0200_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _4420_0000_0200_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _4420_0000_0200_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_000_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 256;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_009_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 0.1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_010_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 10 < end) {
                rawValue += buffer.readInt8(start + 10) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_011_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 11 < end) {
                rawValue += buffer.readUInt8(start + 11) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_013_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_014_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_015_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 15 < end) {
                rawValue += buffer.readUInt8(start + 15) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_016_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 0.1;
                valid = true;
            }
            if (start + 17 < end) {
                rawValue += buffer.readInt8(start + 17) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_018_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 0.1;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_020_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 0.1;
                valid = true;
            }
            if (start + 21 < end) {
                rawValue += buffer.readInt8(start + 21) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_022_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 0.1;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_024_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_025_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_026_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_027_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 27 < end) {
                rawValue += buffer.readUInt8(start + 27) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_028_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_029_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6510_0000_0200_030_2_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 0.1;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 25.6;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_000_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readInt8(start + 0) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_001_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 1;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 256;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_004_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readInt8(start + 4) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_005_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 1;
                valid = true;
            }
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 256;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_009_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 1;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 256;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_013_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 256;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_017_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 1;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 256;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_020_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_021_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 1;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 256;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_024_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readInt8(start + 24) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_025_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 1;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 256;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_028_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readInt8(start + 28) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_029_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 1;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 256;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_032_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readInt8(start + 32) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_033_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 1;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 256;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_036_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_037_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 1;
                valid = true;
            }
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 256;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_040_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readInt8(start + 40) * 0.1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_041_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 41 < end) {
                rawValue += buffer.readInt8(start + 41) * 0.1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_042_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readInt8(start + 42) * 0.1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_043_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 43 < end) {
                rawValue += buffer.readInt8(start + 43) * 0.1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_044_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readInt8(start + 44) * 0.1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_045_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readInt8(start + 45) * 0.1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_046_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 46 < end) {
                rawValue += buffer.readInt8(start + 46) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6520_0000_0200_047_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 47 < end) {
                rawValue += buffer.readInt8(start + 47) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_000_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 0 < end) {
                rawValue += buffer.readUInt8(start + 0) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_001_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 1 < end) {
                rawValue += buffer.readUInt8(start + 1) * 1;
                valid = true;
            }
            if (start + 2 < end) {
                rawValue += buffer.readUInt8(start + 2) * 256;
                valid = true;
            }
            if (start + 3 < end) {
                rawValue += buffer.readInt8(start + 3) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_004_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 4 < end) {
                rawValue += buffer.readUInt8(start + 4) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_005_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 5 < end) {
                rawValue += buffer.readUInt8(start + 5) * 1;
                valid = true;
            }
            if (start + 6 < end) {
                rawValue += buffer.readUInt8(start + 6) * 256;
                valid = true;
            }
            if (start + 7 < end) {
                rawValue += buffer.readInt8(start + 7) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_008_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 8 < end) {
                rawValue += buffer.readUInt8(start + 8) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_009_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 9 < end) {
                rawValue += buffer.readUInt8(start + 9) * 1;
                valid = true;
            }
            if (start + 10 < end) {
                rawValue += buffer.readUInt8(start + 10) * 256;
                valid = true;
            }
            if (start + 11 < end) {
                rawValue += buffer.readInt8(start + 11) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_012_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 12 < end) {
                rawValue += buffer.readUInt8(start + 12) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_013_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 13 < end) {
                rawValue += buffer.readUInt8(start + 13) * 1;
                valid = true;
            }
            if (start + 14 < end) {
                rawValue += buffer.readUInt8(start + 14) * 256;
                valid = true;
            }
            if (start + 15 < end) {
                rawValue += buffer.readInt8(start + 15) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_016_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 16 < end) {
                rawValue += buffer.readUInt8(start + 16) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_017_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 17 < end) {
                rawValue += buffer.readUInt8(start + 17) * 1;
                valid = true;
            }
            if (start + 18 < end) {
                rawValue += buffer.readUInt8(start + 18) * 256;
                valid = true;
            }
            if (start + 19 < end) {
                rawValue += buffer.readInt8(start + 19) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_020_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 20 < end) {
                rawValue += buffer.readUInt8(start + 20) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_021_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 21 < end) {
                rawValue += buffer.readUInt8(start + 21) * 1;
                valid = true;
            }
            if (start + 22 < end) {
                rawValue += buffer.readUInt8(start + 22) * 256;
                valid = true;
            }
            if (start + 23 < end) {
                rawValue += buffer.readInt8(start + 23) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_024_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 24 < end) {
                rawValue += buffer.readUInt8(start + 24) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_025_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 25 < end) {
                rawValue += buffer.readUInt8(start + 25) * 1;
                valid = true;
            }
            if (start + 26 < end) {
                rawValue += buffer.readUInt8(start + 26) * 256;
                valid = true;
            }
            if (start + 27 < end) {
                rawValue += buffer.readInt8(start + 27) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_028_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 28 < end) {
                rawValue += buffer.readUInt8(start + 28) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_029_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 29 < end) {
                rawValue += buffer.readUInt8(start + 29) * 1;
                valid = true;
            }
            if (start + 30 < end) {
                rawValue += buffer.readUInt8(start + 30) * 256;
                valid = true;
            }
            if (start + 31 < end) {
                rawValue += buffer.readInt8(start + 31) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_032_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 32 < end) {
                rawValue += buffer.readUInt8(start + 32) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_033_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 33 < end) {
                rawValue += buffer.readUInt8(start + 33) * 1;
                valid = true;
            }
            if (start + 34 < end) {
                rawValue += buffer.readUInt8(start + 34) * 256;
                valid = true;
            }
            if (start + 35 < end) {
                rawValue += buffer.readInt8(start + 35) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_036_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 36 < end) {
                rawValue += buffer.readUInt8(start + 36) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_037_3_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 37 < end) {
                rawValue += buffer.readUInt8(start + 37) * 1;
                valid = true;
            }
            if (start + 38 < end) {
                rawValue += buffer.readUInt8(start + 38) * 256;
                valid = true;
            }
            if (start + 39 < end) {
                rawValue += buffer.readInt8(start + 39) * 65536;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_040_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 40 < end) {
                rawValue += buffer.readUInt8(start + 40) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_041_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 41 < end) {
                rawValue += buffer.readUInt8(start + 41) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_042_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 42 < end) {
                rawValue += buffer.readUInt8(start + 42) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_043_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 43 < end) {
                rawValue += buffer.readUInt8(start + 43) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_044_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 44 < end) {
                rawValue += buffer.readUInt8(start + 44) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

        _6650_0000_0200_045_1_0: function(buffer, start, end) {
            var rawValue = 0, valid = false;
            if (start + 45 < end) {
                rawValue += buffer.readUInt8(start + 45) * 1;
                valid = true;
            }
            
            return (valid ? rawValue : null);
        },

    };



    var deviceSpecs = {

        _0000: {
            name: 'Broadcast'
        },
        
        _0010: {
            name: 'DFA'
        },
        
        _0015: {
            name: 'Standard-Infos'
        },
        
        _0020: {
            name: 'Computer'
        },
        
        _0040: {
            name: 'SD3 / GAx'
        },
        
        _0050: {
            name: 'DL2'
        },
        
        _0053: {
            name: 'DL3'
        },
        
        _1111: {
            name: 'EC1'
        },
        
        _1120: {
            name: 'DeltaSol AL-E'
        },
        
        _2000: {
            name: 'Digital Sensor #0'
        },
        
        _2001: {
            name: 'Digital Sensor #1'
        },
        
        _2002: {
            name: 'Digital Sensor #2'
        },
        
        _2003: {
            name: 'Digital Sensor #3'
        },
        
        _2004: {
            name: 'Digital Sensor #4'
        },
        
        _2005: {
            name: 'Digital Sensor #5'
        },
        
        _2006: {
            name: 'Digital Sensor #6'
        },
        
        _2007: {
            name: 'Digital Sensor #7'
        },
        
        _2008: {
            name: 'Digital Sensor #8'
        },
        
        _2009: {
            name: 'Digital Sensor #9'
        },
        
        _200A: {
            name: 'Digital Sensor #10'
        },
        
        _200B: {
            name: 'Digital Sensor #11'
        },
        
        _200C: {
            name: 'Digital Sensor #12'
        },
        
        _200D: {
            name: 'Digital Sensor #13'
        },
        
        _200E: {
            name: 'Digital Sensor #14'
        },
        
        _200F: {
            name: 'Digital Sensor #15'
        },
        
        _2010: {
            name: 'Digital Sensor #16'
        },
        
        _2011: {
            name: 'Digital Sensor #17'
        },
        
        _2012: {
            name: 'Digital Sensor #18'
        },
        
        _2013: {
            name: 'Digital Sensor #19'
        },
        
        _2014: {
            name: 'Digital Sensor #20'
        },
        
        _2015: {
            name: 'Digital Sensor #21'
        },
        
        _2016: {
            name: 'Digital Sensor #22'
        },
        
        _2017: {
            name: 'Digital Sensor #23'
        },
        
        _2018: {
            name: 'Digital Sensor #24'
        },
        
        _2019: {
            name: 'Digital Sensor #25'
        },
        
        _201A: {
            name: 'Digital Sensor #26'
        },
        
        _201B: {
            name: 'Digital Sensor #27'
        },
        
        _201C: {
            name: 'Digital Sensor #28'
        },
        
        _201D: {
            name: 'Digital Sensor #29'
        },
        
        _201E: {
            name: 'Digital Sensor #30'
        },
        
        _201F: {
            name: 'Digital Sensor #31'
        },
        
        _2020: {
            name: 'Digital Sensor #32'
        },
        
        _2021: {
            name: 'Digital Sensor #33'
        },
        
        _2022: {
            name: 'Digital Sensor #34'
        },
        
        _2023: {
            name: 'Digital Sensor #35'
        },
        
        _2024: {
            name: 'Digital Sensor #36'
        },
        
        _2025: {
            name: 'Digital Sensor #37'
        },
        
        _2026: {
            name: 'Digital Sensor #38'
        },
        
        _2027: {
            name: 'Digital Sensor #39'
        },
        
        _2028: {
            name: 'Digital Sensor #40'
        },
        
        _2029: {
            name: 'Digital Sensor #41'
        },
        
        _202A: {
            name: 'Digital Sensor #42'
        },
        
        _202B: {
            name: 'Digital Sensor #43'
        },
        
        _202C: {
            name: 'Digital Sensor #44'
        },
        
        _202D: {
            name: 'Digital Sensor #45'
        },
        
        _202E: {
            name: 'Digital Sensor #46'
        },
        
        _202F: {
            name: 'Digital Sensor #47'
        },
        
        _2030: {
            name: 'Digital Sensor #48'
        },
        
        _2031: {
            name: 'Digital Sensor #49'
        },
        
        _2032: {
            name: 'Digital Sensor #50'
        },
        
        _2033: {
            name: 'Digital Sensor #51'
        },
        
        _2034: {
            name: 'Digital Sensor #52'
        },
        
        _2035: {
            name: 'Digital Sensor #53'
        },
        
        _2036: {
            name: 'Digital Sensor #54'
        },
        
        _2037: {
            name: 'Digital Sensor #55'
        },
        
        _2038: {
            name: 'Digital Sensor #56'
        },
        
        _2039: {
            name: 'Digital Sensor #57'
        },
        
        _203A: {
            name: 'Digital Sensor #58'
        },
        
        _203B: {
            name: 'Digital Sensor #59'
        },
        
        _203C: {
            name: 'Digital Sensor #60'
        },
        
        _203D: {
            name: 'Digital Sensor #61'
        },
        
        _203E: {
            name: 'Digital Sensor #62'
        },
        
        _203F: {
            name: 'Digital Sensor #63'
        },
        
        _2040: {
            name: 'Digital Sensor #64'
        },
        
        _2041: {
            name: 'Digital Sensor #65'
        },
        
        _2042: {
            name: 'Digital Sensor #66'
        },
        
        _2043: {
            name: 'Digital Sensor #67'
        },
        
        _2044: {
            name: 'Digital Sensor #68'
        },
        
        _2045: {
            name: 'Digital Sensor #69'
        },
        
        _2046: {
            name: 'Digital Sensor #70'
        },
        
        _2047: {
            name: 'Digital Sensor #71'
        },
        
        _2048: {
            name: 'Digital Sensor #72'
        },
        
        _2049: {
            name: 'Digital Sensor #73'
        },
        
        _204A: {
            name: 'Digital Sensor #74'
        },
        
        _204B: {
            name: 'Digital Sensor #75'
        },
        
        _204C: {
            name: 'Digital Sensor #76'
        },
        
        _204D: {
            name: 'Digital Sensor #77'
        },
        
        _204E: {
            name: 'Digital Sensor #78'
        },
        
        _204F: {
            name: 'Digital Sensor #79'
        },
        
        _2050: {
            name: 'Digital Sensor #80'
        },
        
        _2051: {
            name: 'Digital Sensor #81'
        },
        
        _2052: {
            name: 'Digital Sensor #82'
        },
        
        _2053: {
            name: 'Digital Sensor #83'
        },
        
        _2054: {
            name: 'Digital Sensor #84'
        },
        
        _2055: {
            name: 'Digital Sensor #85'
        },
        
        _2056: {
            name: 'Digital Sensor #86'
        },
        
        _2057: {
            name: 'Digital Sensor #87'
        },
        
        _2058: {
            name: 'Digital Sensor #88'
        },
        
        _2059: {
            name: 'Digital Sensor #89'
        },
        
        _205A: {
            name: 'Digital Sensor #90'
        },
        
        _205B: {
            name: 'Digital Sensor #91'
        },
        
        _205C: {
            name: 'Digital Sensor #92'
        },
        
        _205D: {
            name: 'Digital Sensor #93'
        },
        
        _205E: {
            name: 'Digital Sensor #94'
        },
        
        _205F: {
            name: 'Digital Sensor #95'
        },
        
        _2060: {
            name: 'Digital Sensor #96'
        },
        
        _2061: {
            name: 'Digital Sensor #97'
        },
        
        _2062: {
            name: 'Digital Sensor #98'
        },
        
        _2063: {
            name: 'Digital Sensor #99'
        },
        
        _2064: {
            name: 'Digital Sensor #100'
        },
        
        _2065: {
            name: 'Digital Sensor #101'
        },
        
        _2066: {
            name: 'Digital Sensor #102'
        },
        
        _2067: {
            name: 'Digital Sensor #103'
        },
        
        _2068: {
            name: 'Digital Sensor #104'
        },
        
        _2069: {
            name: 'Digital Sensor #105'
        },
        
        _206A: {
            name: 'Digital Sensor #106'
        },
        
        _206B: {
            name: 'Digital Sensor #107'
        },
        
        _206C: {
            name: 'Digital Sensor #108'
        },
        
        _206D: {
            name: 'Digital Sensor #109'
        },
        
        _206E: {
            name: 'Digital Sensor #110'
        },
        
        _206F: {
            name: 'Digital Sensor #111'
        },
        
        _2070: {
            name: 'Digital Sensor #112'
        },
        
        _2071: {
            name: 'Digital Sensor #113'
        },
        
        _2072: {
            name: 'Digital Sensor #114'
        },
        
        _2073: {
            name: 'Digital Sensor #115'
        },
        
        _2074: {
            name: 'Digital Sensor #116'
        },
        
        _2075: {
            name: 'Digital Sensor #117'
        },
        
        _2076: {
            name: 'Digital Sensor #118'
        },
        
        _2077: {
            name: 'Digital Sensor #119'
        },
        
        _2078: {
            name: 'Digital Sensor #120'
        },
        
        _2079: {
            name: 'Digital Sensor #121'
        },
        
        _207A: {
            name: 'Digital Sensor #122'
        },
        
        _207B: {
            name: 'Digital Sensor #123'
        },
        
        _207C: {
            name: 'Digital Sensor #124'
        },
        
        _207D: {
            name: 'Digital Sensor #125'
        },
        
        _207E: {
            name: 'Digital Sensor #126'
        },
        
        _207F: {
            name: 'Digital Sensor #127'
        },
        
        _2111: {
            name: 'TLR2'
        },
        
        _2211: {
            name: 'DeltaSol CS Plus'
        },
        
        _2231: {
            name: 'Oranier HK [Regler]'
        },
        
        _2232: {
            name: 'Oranier HK [WMZ1]'
        },
        
        _2251: {
            name: 'DeltaSol SL [Regler]'
        },
        
        _2252: {
            name: 'DeltaSol SL [WMZ1]'
        },
        
        _3011: {
            name: 'WMZ-L10'
        },
        
        _3112: {
            name: 'Diemasol A'
        },
        
        _3211: {
            name: 'EL1'
        },
        
        _3221: {
            name: 'DeltaSol Pro'
        },
        
        _3231: {
            name: 'DeltaSol B'
        },
        
        _3241: {
            name: 'DT4 (B)'
        },
        
        _3251: {
            name: 'DeltaSol BS'
        },
        
        _3261: {
            name: 'DeltaSol BS (DT4)'
        },
        
        _3271: {
            name: 'ConergyDT5'
        },
        
        _3311: {
            name: 'Diemasol C'
        },
        
        _4010: {
            name: 'WMZ #0'
        },
        
        _4011: {
            name: 'WMZ #1'
        },
        
        _4012: {
            name: 'WMZ #2'
        },
        
        _4013: {
            name: 'WMZ #3'
        },
        
        _4014: {
            name: 'WMZ #4'
        },
        
        _4015: {
            name: 'WMZ #5'
        },
        
        _4016: {
            name: 'WMZ #6'
        },
        
        _4017: {
            name: 'WMZ #7'
        },
        
        _4018: {
            name: 'WMZ #8'
        },
        
        _4019: {
            name: 'WMZ #9'
        },
        
        _401A: {
            name: 'WMZ #10'
        },
        
        _401B: {
            name: 'WMZ #11'
        },
        
        _401C: {
            name: 'WMZ #12'
        },
        
        _401D: {
            name: 'WMZ #13'
        },
        
        _401E: {
            name: 'WMZ #14'
        },
        
        _401F: {
            name: 'WMZ #15'
        },
        
        _4021: {
            name: 'GF-Display'
        },
        
        _4111: {
            name: 'DeltaSol AL'
        },
        
        _4211: {
            name: 'SKSC1/2'
        },
        
        _4212: {
            name: 'DeltaSol C'
        },
        
        _4213: {
            name: 'SKSC2 HE'
        },
        
        _4214: {
            name: 'SKSC2 HE'
        },
        
        _4221: {
            name: 'DeltaSol BS Plus'
        },
        
        _4223: {
            name: 'DeltaSol BS Plus BTU'
        },
        
        _4224: {
            name: 'CS2.2'
        },
        
        _4225: {
            name: 'CS1.2'
        },
        
        _4231: {
            name: 'Frista'
        },
        
        _4241: {
            name: 'Huber - REGLOfresh / Felix [Regler]'
        },
        
        _4251: {
            name: 'DSPlus UMSYS [Regler]'
        },
        
        _4252: {
            name: 'BS Solex US'
        },
        
        _4258: {
            name: 'SolarNor Drainback'
        },
        
        _4261: {
            name: 'DeltaSol E SorTech [Regler]'
        },
        
        _4265: {
            name: 'Aton DeltaSol BS'
        },
        
        _4278: {
            name: 'DeltaSol BS/DrainBack'
        },
        
        _4279: {
            name: 'DeltaSol BS/DrainBack (Fahrenheit)'
        },
        
        _427A: {
            name: 'DeltaSol BS/DrainBack (Fahrenheit/BTU)'
        },
        
        _427B: {
            name: 'DeltaSol BS 2009'
        },
        
        _4311: {
            name: 'Drainback DeDietrich'
        },
        
        _4312: {
            name: 'DeDietrich Drainback (Control)'
        },
        
        _4321: {
            name: 'DeltaSol MiniPool'
        },
        
        _4410: {
            name: 'MSR44 #0'
        },
        
        _4411: {
            name: 'MSR44 #1'
        },
        
        _4412: {
            name: 'MSR44 #2'
        },
        
        _4413: {
            name: 'MSR44 #3'
        },
        
        _4414: {
            name: 'MSR44 #4'
        },
        
        _4415: {
            name: 'MSR44 #5'
        },
        
        _4416: {
            name: 'MSR44 #6'
        },
        
        _4417: {
            name: 'MSR44 #7'
        },
        
        _4418: {
            name: 'MSR44 #8'
        },
        
        _4419: {
            name: 'MSR44 #9'
        },
        
        _441A: {
            name: 'MSR44 #10'
        },
        
        _441B: {
            name: 'MSR44 #11'
        },
        
        _441C: {
            name: 'MSR44 #12'
        },
        
        _441D: {
            name: 'MSR44 #13'
        },
        
        _441E: {
            name: 'MSR44 #14'
        },
        
        _441F: {
            name: 'MSR44 #15'
        },
        
        _4420: {
            name: 'HKM1 #0'
        },
        
        _4421: {
            name: 'HKM1 #1'
        },
        
        _4422: {
            name: 'HKM1 #2'
        },
        
        _4423: {
            name: 'HKM1 #3'
        },
        
        _4424: {
            name: 'HKM1 #4'
        },
        
        _4425: {
            name: 'HKM1 #5'
        },
        
        _4426: {
            name: 'HKM1 #6'
        },
        
        _4427: {
            name: 'HKM1 #7'
        },
        
        _4428: {
            name: 'HKM1 #8'
        },
        
        _4429: {
            name: 'HKM1 #9'
        },
        
        _442A: {
            name: 'HKM1 #10'
        },
        
        _442B: {
            name: 'HKM1 #11'
        },
        
        _442C: {
            name: 'HKM1 #12'
        },
        
        _442D: {
            name: 'HKM1 #13'
        },
        
        _442E: {
            name: 'HKM1 #14'
        },
        
        _442F: {
            name: 'HKM1 #15'
        },
        
        _5111: {
            name: 'DeltaSol D'
        },
        
        _5112: {
            name: 'Speicherofenregler'
        },
        
        _5121: {
            name: 'FriwaMini'
        },
        
        _5141: {
            name: 'Tuxhorn PKE'
        },
        
        _5210: {
            name: 'DeltaSol Plus'
        },
        
        _5221: {
            name: 'DT4 (MS)'
        },
        
        _5231: {
            name: 'nemux'
        },
        
        _5311: {
            name: 'X-Control'
        },
        
        _5400: {
            name: 'DeltaTherm HC [Regler]'
        },
        
        _5410: {
            name: 'DeltaTherm HC [Heizkreis #0]'
        },
        
        _5411: {
            name: 'DeltaTherm HC [Heizkreis #1]'
        },
        
        _5412: {
            name: 'DeltaTherm HC [Heizkreis #2]'
        },
        
        _5413: {
            name: 'DeltaTherm HC [Heizkreis #3]'
        },
        
        _5414: {
            name: 'DeltaTherm HC [Heizkreis #4]'
        },
        
        _5415: {
            name: 'DeltaTherm HC [Heizkreis #5]'
        },
        
        _5416: {
            name: 'DeltaTherm HC [Heizkreis #6]'
        },
        
        _5417: {
            name: 'DeltaTherm HC [Heizkreis #7]'
        },
        
        _5418: {
            name: 'DeltaTherm HC [Heizkreis #8]'
        },
        
        _5419: {
            name: 'DeltaTherm HC [Heizkreis #9]'
        },
        
        _541A: {
            name: 'DeltaTherm HC [Heizkreis #10]'
        },
        
        _541B: {
            name: 'DeltaTherm HC [Heizkreis #11]'
        },
        
        _541C: {
            name: 'DeltaTherm HC [Heizkreis #12]'
        },
        
        _541D: {
            name: 'DeltaTherm HC [Heizkreis #13]'
        },
        
        _541E: {
            name: 'DeltaTherm HC [Heizkreis #14]'
        },
        
        _541F: {
            name: 'DeltaTherm HC [Heizkreis #15]'
        },
        
        _5420: {
            name: 'DeltaTherm HC [WMZ #0]'
        },
        
        _5421: {
            name: 'DeltaTherm HC [WMZ #1]'
        },
        
        _5422: {
            name: 'DeltaTherm HC [WMZ #2]'
        },
        
        _5423: {
            name: 'DeltaTherm HC [WMZ #3]'
        },
        
        _5424: {
            name: 'DeltaTherm HC [WMZ #4]'
        },
        
        _5425: {
            name: 'DeltaTherm HC [WMZ #5]'
        },
        
        _5426: {
            name: 'DeltaTherm HC [WMZ #6]'
        },
        
        _5427: {
            name: 'DeltaTherm HC [WMZ #7]'
        },
        
        _5428: {
            name: 'DeltaTherm HC [WMZ #8]'
        },
        
        _5429: {
            name: 'DeltaTherm HC [WMZ #9]'
        },
        
        _542A: {
            name: 'DeltaTherm HC [WMZ #10]'
        },
        
        _542B: {
            name: 'DeltaTherm HC [WMZ #11]'
        },
        
        _542C: {
            name: 'DeltaTherm HC [WMZ #12]'
        },
        
        _542D: {
            name: 'DeltaTherm HC [WMZ #13]'
        },
        
        _542E: {
            name: 'DeltaTherm HC [WMZ #14]'
        },
        
        _542F: {
            name: 'DeltaTherm HC [WMZ #15]'
        },
        
        _5510: {
            name: 'EL2/3'
        },
        
        _5611: {
            name: 'DeltaTherm FK'
        },
        
        _6510: {
            name: 'HKM2'
        },
        
        _6520: {
            name: 'MSR65 #0'
        },
        
        _6521: {
            name: 'MSR65 #1'
        },
        
        _6522: {
            name: 'MSR65 #2'
        },
        
        _6523: {
            name: 'MSR65 #3'
        },
        
        _6524: {
            name: 'MSR65 #4'
        },
        
        _6525: {
            name: 'MSR65 #5'
        },
        
        _6526: {
            name: 'MSR65 #6'
        },
        
        _6527: {
            name: 'MSR65 #7'
        },
        
        _6528: {
            name: 'MSR65 #8'
        },
        
        _6529: {
            name: 'MSR65 #9'
        },
        
        _652A: {
            name: 'MSR65 #10'
        },
        
        _652B: {
            name: 'MSR65 #11'
        },
        
        _652C: {
            name: 'MSR65 #12'
        },
        
        _652D: {
            name: 'MSR65 #13'
        },
        
        _652E: {
            name: 'MSR65 #14'
        },
        
        _652F: {
            name: 'MSR65 #15'
        },
        
        _6610: {
            name: 'Midi Pro'
        },
        
        _6620: {
            name: 'SunGo XL'
        },
        
        _6650: {
            name: 'EM #0'
        },
        
        _6651: {
            name: 'EM #1'
        },
        
        _6652: {
            name: 'EM #2'
        },
        
        _6653: {
            name: 'EM #3'
        },
        
        _6654: {
            name: 'EM #4'
        },
        
        _6655: {
            name: 'EM #5'
        },
        
        _6656: {
            name: 'EM #6'
        },
        
        _6657: {
            name: 'EM #7'
        },
        
        _6658: {
            name: 'EM #8'
        },
        
        _6659: {
            name: 'EM #9'
        },
        
        _665A: {
            name: 'EM #10'
        },
        
        _665B: {
            name: 'EM #11'
        },
        
        _665C: {
            name: 'EM #12'
        },
        
        _665D: {
            name: 'EM #13'
        },
        
        _665E: {
            name: 'EM #14'
        },
        
        _665F: {
            name: 'EM #15'
        },
        
        _7101: {
            name: 'DeltaSol BX WMZ'
        },
        
        _7112: {
            name: 'DeltaSol BX Plus [Regler]'
        },
        
        _7113: {
            name: 'DeltaSol BX Plus [Module]'
        },
        
        _7120: {
            name: 'DeltaSol BX Plus [Heizkreis #0]'
        },
        
        _7121: {
            name: 'DeltaSol BX Plus [Heizkreis #1]'
        },
        
        _7122: {
            name: 'DeltaSol BX Plus [Heizkreis #2]'
        },
        
        _7123: {
            name: 'DeltaSol BX Plus [Heizkreis #3]'
        },
        
        _7124: {
            name: 'DeltaSol BX Plus [Heizkreis #4]'
        },
        
        _7125: {
            name: 'DeltaSol BX Plus [Heizkreis #5]'
        },
        
        _7126: {
            name: 'DeltaSol BX Plus [Heizkreis #6]'
        },
        
        _7127: {
            name: 'DeltaSol BX Plus [Heizkreis #7]'
        },
        
        _7128: {
            name: 'DeltaSol BX Plus [Heizkreis #8]'
        },
        
        _7129: {
            name: 'DeltaSol BX Plus [Heizkreis #9]'
        },
        
        _712A: {
            name: 'DeltaSol BX Plus [Heizkreis #10]'
        },
        
        _712B: {
            name: 'DeltaSol BX Plus [Heizkreis #11]'
        },
        
        _712C: {
            name: 'DeltaSol BX Plus [Heizkreis #12]'
        },
        
        _712D: {
            name: 'DeltaSol BX Plus [Heizkreis #13]'
        },
        
        _712E: {
            name: 'DeltaSol BX Plus [Heizkreis #14]'
        },
        
        _712F: {
            name: 'DeltaSol BX Plus [Heizkreis #15]'
        },
        
        _7130: {
            name: 'DeltaSol BX Plus [WMZ #0]'
        },
        
        _7131: {
            name: 'DeltaSol BX Plus [WMZ #1]'
        },
        
        _7132: {
            name: 'DeltaSol BX Plus [WMZ #2]'
        },
        
        _7133: {
            name: 'DeltaSol BX Plus [WMZ #3]'
        },
        
        _7134: {
            name: 'DeltaSol BX Plus [WMZ #4]'
        },
        
        _7135: {
            name: 'DeltaSol BX Plus [WMZ #5]'
        },
        
        _7136: {
            name: 'DeltaSol BX Plus [WMZ #6]'
        },
        
        _7137: {
            name: 'DeltaSol BX Plus [WMZ #7]'
        },
        
        _7138: {
            name: 'DeltaSol BX Plus [WMZ #8]'
        },
        
        _7139: {
            name: 'DeltaSol BX Plus [WMZ #9]'
        },
        
        _713A: {
            name: 'DeltaSol BX Plus [WMZ #10]'
        },
        
        _713B: {
            name: 'DeltaSol BX Plus [WMZ #11]'
        },
        
        _713C: {
            name: 'DeltaSol BX Plus [WMZ #12]'
        },
        
        _713D: {
            name: 'DeltaSol BX Plus [WMZ #13]'
        },
        
        _713E: {
            name: 'DeltaSol BX Plus [WMZ #14]'
        },
        
        _713F: {
            name: 'DeltaSol BX Plus [WMZ #15]'
        },
        
        _7140: {
            name: 'DeltaSol BX Pro[Regler]'
        },
        
        _7150: {
            name: 'DeltaSol BX Pro[WMZ #0]'
        },
        
        _7151: {
            name: 'DeltaSol BX Pro[WMZ #1]'
        },
        
        _7152: {
            name: 'DeltaSol BX Pro[WMZ #2]'
        },
        
        _7153: {
            name: 'DeltaSol BX Pro[WMZ #3]'
        },
        
        _7154: {
            name: 'DeltaSol BX Pro[WMZ #4]'
        },
        
        _7155: {
            name: 'DeltaSol BX Pro[WMZ #5]'
        },
        
        _7156: {
            name: 'DeltaSol BX Pro[WMZ #6]'
        },
        
        _7157: {
            name: 'DeltaSol BX Pro[WMZ #7]'
        },
        
        _7158: {
            name: 'DeltaSol BX Pro[WMZ #8]'
        },
        
        _7159: {
            name: 'DeltaSol BX Pro[WMZ #9]'
        },
        
        _715A: {
            name: 'DeltaSol BX Pro[WMZ #10]'
        },
        
        _715B: {
            name: 'DeltaSol BX Pro[WMZ #11]'
        },
        
        _715C: {
            name: 'DeltaSol BX Pro[WMZ #12]'
        },
        
        _715D: {
            name: 'DeltaSol BX Pro[WMZ #13]'
        },
        
        _715E: {
            name: 'DeltaSol BX Pro[WMZ #14]'
        },
        
        _715F: {
            name: 'DeltaSol BX Pro[WMZ #15]'
        },
        
        _7160: {
            name: 'SKS3HE'
        },
        
        _7161: {
            name: 'SKSC3HE [HK1]'
        },
        
        _7162: {
            name: 'SKSC3HE [HK2]'
        },
        
        _7163: {
            name: 'SKSC3HE [HK3]'
        },
        
        _7210: {
            name: 'SKSR 1/2/3'
        },
        
        _7211: {
            name: 'SKSC3 [HK1]'
        },
        
        _7212: {
            name: 'SKSC3 [HK2]'
        },
        
        _7213: {
            name: 'SKSC3 [HK3]'
        },
        
        _7221: {
            name: 'DrainBloC'
        },
        
        _7231: {
            name: 'SC25'
        },
        
        _7311: {
            name: 'DeltaSol M [Regler]'
        },
        
        _7312: {
            name: 'DeltaSol M [HK1]'
        },
        
        _7313: {
            name: 'DeltaSol M [HK2]'
        },
        
        _7315: {
            name: 'DeltaSol M [Volumen]'
        },
        
        _7316: {
            name: 'DeltaSol M [WMZ1]'
        },
        
        _7317: {
            name: 'DeltaSol M [WMZ2]'
        },
        
        _7321: {
            name: 'Vitosolic 200 [Regler]'
        },
        
        _7326: {
            name: 'Vitosolic 200 [WMZ1]'
        },
        
        _7327: {
            name: 'Vitosolic 200 [WMZ2]'
        },
        
        _7331: {
            name: 'SLR'
        },
        
        _7332: {
            name: 'SLR-Erweiterungsmodul #01'
        },
        
        _7333: {
            name: 'SLR-Erweiterungsmodul #02'
        },
        
        _7334: {
            name: 'SLR-Erweiterungsmodul #03'
        },
        
        _7335: {
            name: 'SLR-Erweiterungsmodul #04'
        },
        
        _7341: {
            name: 'SLR XT'
        },
        
        _7342: {
            name: 'SLR XT-Erweiterungsmodul 1'
        },
        
        _7343: {
            name: 'SLR XT-Erweiterungsmodul 2'
        },
        
        _7344: {
            name: 'SLR XT-Erweiterungsmodul 3'
        },
        
        _7345: {
            name: 'SLR XT-Erweiterungsmodul 4'
        },
        
        _7346: {
            name: 'SLR XT-Erweiterungsmodul 5'
        },
        
        _7411: {
            name: 'DeltaSol ES'
        },
        
        _7421: {
            name: 'DeltaSol BX'
        },
        
        _7422: {
            name: 'IZEN DTi2'
        },
        
        _7428: {
            name: 'DeltaSol BXL'
        },
        
        _7451: {
            name: 'Kioto SLM'
        },
        
        _7511: {
            name: 'SOLTEX-Regler [Teil 1]'
        },
        
        _7512: {
            name: 'SOLTEX-Regler [Teil 2]'
        },
        
        _7521: {
            name: 'Regtronic RQ-B'
        },
        
        _7522: {
            name: 'Regtronic RX-B [Regler]'
        },
        
        _7523: {
            name: 'Regtronic RX-B [Module]'
        },
        
        _7530: {
            name: 'Regtronic RX-B [WMZ #0]'
        },
        
        _7531: {
            name: 'Regtronic RX-B [WMZ #1]'
        },
        
        _7532: {
            name: 'Regtronic RX-B [WMZ #2]'
        },
        
        _7533: {
            name: 'Regtronic RX-B [WMZ #3]'
        },
        
        _7534: {
            name: 'Regtronic RX-B [WMZ #4]'
        },
        
        _7535: {
            name: 'Regtronic RX-B [WMZ #5]'
        },
        
        _7536: {
            name: 'Regtronic RX-B [WMZ #6]'
        },
        
        _7537: {
            name: 'Regtronic RX-B [WMZ #7]'
        },
        
        _7538: {
            name: 'Regtronic RX-B [WMZ #8]'
        },
        
        _7539: {
            name: 'Regtronic RX-B [WMZ #9]'
        },
        
        _753A: {
            name: 'Regtronic RX-B [WMZ #10]'
        },
        
        _753B: {
            name: 'Regtronic RX-B [WMZ #11]'
        },
        
        _753C: {
            name: 'Regtronic RX-B [WMZ #12]'
        },
        
        _753D: {
            name: 'Regtronic RX-B [WMZ #13]'
        },
        
        _753E: {
            name: 'Regtronic RX-B [WMZ #14]'
        },
        
        _753F: {
            name: 'Regtronic RX-B [WMZ #15]'
        },
        
        _7611: {
            name: 'Friwa'
        },
        
        _7621: {
            name: 'SOLEX [Regler]'
        },
        
        _7622: {
            name: 'SOLEX [WMZ]'
        },
        
        _7651: {
            name: 'FriWa Kaskadenmaster Version 1'
        },
        
        _7711: {
            name: 'Multitronic [Regler]'
        },
        
        _7712: {
            name: 'Multitronic [WMZ]'
        },
        
        _7721: {
            name: 'DeltaSol E [Regler]'
        },
        
        _7722: {
            name: 'DeltaSol E [WMZ]'
        },
        
        _7729: {
            name: 'DeltaSol E Fahrenheit [Regler]'
        },
        
        _772A: {
            name: 'DeltaSol E Fahrenheit [WMZ]'
        },
        
        _7731: {
            name: 'SOLTOP DeltaSol S2/S3'
        },
        
        _7751: {
            name: 'DeDietrich Diemasol C v2007'
        },
        
        _7761: {
            name: 'DeltaSol Pool'
        },
        
        _7762: {
            name: 'DeltaSol Pool [WMZ]'
        },
        
        _7771: {
            name: 'DDS-Crawler'
        },
        
        _7772: {
            name: 'RPT-Testsoftware'
        },
        
        _7773: {
            name: 'RPT-Steuerbox'
        },
        
        _7774: {
            name: 'EMZ/CME'
        },
        
        _7821: {
            name: 'COSMO Multi [Regler]'
        },
        
        _7822: {
            name: 'COSMO Multi [WMZ]'
        },
        
        _7831: {
            name: 'COSMO Multi HK 1 Estrichtrockung [Modul 1]'
        },
        
        _7832: {
            name: 'COSMO Multi HK 2 Estrichtrockung [Modul 2]'
        },
        
        _7833: {
            name: 'COSMO Multi HK 3 Estrichtrockung [Modul 3]'
        },
        
        _7834: {
            name: 'COSMO Multi HK Estrichtrockung [Lokal]'
        },
        
        _7900: {
            name: 'R-Wandler'
        },
        
        _7D04: {
            name: 'FRISTA-mix'
        },
        
        _7E11: {
            name: 'DeltaSol MX [Regler]'
        },
        
        _7E12: {
            name: 'DeltaSol MX [Module]'
        },
        
        _7E20: {
            name: 'DeltaSol MX [Heizkreis #0]'
        },
        
        _7E21: {
            name: 'DeltaSol MX [Heizkreis #1]'
        },
        
        _7E22: {
            name: 'DeltaSol MX [Heizkreis #2]'
        },
        
        _7E23: {
            name: 'DeltaSol MX [Heizkreis #3]'
        },
        
        _7E24: {
            name: 'DeltaSol MX [Heizkreis #4]'
        },
        
        _7E25: {
            name: 'DeltaSol MX [Heizkreis #5]'
        },
        
        _7E26: {
            name: 'DeltaSol MX [Heizkreis #6]'
        },
        
        _7E27: {
            name: 'DeltaSol MX [Heizkreis #7]'
        },
        
        _7E28: {
            name: 'DeltaSol MX [Heizkreis #8]'
        },
        
        _7E29: {
            name: 'DeltaSol MX [Heizkreis #9]'
        },
        
        _7E2A: {
            name: 'DeltaSol MX [Heizkreis #10]'
        },
        
        _7E2B: {
            name: 'DeltaSol MX [Heizkreis #11]'
        },
        
        _7E2C: {
            name: 'DeltaSol MX [Heizkreis #12]'
        },
        
        _7E2D: {
            name: 'DeltaSol MX [Heizkreis #13]'
        },
        
        _7E2E: {
            name: 'DeltaSol MX [Heizkreis #14]'
        },
        
        _7E2F: {
            name: 'DeltaSol MX [Heizkreis #15]'
        },
        
        _7E30: {
            name: 'DeltaSol MX [WMZ #0]'
        },
        
        _7E31: {
            name: 'DeltaSol MX [WMZ #1]'
        },
        
        _7E32: {
            name: 'DeltaSol MX [WMZ #2]'
        },
        
        _7E33: {
            name: 'DeltaSol MX [WMZ #3]'
        },
        
        _7E34: {
            name: 'DeltaSol MX [WMZ #4]'
        },
        
        _7E35: {
            name: 'DeltaSol MX [WMZ #5]'
        },
        
        _7E36: {
            name: 'DeltaSol MX [WMZ #6]'
        },
        
        _7E37: {
            name: 'DeltaSol MX [WMZ #7]'
        },
        
        _7E38: {
            name: 'DeltaSol MX [WMZ #8]'
        },
        
        _7E39: {
            name: 'DeltaSol MX [WMZ #9]'
        },
        
        _7E3A: {
            name: 'DeltaSol MX [WMZ #10]'
        },
        
        _7E3B: {
            name: 'DeltaSol MX [WMZ #11]'
        },
        
        _7E3C: {
            name: 'DeltaSol MX [WMZ #12]'
        },
        
        _7E3D: {
            name: 'DeltaSol MX [WMZ #13]'
        },
        
        _7E3E: {
            name: 'DeltaSol MX [WMZ #14]'
        },
        
        _7E3F: {
            name: 'DeltaSol MX [WMZ #15]'
        },
        
        _7E71: {
            name: 'EMV-Software'
        },
        
        _7F61: {
            name: 'IOC-Modul [Messwerte]'
        },
        
        _7F62: {
            name: 'IOC-Modul [Tagesbilanz]'
        },
        
        _7F63: {
            name: 'IOC-Modul [Entnahmekreis]'
        },
        
        _7F64: {
            name: 'IOC-Modul [Debug-Werte]'
        },
        
        _7F65: {
            name: 'IOC-Modul [Messwerte_1s]'
        },
        
        _7F71: {
            name: 'DeltaSol FCS'
        },
        
    };



    var getDeviceSpecification = function(selfAddress, peerAddress) {
        var deviceSpec;
        if ((selfAddress === 0x0000) && (true)) {
            deviceSpec = deviceSpecs._0000;
        } else if ((selfAddress === 0x0010) && (true)) {
            deviceSpec = deviceSpecs._0010;
        } else if ((selfAddress === 0x0015) && (true)) {
            deviceSpec = deviceSpecs._0015;
        } else if ((selfAddress === 0x0020) && (true)) {
            deviceSpec = deviceSpecs._0020;
        } else if ((selfAddress === 0x0040) && (true)) {
            deviceSpec = deviceSpecs._0040;
        } else if ((selfAddress === 0x0050) && (true)) {
            deviceSpec = deviceSpecs._0050;
        } else if ((selfAddress === 0x0053) && (true)) {
            deviceSpec = deviceSpecs._0053;
        } else if ((selfAddress === 0x1111) && (true)) {
            deviceSpec = deviceSpecs._1111;
        } else if ((selfAddress === 0x1120) && (true)) {
            deviceSpec = deviceSpecs._1120;
        } else if ((selfAddress === 0x2000) && (true)) {
            deviceSpec = deviceSpecs._2000;
        } else if ((selfAddress === 0x2001) && (true)) {
            deviceSpec = deviceSpecs._2001;
        } else if ((selfAddress === 0x2002) && (true)) {
            deviceSpec = deviceSpecs._2002;
        } else if ((selfAddress === 0x2003) && (true)) {
            deviceSpec = deviceSpecs._2003;
        } else if ((selfAddress === 0x2004) && (true)) {
            deviceSpec = deviceSpecs._2004;
        } else if ((selfAddress === 0x2005) && (true)) {
            deviceSpec = deviceSpecs._2005;
        } else if ((selfAddress === 0x2006) && (true)) {
            deviceSpec = deviceSpecs._2006;
        } else if ((selfAddress === 0x2007) && (true)) {
            deviceSpec = deviceSpecs._2007;
        } else if ((selfAddress === 0x2008) && (true)) {
            deviceSpec = deviceSpecs._2008;
        } else if ((selfAddress === 0x2009) && (true)) {
            deviceSpec = deviceSpecs._2009;
        } else if ((selfAddress === 0x200A) && (true)) {
            deviceSpec = deviceSpecs._200A;
        } else if ((selfAddress === 0x200B) && (true)) {
            deviceSpec = deviceSpecs._200B;
        } else if ((selfAddress === 0x200C) && (true)) {
            deviceSpec = deviceSpecs._200C;
        } else if ((selfAddress === 0x200D) && (true)) {
            deviceSpec = deviceSpecs._200D;
        } else if ((selfAddress === 0x200E) && (true)) {
            deviceSpec = deviceSpecs._200E;
        } else if ((selfAddress === 0x200F) && (true)) {
            deviceSpec = deviceSpecs._200F;
        } else if ((selfAddress === 0x2010) && (true)) {
            deviceSpec = deviceSpecs._2010;
        } else if ((selfAddress === 0x2011) && (true)) {
            deviceSpec = deviceSpecs._2011;
        } else if ((selfAddress === 0x2012) && (true)) {
            deviceSpec = deviceSpecs._2012;
        } else if ((selfAddress === 0x2013) && (true)) {
            deviceSpec = deviceSpecs._2013;
        } else if ((selfAddress === 0x2014) && (true)) {
            deviceSpec = deviceSpecs._2014;
        } else if ((selfAddress === 0x2015) && (true)) {
            deviceSpec = deviceSpecs._2015;
        } else if ((selfAddress === 0x2016) && (true)) {
            deviceSpec = deviceSpecs._2016;
        } else if ((selfAddress === 0x2017) && (true)) {
            deviceSpec = deviceSpecs._2017;
        } else if ((selfAddress === 0x2018) && (true)) {
            deviceSpec = deviceSpecs._2018;
        } else if ((selfAddress === 0x2019) && (true)) {
            deviceSpec = deviceSpecs._2019;
        } else if ((selfAddress === 0x201A) && (true)) {
            deviceSpec = deviceSpecs._201A;
        } else if ((selfAddress === 0x201B) && (true)) {
            deviceSpec = deviceSpecs._201B;
        } else if ((selfAddress === 0x201C) && (true)) {
            deviceSpec = deviceSpecs._201C;
        } else if ((selfAddress === 0x201D) && (true)) {
            deviceSpec = deviceSpecs._201D;
        } else if ((selfAddress === 0x201E) && (true)) {
            deviceSpec = deviceSpecs._201E;
        } else if ((selfAddress === 0x201F) && (true)) {
            deviceSpec = deviceSpecs._201F;
        } else if ((selfAddress === 0x2020) && (true)) {
            deviceSpec = deviceSpecs._2020;
        } else if ((selfAddress === 0x2021) && (true)) {
            deviceSpec = deviceSpecs._2021;
        } else if ((selfAddress === 0x2022) && (true)) {
            deviceSpec = deviceSpecs._2022;
        } else if ((selfAddress === 0x2023) && (true)) {
            deviceSpec = deviceSpecs._2023;
        } else if ((selfAddress === 0x2024) && (true)) {
            deviceSpec = deviceSpecs._2024;
        } else if ((selfAddress === 0x2025) && (true)) {
            deviceSpec = deviceSpecs._2025;
        } else if ((selfAddress === 0x2026) && (true)) {
            deviceSpec = deviceSpecs._2026;
        } else if ((selfAddress === 0x2027) && (true)) {
            deviceSpec = deviceSpecs._2027;
        } else if ((selfAddress === 0x2028) && (true)) {
            deviceSpec = deviceSpecs._2028;
        } else if ((selfAddress === 0x2029) && (true)) {
            deviceSpec = deviceSpecs._2029;
        } else if ((selfAddress === 0x202A) && (true)) {
            deviceSpec = deviceSpecs._202A;
        } else if ((selfAddress === 0x202B) && (true)) {
            deviceSpec = deviceSpecs._202B;
        } else if ((selfAddress === 0x202C) && (true)) {
            deviceSpec = deviceSpecs._202C;
        } else if ((selfAddress === 0x202D) && (true)) {
            deviceSpec = deviceSpecs._202D;
        } else if ((selfAddress === 0x202E) && (true)) {
            deviceSpec = deviceSpecs._202E;
        } else if ((selfAddress === 0x202F) && (true)) {
            deviceSpec = deviceSpecs._202F;
        } else if ((selfAddress === 0x2030) && (true)) {
            deviceSpec = deviceSpecs._2030;
        } else if ((selfAddress === 0x2031) && (true)) {
            deviceSpec = deviceSpecs._2031;
        } else if ((selfAddress === 0x2032) && (true)) {
            deviceSpec = deviceSpecs._2032;
        } else if ((selfAddress === 0x2033) && (true)) {
            deviceSpec = deviceSpecs._2033;
        } else if ((selfAddress === 0x2034) && (true)) {
            deviceSpec = deviceSpecs._2034;
        } else if ((selfAddress === 0x2035) && (true)) {
            deviceSpec = deviceSpecs._2035;
        } else if ((selfAddress === 0x2036) && (true)) {
            deviceSpec = deviceSpecs._2036;
        } else if ((selfAddress === 0x2037) && (true)) {
            deviceSpec = deviceSpecs._2037;
        } else if ((selfAddress === 0x2038) && (true)) {
            deviceSpec = deviceSpecs._2038;
        } else if ((selfAddress === 0x2039) && (true)) {
            deviceSpec = deviceSpecs._2039;
        } else if ((selfAddress === 0x203A) && (true)) {
            deviceSpec = deviceSpecs._203A;
        } else if ((selfAddress === 0x203B) && (true)) {
            deviceSpec = deviceSpecs._203B;
        } else if ((selfAddress === 0x203C) && (true)) {
            deviceSpec = deviceSpecs._203C;
        } else if ((selfAddress === 0x203D) && (true)) {
            deviceSpec = deviceSpecs._203D;
        } else if ((selfAddress === 0x203E) && (true)) {
            deviceSpec = deviceSpecs._203E;
        } else if ((selfAddress === 0x203F) && (true)) {
            deviceSpec = deviceSpecs._203F;
        } else if ((selfAddress === 0x2040) && (true)) {
            deviceSpec = deviceSpecs._2040;
        } else if ((selfAddress === 0x2041) && (true)) {
            deviceSpec = deviceSpecs._2041;
        } else if ((selfAddress === 0x2042) && (true)) {
            deviceSpec = deviceSpecs._2042;
        } else if ((selfAddress === 0x2043) && (true)) {
            deviceSpec = deviceSpecs._2043;
        } else if ((selfAddress === 0x2044) && (true)) {
            deviceSpec = deviceSpecs._2044;
        } else if ((selfAddress === 0x2045) && (true)) {
            deviceSpec = deviceSpecs._2045;
        } else if ((selfAddress === 0x2046) && (true)) {
            deviceSpec = deviceSpecs._2046;
        } else if ((selfAddress === 0x2047) && (true)) {
            deviceSpec = deviceSpecs._2047;
        } else if ((selfAddress === 0x2048) && (true)) {
            deviceSpec = deviceSpecs._2048;
        } else if ((selfAddress === 0x2049) && (true)) {
            deviceSpec = deviceSpecs._2049;
        } else if ((selfAddress === 0x204A) && (true)) {
            deviceSpec = deviceSpecs._204A;
        } else if ((selfAddress === 0x204B) && (true)) {
            deviceSpec = deviceSpecs._204B;
        } else if ((selfAddress === 0x204C) && (true)) {
            deviceSpec = deviceSpecs._204C;
        } else if ((selfAddress === 0x204D) && (true)) {
            deviceSpec = deviceSpecs._204D;
        } else if ((selfAddress === 0x204E) && (true)) {
            deviceSpec = deviceSpecs._204E;
        } else if ((selfAddress === 0x204F) && (true)) {
            deviceSpec = deviceSpecs._204F;
        } else if ((selfAddress === 0x2050) && (true)) {
            deviceSpec = deviceSpecs._2050;
        } else if ((selfAddress === 0x2051) && (true)) {
            deviceSpec = deviceSpecs._2051;
        } else if ((selfAddress === 0x2052) && (true)) {
            deviceSpec = deviceSpecs._2052;
        } else if ((selfAddress === 0x2053) && (true)) {
            deviceSpec = deviceSpecs._2053;
        } else if ((selfAddress === 0x2054) && (true)) {
            deviceSpec = deviceSpecs._2054;
        } else if ((selfAddress === 0x2055) && (true)) {
            deviceSpec = deviceSpecs._2055;
        } else if ((selfAddress === 0x2056) && (true)) {
            deviceSpec = deviceSpecs._2056;
        } else if ((selfAddress === 0x2057) && (true)) {
            deviceSpec = deviceSpecs._2057;
        } else if ((selfAddress === 0x2058) && (true)) {
            deviceSpec = deviceSpecs._2058;
        } else if ((selfAddress === 0x2059) && (true)) {
            deviceSpec = deviceSpecs._2059;
        } else if ((selfAddress === 0x205A) && (true)) {
            deviceSpec = deviceSpecs._205A;
        } else if ((selfAddress === 0x205B) && (true)) {
            deviceSpec = deviceSpecs._205B;
        } else if ((selfAddress === 0x205C) && (true)) {
            deviceSpec = deviceSpecs._205C;
        } else if ((selfAddress === 0x205D) && (true)) {
            deviceSpec = deviceSpecs._205D;
        } else if ((selfAddress === 0x205E) && (true)) {
            deviceSpec = deviceSpecs._205E;
        } else if ((selfAddress === 0x205F) && (true)) {
            deviceSpec = deviceSpecs._205F;
        } else if ((selfAddress === 0x2060) && (true)) {
            deviceSpec = deviceSpecs._2060;
        } else if ((selfAddress === 0x2061) && (true)) {
            deviceSpec = deviceSpecs._2061;
        } else if ((selfAddress === 0x2062) && (true)) {
            deviceSpec = deviceSpecs._2062;
        } else if ((selfAddress === 0x2063) && (true)) {
            deviceSpec = deviceSpecs._2063;
        } else if ((selfAddress === 0x2064) && (true)) {
            deviceSpec = deviceSpecs._2064;
        } else if ((selfAddress === 0x2065) && (true)) {
            deviceSpec = deviceSpecs._2065;
        } else if ((selfAddress === 0x2066) && (true)) {
            deviceSpec = deviceSpecs._2066;
        } else if ((selfAddress === 0x2067) && (true)) {
            deviceSpec = deviceSpecs._2067;
        } else if ((selfAddress === 0x2068) && (true)) {
            deviceSpec = deviceSpecs._2068;
        } else if ((selfAddress === 0x2069) && (true)) {
            deviceSpec = deviceSpecs._2069;
        } else if ((selfAddress === 0x206A) && (true)) {
            deviceSpec = deviceSpecs._206A;
        } else if ((selfAddress === 0x206B) && (true)) {
            deviceSpec = deviceSpecs._206B;
        } else if ((selfAddress === 0x206C) && (true)) {
            deviceSpec = deviceSpecs._206C;
        } else if ((selfAddress === 0x206D) && (true)) {
            deviceSpec = deviceSpecs._206D;
        } else if ((selfAddress === 0x206E) && (true)) {
            deviceSpec = deviceSpecs._206E;
        } else if ((selfAddress === 0x206F) && (true)) {
            deviceSpec = deviceSpecs._206F;
        } else if ((selfAddress === 0x2070) && (true)) {
            deviceSpec = deviceSpecs._2070;
        } else if ((selfAddress === 0x2071) && (true)) {
            deviceSpec = deviceSpecs._2071;
        } else if ((selfAddress === 0x2072) && (true)) {
            deviceSpec = deviceSpecs._2072;
        } else if ((selfAddress === 0x2073) && (true)) {
            deviceSpec = deviceSpecs._2073;
        } else if ((selfAddress === 0x2074) && (true)) {
            deviceSpec = deviceSpecs._2074;
        } else if ((selfAddress === 0x2075) && (true)) {
            deviceSpec = deviceSpecs._2075;
        } else if ((selfAddress === 0x2076) && (true)) {
            deviceSpec = deviceSpecs._2076;
        } else if ((selfAddress === 0x2077) && (true)) {
            deviceSpec = deviceSpecs._2077;
        } else if ((selfAddress === 0x2078) && (true)) {
            deviceSpec = deviceSpecs._2078;
        } else if ((selfAddress === 0x2079) && (true)) {
            deviceSpec = deviceSpecs._2079;
        } else if ((selfAddress === 0x207A) && (true)) {
            deviceSpec = deviceSpecs._207A;
        } else if ((selfAddress === 0x207B) && (true)) {
            deviceSpec = deviceSpecs._207B;
        } else if ((selfAddress === 0x207C) && (true)) {
            deviceSpec = deviceSpecs._207C;
        } else if ((selfAddress === 0x207D) && (true)) {
            deviceSpec = deviceSpecs._207D;
        } else if ((selfAddress === 0x207E) && (true)) {
            deviceSpec = deviceSpecs._207E;
        } else if ((selfAddress === 0x207F) && (true)) {
            deviceSpec = deviceSpecs._207F;
        } else if ((selfAddress === 0x2111) && (true)) {
            deviceSpec = deviceSpecs._2111;
        } else if ((selfAddress === 0x2211) && (true)) {
            deviceSpec = deviceSpecs._2211;
        } else if ((selfAddress === 0x2231) && (true)) {
            deviceSpec = deviceSpecs._2231;
        } else if ((selfAddress === 0x2232) && (true)) {
            deviceSpec = deviceSpecs._2232;
        } else if ((selfAddress === 0x2251) && (true)) {
            deviceSpec = deviceSpecs._2251;
        } else if ((selfAddress === 0x2252) && (true)) {
            deviceSpec = deviceSpecs._2252;
        } else if ((selfAddress === 0x3011) && (true)) {
            deviceSpec = deviceSpecs._3011;
        } else if ((selfAddress === 0x3112) && (true)) {
            deviceSpec = deviceSpecs._3112;
        } else if ((selfAddress === 0x3211) && (true)) {
            deviceSpec = deviceSpecs._3211;
        } else if ((selfAddress === 0x3221) && (true)) {
            deviceSpec = deviceSpecs._3221;
        } else if ((selfAddress === 0x3231) && (true)) {
            deviceSpec = deviceSpecs._3231;
        } else if ((selfAddress === 0x3241) && (true)) {
            deviceSpec = deviceSpecs._3241;
        } else if ((selfAddress === 0x3251) && (true)) {
            deviceSpec = deviceSpecs._3251;
        } else if ((selfAddress === 0x3261) && (true)) {
            deviceSpec = deviceSpecs._3261;
        } else if ((selfAddress === 0x3271) && (true)) {
            deviceSpec = deviceSpecs._3271;
        } else if ((selfAddress === 0x3311) && (true)) {
            deviceSpec = deviceSpecs._3311;
        } else if ((selfAddress === 0x4010) && (true)) {
            deviceSpec = deviceSpecs._4010;
        } else if ((selfAddress === 0x4011) && (true)) {
            deviceSpec = deviceSpecs._4011;
        } else if ((selfAddress === 0x4012) && (true)) {
            deviceSpec = deviceSpecs._4012;
        } else if ((selfAddress === 0x4013) && (true)) {
            deviceSpec = deviceSpecs._4013;
        } else if ((selfAddress === 0x4014) && (true)) {
            deviceSpec = deviceSpecs._4014;
        } else if ((selfAddress === 0x4015) && (true)) {
            deviceSpec = deviceSpecs._4015;
        } else if ((selfAddress === 0x4016) && (true)) {
            deviceSpec = deviceSpecs._4016;
        } else if ((selfAddress === 0x4017) && (true)) {
            deviceSpec = deviceSpecs._4017;
        } else if ((selfAddress === 0x4018) && (true)) {
            deviceSpec = deviceSpecs._4018;
        } else if ((selfAddress === 0x4019) && (true)) {
            deviceSpec = deviceSpecs._4019;
        } else if ((selfAddress === 0x401A) && (true)) {
            deviceSpec = deviceSpecs._401A;
        } else if ((selfAddress === 0x401B) && (true)) {
            deviceSpec = deviceSpecs._401B;
        } else if ((selfAddress === 0x401C) && (true)) {
            deviceSpec = deviceSpecs._401C;
        } else if ((selfAddress === 0x401D) && (true)) {
            deviceSpec = deviceSpecs._401D;
        } else if ((selfAddress === 0x401E) && (true)) {
            deviceSpec = deviceSpecs._401E;
        } else if ((selfAddress === 0x401F) && (true)) {
            deviceSpec = deviceSpecs._401F;
        } else if ((selfAddress === 0x4021) && (true)) {
            deviceSpec = deviceSpecs._4021;
        } else if ((selfAddress === 0x4111) && (true)) {
            deviceSpec = deviceSpecs._4111;
        } else if ((selfAddress === 0x4211) && (true)) {
            deviceSpec = deviceSpecs._4211;
        } else if ((selfAddress === 0x4212) && (true)) {
            deviceSpec = deviceSpecs._4212;
        } else if ((selfAddress === 0x4213) && (true)) {
            deviceSpec = deviceSpecs._4213;
        } else if ((selfAddress === 0x4214) && (true)) {
            deviceSpec = deviceSpecs._4214;
        } else if ((selfAddress === 0x4221) && (true)) {
            deviceSpec = deviceSpecs._4221;
        } else if ((selfAddress === 0x4223) && (true)) {
            deviceSpec = deviceSpecs._4223;
        } else if ((selfAddress === 0x4224) && (true)) {
            deviceSpec = deviceSpecs._4224;
        } else if ((selfAddress === 0x4225) && (true)) {
            deviceSpec = deviceSpecs._4225;
        } else if ((selfAddress === 0x4231) && (true)) {
            deviceSpec = deviceSpecs._4231;
        } else if ((selfAddress === 0x4241) && (true)) {
            deviceSpec = deviceSpecs._4241;
        } else if ((selfAddress === 0x4251) && (true)) {
            deviceSpec = deviceSpecs._4251;
        } else if ((selfAddress === 0x4252) && (true)) {
            deviceSpec = deviceSpecs._4252;
        } else if ((selfAddress === 0x4258) && (true)) {
            deviceSpec = deviceSpecs._4258;
        } else if ((selfAddress === 0x4261) && (true)) {
            deviceSpec = deviceSpecs._4261;
        } else if ((selfAddress === 0x4265) && (true)) {
            deviceSpec = deviceSpecs._4265;
        } else if ((selfAddress === 0x4278) && (true)) {
            deviceSpec = deviceSpecs._4278;
        } else if ((selfAddress === 0x4279) && (true)) {
            deviceSpec = deviceSpecs._4279;
        } else if ((selfAddress === 0x427A) && (true)) {
            deviceSpec = deviceSpecs._427A;
        } else if ((selfAddress === 0x427B) && (true)) {
            deviceSpec = deviceSpecs._427B;
        } else if ((selfAddress === 0x4311) && (true)) {
            deviceSpec = deviceSpecs._4311;
        } else if ((selfAddress === 0x4312) && (true)) {
            deviceSpec = deviceSpecs._4312;
        } else if ((selfAddress === 0x4321) && (true)) {
            deviceSpec = deviceSpecs._4321;
        } else if ((selfAddress === 0x4410) && (true)) {
            deviceSpec = deviceSpecs._4410;
        } else if ((selfAddress === 0x4411) && (true)) {
            deviceSpec = deviceSpecs._4411;
        } else if ((selfAddress === 0x4412) && (true)) {
            deviceSpec = deviceSpecs._4412;
        } else if ((selfAddress === 0x4413) && (true)) {
            deviceSpec = deviceSpecs._4413;
        } else if ((selfAddress === 0x4414) && (true)) {
            deviceSpec = deviceSpecs._4414;
        } else if ((selfAddress === 0x4415) && (true)) {
            deviceSpec = deviceSpecs._4415;
        } else if ((selfAddress === 0x4416) && (true)) {
            deviceSpec = deviceSpecs._4416;
        } else if ((selfAddress === 0x4417) && (true)) {
            deviceSpec = deviceSpecs._4417;
        } else if ((selfAddress === 0x4418) && (true)) {
            deviceSpec = deviceSpecs._4418;
        } else if ((selfAddress === 0x4419) && (true)) {
            deviceSpec = deviceSpecs._4419;
        } else if ((selfAddress === 0x441A) && (true)) {
            deviceSpec = deviceSpecs._441A;
        } else if ((selfAddress === 0x441B) && (true)) {
            deviceSpec = deviceSpecs._441B;
        } else if ((selfAddress === 0x441C) && (true)) {
            deviceSpec = deviceSpecs._441C;
        } else if ((selfAddress === 0x441D) && (true)) {
            deviceSpec = deviceSpecs._441D;
        } else if ((selfAddress === 0x441E) && (true)) {
            deviceSpec = deviceSpecs._441E;
        } else if ((selfAddress === 0x441F) && (true)) {
            deviceSpec = deviceSpecs._441F;
        } else if ((selfAddress === 0x4420) && (true)) {
            deviceSpec = deviceSpecs._4420;
        } else if ((selfAddress === 0x4421) && (true)) {
            deviceSpec = deviceSpecs._4421;
        } else if ((selfAddress === 0x4422) && (true)) {
            deviceSpec = deviceSpecs._4422;
        } else if ((selfAddress === 0x4423) && (true)) {
            deviceSpec = deviceSpecs._4423;
        } else if ((selfAddress === 0x4424) && (true)) {
            deviceSpec = deviceSpecs._4424;
        } else if ((selfAddress === 0x4425) && (true)) {
            deviceSpec = deviceSpecs._4425;
        } else if ((selfAddress === 0x4426) && (true)) {
            deviceSpec = deviceSpecs._4426;
        } else if ((selfAddress === 0x4427) && (true)) {
            deviceSpec = deviceSpecs._4427;
        } else if ((selfAddress === 0x4428) && (true)) {
            deviceSpec = deviceSpecs._4428;
        } else if ((selfAddress === 0x4429) && (true)) {
            deviceSpec = deviceSpecs._4429;
        } else if ((selfAddress === 0x442A) && (true)) {
            deviceSpec = deviceSpecs._442A;
        } else if ((selfAddress === 0x442B) && (true)) {
            deviceSpec = deviceSpecs._442B;
        } else if ((selfAddress === 0x442C) && (true)) {
            deviceSpec = deviceSpecs._442C;
        } else if ((selfAddress === 0x442D) && (true)) {
            deviceSpec = deviceSpecs._442D;
        } else if ((selfAddress === 0x442E) && (true)) {
            deviceSpec = deviceSpecs._442E;
        } else if ((selfAddress === 0x442F) && (true)) {
            deviceSpec = deviceSpecs._442F;
        } else if ((selfAddress === 0x5111) && (true)) {
            deviceSpec = deviceSpecs._5111;
        } else if ((selfAddress === 0x5112) && (true)) {
            deviceSpec = deviceSpecs._5112;
        } else if ((selfAddress === 0x5121) && (true)) {
            deviceSpec = deviceSpecs._5121;
        } else if ((selfAddress === 0x5141) && (true)) {
            deviceSpec = deviceSpecs._5141;
        } else if ((selfAddress === 0x5210) && (true)) {
            deviceSpec = deviceSpecs._5210;
        } else if ((selfAddress === 0x5221) && (true)) {
            deviceSpec = deviceSpecs._5221;
        } else if ((selfAddress === 0x5231) && (true)) {
            deviceSpec = deviceSpecs._5231;
        } else if ((selfAddress === 0x5311) && (true)) {
            deviceSpec = deviceSpecs._5311;
        } else if ((selfAddress === 0x5400) && (true)) {
            deviceSpec = deviceSpecs._5400;
        } else if ((selfAddress === 0x5410) && (true)) {
            deviceSpec = deviceSpecs._5410;
        } else if ((selfAddress === 0x5411) && (true)) {
            deviceSpec = deviceSpecs._5411;
        } else if ((selfAddress === 0x5412) && (true)) {
            deviceSpec = deviceSpecs._5412;
        } else if ((selfAddress === 0x5413) && (true)) {
            deviceSpec = deviceSpecs._5413;
        } else if ((selfAddress === 0x5414) && (true)) {
            deviceSpec = deviceSpecs._5414;
        } else if ((selfAddress === 0x5415) && (true)) {
            deviceSpec = deviceSpecs._5415;
        } else if ((selfAddress === 0x5416) && (true)) {
            deviceSpec = deviceSpecs._5416;
        } else if ((selfAddress === 0x5417) && (true)) {
            deviceSpec = deviceSpecs._5417;
        } else if ((selfAddress === 0x5418) && (true)) {
            deviceSpec = deviceSpecs._5418;
        } else if ((selfAddress === 0x5419) && (true)) {
            deviceSpec = deviceSpecs._5419;
        } else if ((selfAddress === 0x541A) && (true)) {
            deviceSpec = deviceSpecs._541A;
        } else if ((selfAddress === 0x541B) && (true)) {
            deviceSpec = deviceSpecs._541B;
        } else if ((selfAddress === 0x541C) && (true)) {
            deviceSpec = deviceSpecs._541C;
        } else if ((selfAddress === 0x541D) && (true)) {
            deviceSpec = deviceSpecs._541D;
        } else if ((selfAddress === 0x541E) && (true)) {
            deviceSpec = deviceSpecs._541E;
        } else if ((selfAddress === 0x541F) && (true)) {
            deviceSpec = deviceSpecs._541F;
        } else if ((selfAddress === 0x5420) && (true)) {
            deviceSpec = deviceSpecs._5420;
        } else if ((selfAddress === 0x5421) && (true)) {
            deviceSpec = deviceSpecs._5421;
        } else if ((selfAddress === 0x5422) && (true)) {
            deviceSpec = deviceSpecs._5422;
        } else if ((selfAddress === 0x5423) && (true)) {
            deviceSpec = deviceSpecs._5423;
        } else if ((selfAddress === 0x5424) && (true)) {
            deviceSpec = deviceSpecs._5424;
        } else if ((selfAddress === 0x5425) && (true)) {
            deviceSpec = deviceSpecs._5425;
        } else if ((selfAddress === 0x5426) && (true)) {
            deviceSpec = deviceSpecs._5426;
        } else if ((selfAddress === 0x5427) && (true)) {
            deviceSpec = deviceSpecs._5427;
        } else if ((selfAddress === 0x5428) && (true)) {
            deviceSpec = deviceSpecs._5428;
        } else if ((selfAddress === 0x5429) && (true)) {
            deviceSpec = deviceSpecs._5429;
        } else if ((selfAddress === 0x542A) && (true)) {
            deviceSpec = deviceSpecs._542A;
        } else if ((selfAddress === 0x542B) && (true)) {
            deviceSpec = deviceSpecs._542B;
        } else if ((selfAddress === 0x542C) && (true)) {
            deviceSpec = deviceSpecs._542C;
        } else if ((selfAddress === 0x542D) && (true)) {
            deviceSpec = deviceSpecs._542D;
        } else if ((selfAddress === 0x542E) && (true)) {
            deviceSpec = deviceSpecs._542E;
        } else if ((selfAddress === 0x542F) && (true)) {
            deviceSpec = deviceSpecs._542F;
        } else if ((selfAddress === 0x5510) && (true)) {
            deviceSpec = deviceSpecs._5510;
        } else if ((selfAddress === 0x5611) && (true)) {
            deviceSpec = deviceSpecs._5611;
        } else if ((selfAddress === 0x6510) && (true)) {
            deviceSpec = deviceSpecs._6510;
        } else if ((selfAddress === 0x6520) && (true)) {
            deviceSpec = deviceSpecs._6520;
        } else if ((selfAddress === 0x6521) && (true)) {
            deviceSpec = deviceSpecs._6521;
        } else if ((selfAddress === 0x6522) && (true)) {
            deviceSpec = deviceSpecs._6522;
        } else if ((selfAddress === 0x6523) && (true)) {
            deviceSpec = deviceSpecs._6523;
        } else if ((selfAddress === 0x6524) && (true)) {
            deviceSpec = deviceSpecs._6524;
        } else if ((selfAddress === 0x6525) && (true)) {
            deviceSpec = deviceSpecs._6525;
        } else if ((selfAddress === 0x6526) && (true)) {
            deviceSpec = deviceSpecs._6526;
        } else if ((selfAddress === 0x6527) && (true)) {
            deviceSpec = deviceSpecs._6527;
        } else if ((selfAddress === 0x6528) && (true)) {
            deviceSpec = deviceSpecs._6528;
        } else if ((selfAddress === 0x6529) && (true)) {
            deviceSpec = deviceSpecs._6529;
        } else if ((selfAddress === 0x652A) && (true)) {
            deviceSpec = deviceSpecs._652A;
        } else if ((selfAddress === 0x652B) && (true)) {
            deviceSpec = deviceSpecs._652B;
        } else if ((selfAddress === 0x652C) && (true)) {
            deviceSpec = deviceSpecs._652C;
        } else if ((selfAddress === 0x652D) && (true)) {
            deviceSpec = deviceSpecs._652D;
        } else if ((selfAddress === 0x652E) && (true)) {
            deviceSpec = deviceSpecs._652E;
        } else if ((selfAddress === 0x652F) && (true)) {
            deviceSpec = deviceSpecs._652F;
        } else if ((selfAddress === 0x6610) && (true)) {
            deviceSpec = deviceSpecs._6610;
        } else if ((selfAddress === 0x6620) && (true)) {
            deviceSpec = deviceSpecs._6620;
        } else if ((selfAddress === 0x6650) && (true)) {
            deviceSpec = deviceSpecs._6650;
        } else if ((selfAddress === 0x6651) && (true)) {
            deviceSpec = deviceSpecs._6651;
        } else if ((selfAddress === 0x6652) && (true)) {
            deviceSpec = deviceSpecs._6652;
        } else if ((selfAddress === 0x6653) && (true)) {
            deviceSpec = deviceSpecs._6653;
        } else if ((selfAddress === 0x6654) && (true)) {
            deviceSpec = deviceSpecs._6654;
        } else if ((selfAddress === 0x6655) && (true)) {
            deviceSpec = deviceSpecs._6655;
        } else if ((selfAddress === 0x6656) && (true)) {
            deviceSpec = deviceSpecs._6656;
        } else if ((selfAddress === 0x6657) && (true)) {
            deviceSpec = deviceSpecs._6657;
        } else if ((selfAddress === 0x6658) && (true)) {
            deviceSpec = deviceSpecs._6658;
        } else if ((selfAddress === 0x6659) && (true)) {
            deviceSpec = deviceSpecs._6659;
        } else if ((selfAddress === 0x665A) && (true)) {
            deviceSpec = deviceSpecs._665A;
        } else if ((selfAddress === 0x665B) && (true)) {
            deviceSpec = deviceSpecs._665B;
        } else if ((selfAddress === 0x665C) && (true)) {
            deviceSpec = deviceSpecs._665C;
        } else if ((selfAddress === 0x665D) && (true)) {
            deviceSpec = deviceSpecs._665D;
        } else if ((selfAddress === 0x665E) && (true)) {
            deviceSpec = deviceSpecs._665E;
        } else if ((selfAddress === 0x665F) && (true)) {
            deviceSpec = deviceSpecs._665F;
        } else if ((selfAddress === 0x7101) && (true)) {
            deviceSpec = deviceSpecs._7101;
        } else if ((selfAddress === 0x7112) && (true)) {
            deviceSpec = deviceSpecs._7112;
        } else if ((selfAddress === 0x7113) && (true)) {
            deviceSpec = deviceSpecs._7113;
        } else if ((selfAddress === 0x7120) && (true)) {
            deviceSpec = deviceSpecs._7120;
        } else if ((selfAddress === 0x7121) && (true)) {
            deviceSpec = deviceSpecs._7121;
        } else if ((selfAddress === 0x7122) && (true)) {
            deviceSpec = deviceSpecs._7122;
        } else if ((selfAddress === 0x7123) && (true)) {
            deviceSpec = deviceSpecs._7123;
        } else if ((selfAddress === 0x7124) && (true)) {
            deviceSpec = deviceSpecs._7124;
        } else if ((selfAddress === 0x7125) && (true)) {
            deviceSpec = deviceSpecs._7125;
        } else if ((selfAddress === 0x7126) && (true)) {
            deviceSpec = deviceSpecs._7126;
        } else if ((selfAddress === 0x7127) && (true)) {
            deviceSpec = deviceSpecs._7127;
        } else if ((selfAddress === 0x7128) && (true)) {
            deviceSpec = deviceSpecs._7128;
        } else if ((selfAddress === 0x7129) && (true)) {
            deviceSpec = deviceSpecs._7129;
        } else if ((selfAddress === 0x712A) && (true)) {
            deviceSpec = deviceSpecs._712A;
        } else if ((selfAddress === 0x712B) && (true)) {
            deviceSpec = deviceSpecs._712B;
        } else if ((selfAddress === 0x712C) && (true)) {
            deviceSpec = deviceSpecs._712C;
        } else if ((selfAddress === 0x712D) && (true)) {
            deviceSpec = deviceSpecs._712D;
        } else if ((selfAddress === 0x712E) && (true)) {
            deviceSpec = deviceSpecs._712E;
        } else if ((selfAddress === 0x712F) && (true)) {
            deviceSpec = deviceSpecs._712F;
        } else if ((selfAddress === 0x7130) && (true)) {
            deviceSpec = deviceSpecs._7130;
        } else if ((selfAddress === 0x7131) && (true)) {
            deviceSpec = deviceSpecs._7131;
        } else if ((selfAddress === 0x7132) && (true)) {
            deviceSpec = deviceSpecs._7132;
        } else if ((selfAddress === 0x7133) && (true)) {
            deviceSpec = deviceSpecs._7133;
        } else if ((selfAddress === 0x7134) && (true)) {
            deviceSpec = deviceSpecs._7134;
        } else if ((selfAddress === 0x7135) && (true)) {
            deviceSpec = deviceSpecs._7135;
        } else if ((selfAddress === 0x7136) && (true)) {
            deviceSpec = deviceSpecs._7136;
        } else if ((selfAddress === 0x7137) && (true)) {
            deviceSpec = deviceSpecs._7137;
        } else if ((selfAddress === 0x7138) && (true)) {
            deviceSpec = deviceSpecs._7138;
        } else if ((selfAddress === 0x7139) && (true)) {
            deviceSpec = deviceSpecs._7139;
        } else if ((selfAddress === 0x713A) && (true)) {
            deviceSpec = deviceSpecs._713A;
        } else if ((selfAddress === 0x713B) && (true)) {
            deviceSpec = deviceSpecs._713B;
        } else if ((selfAddress === 0x713C) && (true)) {
            deviceSpec = deviceSpecs._713C;
        } else if ((selfAddress === 0x713D) && (true)) {
            deviceSpec = deviceSpecs._713D;
        } else if ((selfAddress === 0x713E) && (true)) {
            deviceSpec = deviceSpecs._713E;
        } else if ((selfAddress === 0x713F) && (true)) {
            deviceSpec = deviceSpecs._713F;
        } else if ((selfAddress === 0x7140) && (true)) {
            deviceSpec = deviceSpecs._7140;
        } else if ((selfAddress === 0x7150) && (true)) {
            deviceSpec = deviceSpecs._7150;
        } else if ((selfAddress === 0x7151) && (true)) {
            deviceSpec = deviceSpecs._7151;
        } else if ((selfAddress === 0x7152) && (true)) {
            deviceSpec = deviceSpecs._7152;
        } else if ((selfAddress === 0x7153) && (true)) {
            deviceSpec = deviceSpecs._7153;
        } else if ((selfAddress === 0x7154) && (true)) {
            deviceSpec = deviceSpecs._7154;
        } else if ((selfAddress === 0x7155) && (true)) {
            deviceSpec = deviceSpecs._7155;
        } else if ((selfAddress === 0x7156) && (true)) {
            deviceSpec = deviceSpecs._7156;
        } else if ((selfAddress === 0x7157) && (true)) {
            deviceSpec = deviceSpecs._7157;
        } else if ((selfAddress === 0x7158) && (true)) {
            deviceSpec = deviceSpecs._7158;
        } else if ((selfAddress === 0x7159) && (true)) {
            deviceSpec = deviceSpecs._7159;
        } else if ((selfAddress === 0x715A) && (true)) {
            deviceSpec = deviceSpecs._715A;
        } else if ((selfAddress === 0x715B) && (true)) {
            deviceSpec = deviceSpecs._715B;
        } else if ((selfAddress === 0x715C) && (true)) {
            deviceSpec = deviceSpecs._715C;
        } else if ((selfAddress === 0x715D) && (true)) {
            deviceSpec = deviceSpecs._715D;
        } else if ((selfAddress === 0x715E) && (true)) {
            deviceSpec = deviceSpecs._715E;
        } else if ((selfAddress === 0x715F) && (true)) {
            deviceSpec = deviceSpecs._715F;
        } else if ((selfAddress === 0x7160) && (true)) {
            deviceSpec = deviceSpecs._7160;
        } else if ((selfAddress === 0x7161) && (true)) {
            deviceSpec = deviceSpecs._7161;
        } else if ((selfAddress === 0x7162) && (true)) {
            deviceSpec = deviceSpecs._7162;
        } else if ((selfAddress === 0x7163) && (true)) {
            deviceSpec = deviceSpecs._7163;
        } else if ((selfAddress === 0x7210) && (true)) {
            deviceSpec = deviceSpecs._7210;
        } else if ((selfAddress === 0x7211) && (true)) {
            deviceSpec = deviceSpecs._7211;
        } else if ((selfAddress === 0x7212) && (true)) {
            deviceSpec = deviceSpecs._7212;
        } else if ((selfAddress === 0x7213) && (true)) {
            deviceSpec = deviceSpecs._7213;
        } else if ((selfAddress === 0x7221) && (true)) {
            deviceSpec = deviceSpecs._7221;
        } else if ((selfAddress === 0x7231) && (true)) {
            deviceSpec = deviceSpecs._7231;
        } else if ((selfAddress === 0x7311) && (true)) {
            deviceSpec = deviceSpecs._7311;
        } else if ((selfAddress === 0x7312) && (true)) {
            deviceSpec = deviceSpecs._7312;
        } else if ((selfAddress === 0x7313) && (true)) {
            deviceSpec = deviceSpecs._7313;
        } else if ((selfAddress === 0x7315) && (true)) {
            deviceSpec = deviceSpecs._7315;
        } else if ((selfAddress === 0x7316) && (true)) {
            deviceSpec = deviceSpecs._7316;
        } else if ((selfAddress === 0x7317) && (true)) {
            deviceSpec = deviceSpecs._7317;
        } else if ((selfAddress === 0x7321) && (true)) {
            deviceSpec = deviceSpecs._7321;
        } else if ((selfAddress === 0x7326) && (true)) {
            deviceSpec = deviceSpecs._7326;
        } else if ((selfAddress === 0x7327) && (true)) {
            deviceSpec = deviceSpecs._7327;
        } else if ((selfAddress === 0x7331) && (true)) {
            deviceSpec = deviceSpecs._7331;
        } else if ((selfAddress === 0x7332) && (true)) {
            deviceSpec = deviceSpecs._7332;
        } else if ((selfAddress === 0x7333) && (true)) {
            deviceSpec = deviceSpecs._7333;
        } else if ((selfAddress === 0x7334) && (true)) {
            deviceSpec = deviceSpecs._7334;
        } else if ((selfAddress === 0x7335) && (true)) {
            deviceSpec = deviceSpecs._7335;
        } else if ((selfAddress === 0x7341) && (true)) {
            deviceSpec = deviceSpecs._7341;
        } else if ((selfAddress === 0x7342) && (true)) {
            deviceSpec = deviceSpecs._7342;
        } else if ((selfAddress === 0x7343) && (true)) {
            deviceSpec = deviceSpecs._7343;
        } else if ((selfAddress === 0x7344) && (true)) {
            deviceSpec = deviceSpecs._7344;
        } else if ((selfAddress === 0x7345) && (true)) {
            deviceSpec = deviceSpecs._7345;
        } else if ((selfAddress === 0x7346) && (true)) {
            deviceSpec = deviceSpecs._7346;
        } else if ((selfAddress === 0x7411) && (true)) {
            deviceSpec = deviceSpecs._7411;
        } else if ((selfAddress === 0x7421) && (true)) {
            deviceSpec = deviceSpecs._7421;
        } else if ((selfAddress === 0x7422) && (true)) {
            deviceSpec = deviceSpecs._7422;
        } else if ((selfAddress === 0x7428) && (true)) {
            deviceSpec = deviceSpecs._7428;
        } else if ((selfAddress === 0x7451) && (true)) {
            deviceSpec = deviceSpecs._7451;
        } else if ((selfAddress === 0x7511) && (true)) {
            deviceSpec = deviceSpecs._7511;
        } else if ((selfAddress === 0x7512) && (true)) {
            deviceSpec = deviceSpecs._7512;
        } else if ((selfAddress === 0x7521) && (true)) {
            deviceSpec = deviceSpecs._7521;
        } else if ((selfAddress === 0x7522) && (true)) {
            deviceSpec = deviceSpecs._7522;
        } else if ((selfAddress === 0x7523) && (true)) {
            deviceSpec = deviceSpecs._7523;
        } else if ((selfAddress === 0x7530) && (true)) {
            deviceSpec = deviceSpecs._7530;
        } else if ((selfAddress === 0x7531) && (true)) {
            deviceSpec = deviceSpecs._7531;
        } else if ((selfAddress === 0x7532) && (true)) {
            deviceSpec = deviceSpecs._7532;
        } else if ((selfAddress === 0x7533) && (true)) {
            deviceSpec = deviceSpecs._7533;
        } else if ((selfAddress === 0x7534) && (true)) {
            deviceSpec = deviceSpecs._7534;
        } else if ((selfAddress === 0x7535) && (true)) {
            deviceSpec = deviceSpecs._7535;
        } else if ((selfAddress === 0x7536) && (true)) {
            deviceSpec = deviceSpecs._7536;
        } else if ((selfAddress === 0x7537) && (true)) {
            deviceSpec = deviceSpecs._7537;
        } else if ((selfAddress === 0x7538) && (true)) {
            deviceSpec = deviceSpecs._7538;
        } else if ((selfAddress === 0x7539) && (true)) {
            deviceSpec = deviceSpecs._7539;
        } else if ((selfAddress === 0x753A) && (true)) {
            deviceSpec = deviceSpecs._753A;
        } else if ((selfAddress === 0x753B) && (true)) {
            deviceSpec = deviceSpecs._753B;
        } else if ((selfAddress === 0x753C) && (true)) {
            deviceSpec = deviceSpecs._753C;
        } else if ((selfAddress === 0x753D) && (true)) {
            deviceSpec = deviceSpecs._753D;
        } else if ((selfAddress === 0x753E) && (true)) {
            deviceSpec = deviceSpecs._753E;
        } else if ((selfAddress === 0x753F) && (true)) {
            deviceSpec = deviceSpecs._753F;
        } else if ((selfAddress === 0x7611) && (true)) {
            deviceSpec = deviceSpecs._7611;
        } else if ((selfAddress === 0x7621) && (true)) {
            deviceSpec = deviceSpecs._7621;
        } else if ((selfAddress === 0x7622) && (true)) {
            deviceSpec = deviceSpecs._7622;
        } else if ((selfAddress === 0x7651) && (true)) {
            deviceSpec = deviceSpecs._7651;
        } else if ((selfAddress === 0x7711) && (true)) {
            deviceSpec = deviceSpecs._7711;
        } else if ((selfAddress === 0x7712) && (true)) {
            deviceSpec = deviceSpecs._7712;
        } else if ((selfAddress === 0x7721) && (true)) {
            deviceSpec = deviceSpecs._7721;
        } else if ((selfAddress === 0x7722) && (true)) {
            deviceSpec = deviceSpecs._7722;
        } else if ((selfAddress === 0x7729) && (true)) {
            deviceSpec = deviceSpecs._7729;
        } else if ((selfAddress === 0x772A) && (true)) {
            deviceSpec = deviceSpecs._772A;
        } else if ((selfAddress === 0x7731) && (true)) {
            deviceSpec = deviceSpecs._7731;
        } else if ((selfAddress === 0x7751) && (true)) {
            deviceSpec = deviceSpecs._7751;
        } else if ((selfAddress === 0x7761) && (true)) {
            deviceSpec = deviceSpecs._7761;
        } else if ((selfAddress === 0x7762) && (true)) {
            deviceSpec = deviceSpecs._7762;
        } else if ((selfAddress === 0x7771) && (true)) {
            deviceSpec = deviceSpecs._7771;
        } else if ((selfAddress === 0x7772) && (true)) {
            deviceSpec = deviceSpecs._7772;
        } else if ((selfAddress === 0x7773) && (true)) {
            deviceSpec = deviceSpecs._7773;
        } else if ((selfAddress === 0x7774) && (true)) {
            deviceSpec = deviceSpecs._7774;
        } else if ((selfAddress === 0x7821) && (true)) {
            deviceSpec = deviceSpecs._7821;
        } else if ((selfAddress === 0x7822) && (true)) {
            deviceSpec = deviceSpecs._7822;
        } else if ((selfAddress === 0x7831) && (true)) {
            deviceSpec = deviceSpecs._7831;
        } else if ((selfAddress === 0x7832) && (true)) {
            deviceSpec = deviceSpecs._7832;
        } else if ((selfAddress === 0x7833) && (true)) {
            deviceSpec = deviceSpecs._7833;
        } else if ((selfAddress === 0x7834) && (true)) {
            deviceSpec = deviceSpecs._7834;
        } else if ((selfAddress === 0x7900) && (true)) {
            deviceSpec = deviceSpecs._7900;
        } else if ((selfAddress === 0x7D04) && (true)) {
            deviceSpec = deviceSpecs._7D04;
        } else if ((selfAddress === 0x7E11) && (true)) {
            deviceSpec = deviceSpecs._7E11;
        } else if ((selfAddress === 0x7E12) && (true)) {
            deviceSpec = deviceSpecs._7E12;
        } else if ((selfAddress === 0x7E20) && (true)) {
            deviceSpec = deviceSpecs._7E20;
        } else if ((selfAddress === 0x7E21) && (true)) {
            deviceSpec = deviceSpecs._7E21;
        } else if ((selfAddress === 0x7E22) && (true)) {
            deviceSpec = deviceSpecs._7E22;
        } else if ((selfAddress === 0x7E23) && (true)) {
            deviceSpec = deviceSpecs._7E23;
        } else if ((selfAddress === 0x7E24) && (true)) {
            deviceSpec = deviceSpecs._7E24;
        } else if ((selfAddress === 0x7E25) && (true)) {
            deviceSpec = deviceSpecs._7E25;
        } else if ((selfAddress === 0x7E26) && (true)) {
            deviceSpec = deviceSpecs._7E26;
        } else if ((selfAddress === 0x7E27) && (true)) {
            deviceSpec = deviceSpecs._7E27;
        } else if ((selfAddress === 0x7E28) && (true)) {
            deviceSpec = deviceSpecs._7E28;
        } else if ((selfAddress === 0x7E29) && (true)) {
            deviceSpec = deviceSpecs._7E29;
        } else if ((selfAddress === 0x7E2A) && (true)) {
            deviceSpec = deviceSpecs._7E2A;
        } else if ((selfAddress === 0x7E2B) && (true)) {
            deviceSpec = deviceSpecs._7E2B;
        } else if ((selfAddress === 0x7E2C) && (true)) {
            deviceSpec = deviceSpecs._7E2C;
        } else if ((selfAddress === 0x7E2D) && (true)) {
            deviceSpec = deviceSpecs._7E2D;
        } else if ((selfAddress === 0x7E2E) && (true)) {
            deviceSpec = deviceSpecs._7E2E;
        } else if ((selfAddress === 0x7E2F) && (true)) {
            deviceSpec = deviceSpecs._7E2F;
        } else if ((selfAddress === 0x7E30) && (true)) {
            deviceSpec = deviceSpecs._7E30;
        } else if ((selfAddress === 0x7E31) && (true)) {
            deviceSpec = deviceSpecs._7E31;
        } else if ((selfAddress === 0x7E32) && (true)) {
            deviceSpec = deviceSpecs._7E32;
        } else if ((selfAddress === 0x7E33) && (true)) {
            deviceSpec = deviceSpecs._7E33;
        } else if ((selfAddress === 0x7E34) && (true)) {
            deviceSpec = deviceSpecs._7E34;
        } else if ((selfAddress === 0x7E35) && (true)) {
            deviceSpec = deviceSpecs._7E35;
        } else if ((selfAddress === 0x7E36) && (true)) {
            deviceSpec = deviceSpecs._7E36;
        } else if ((selfAddress === 0x7E37) && (true)) {
            deviceSpec = deviceSpecs._7E37;
        } else if ((selfAddress === 0x7E38) && (true)) {
            deviceSpec = deviceSpecs._7E38;
        } else if ((selfAddress === 0x7E39) && (true)) {
            deviceSpec = deviceSpecs._7E39;
        } else if ((selfAddress === 0x7E3A) && (true)) {
            deviceSpec = deviceSpecs._7E3A;
        } else if ((selfAddress === 0x7E3B) && (true)) {
            deviceSpec = deviceSpecs._7E3B;
        } else if ((selfAddress === 0x7E3C) && (true)) {
            deviceSpec = deviceSpecs._7E3C;
        } else if ((selfAddress === 0x7E3D) && (true)) {
            deviceSpec = deviceSpecs._7E3D;
        } else if ((selfAddress === 0x7E3E) && (true)) {
            deviceSpec = deviceSpecs._7E3E;
        } else if ((selfAddress === 0x7E3F) && (true)) {
            deviceSpec = deviceSpecs._7E3F;
        } else if ((selfAddress === 0x7E71) && (true)) {
            deviceSpec = deviceSpecs._7E71;
        } else if ((selfAddress === 0x7F61) && (true)) {
            deviceSpec = deviceSpecs._7F61;
        } else if ((selfAddress === 0x7F62) && (true)) {
            deviceSpec = deviceSpecs._7F62;
        } else if ((selfAddress === 0x7F63) && (true)) {
            deviceSpec = deviceSpecs._7F63;
        } else if ((selfAddress === 0x7F64) && (true)) {
            deviceSpec = deviceSpecs._7F64;
        } else if ((selfAddress === 0x7F65) && (true)) {
            deviceSpec = deviceSpecs._7F65;
        } else if ((selfAddress === 0x7F71) && (true)) {
            deviceSpec = deviceSpecs._7F71;
        } else {
            deviceSpec = null;
        }
        return deviceSpec;
    };



    var packetFieldSpecs = {
        _0000_4010_0100: [{
            fieldId: '002_2_0',
            name: 'Wärme',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0000_4010_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 0,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 1,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '006_1_0',
            name: 'Leistung',
            type: types.Number_1_Watts,
            getRawValue: getRawValueFunctions._0000_4010_0100_006_1_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 10,
            }, {
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 2560,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Volumenstrom',
            type: types.Number_0_01_CubicMetersPerHour,
            getRawValue: getRawValueFunctions._0000_4010_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 5,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Vorlauftemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_4010_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Rücklauftemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_4010_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Glykol',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_4010_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Druck',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0000_4010_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, ],
        _0000_4420_0100: [{
            fieldId: '000_1_0',
            name: 'Fehlerstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_4420_0100_000_1_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '001_2_0',
            name: 'Modulstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_4420_0100_001_2_0,
            parts: [{
                offset: 1,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 2,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '003_1_0',
            name: 'Relaisstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_4420_0100_003_1_0,
            parts: [{
                offset: 3,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Fehler-Info',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_4420_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Vorlauftemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_4420_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Fernversteller',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_4420_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Aussentemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_4420_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Vorlaufsolltemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_4420_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Modulversion',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_4420_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0000_6510_0100: [{
            fieldId: '000_1_0',
            name: 'Fehlerstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_6510_0100_000_1_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '001_2_0',
            name: 'Modulstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_6510_0100_001_2_0,
            parts: [{
                offset: 1,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 2,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '003_1_0',
            name: 'Relaisstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_6510_0100_003_1_0,
            parts: [{
                offset: 3,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '003_1_1',
            name: 'Relais 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_6510_0100_003_1_1,
            parts: [{
                offset: 3,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '003_1_2',
            name: 'Relais 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_6510_0100_003_1_2,
            parts: [{
                offset: 3,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '003_1_4',
            name: 'Relais 3',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_6510_0100_003_1_4,
            parts: [{
                offset: 3,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '003_1_8',
            name: 'Relais 4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_6510_0100_003_1_8,
            parts: [{
                offset: 3,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '003_1_16',
            name: 'Relais 5',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_6510_0100_003_1_16,
            parts: [{
                offset: 3,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '003_1_32',
            name: 'Relais 6',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_6510_0100_003_1_32,
            parts: [{
                offset: 3,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Fehler-Info',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_6510_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Vorlauftemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_6510_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Fernversteller',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_6510_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Aussentemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_6510_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Speichertemperatur 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_6510_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Vorlaufsolltemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_6510_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Modulversion',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0000_6510_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Speichertemperatur 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_6510_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_6510_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, ],
        _0000_6520_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_6520_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_6520_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_6520_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_6520_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_6520_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0000_6520_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, ],
        _0000_6650_0100: [{
            fieldId: '000_4_0',
            name: 'Resistor 1',
            type: types.Number_0_001_Ohms,
            getRawValue: getRawValueFunctions._0000_6650_0100_000_4_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '004_4_0',
            name: 'Resistor 2',
            type: types.Number_0_001_Ohms,
            getRawValue: getRawValueFunctions._0000_6650_0100_004_4_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 5,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '008_4_0',
            name: 'Resistor 3',
            type: types.Number_0_001_Ohms,
            getRawValue: getRawValueFunctions._0000_6650_0100_008_4_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 9,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Resistor 4',
            type: types.Number_0_001_Ohms,
            getRawValue: getRawValueFunctions._0000_6650_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '016_4_0',
            name: 'Resistor 5',
            type: types.Number_0_001_Ohms,
            getRawValue: getRawValueFunctions._0000_6650_0100_016_4_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 17,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Resistor 6',
            type: types.Number_0_001_Ohms,
            getRawValue: getRawValueFunctions._0000_6650_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 21,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, ],
        _0010_0053_0100: [{
            fieldId: '000_4_0',
            name: 'Resistor Sensor 1',
            type: types.Number_0_001_Ohms,
            getRawValue: getRawValueFunctions._0010_0053_0100_000_4_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '004_4_0',
            name: 'Resistor Sensor 2',
            type: types.Number_0_001_Ohms,
            getRawValue: getRawValueFunctions._0010_0053_0100_004_4_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 5,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '008_4_0',
            name: 'Resistor Sensor 3',
            type: types.Number_0_001_Ohms,
            getRawValue: getRawValueFunctions._0010_0053_0100_008_4_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 9,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Current Sensor 4',
            type: types.Number_0_001_Milliamperes,
            getRawValue: getRawValueFunctions._0010_0053_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '034_2_0',
            name: 'Temperature Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_0053_0100_034_2_0,
            parts: [{
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Temperature Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_0053_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Temperature Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_0053_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_4_0',
            name: 'Impulse Counter Sensor 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_0053_0100_016_4_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Impulse Counter Sensor 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_0053_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'Impulse Counter Sensor 3',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_0053_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '040_2_0',
            name: 'Irradiation Sensor 4',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_0053_0100_040_2_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, ],
        _0010_1120_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_1120_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_1120_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_1120_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_1120_0100_006_1_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '007_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_1120_0100_007_1_0,
            parts: [{
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Anzeige-Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_1120_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_1120_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Betriebsstunden Relais 2',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_1120_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '016_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_1120_0100_016_4_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Uhrzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_1120_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, ],
        _0010_2211_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2211_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2211_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2211_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2211_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2211_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2211_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_2211_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Betriebsstunden Relais 2',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_2211_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'UnitType',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2211_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '017_1_0',
            name: 'System',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2211_0100_017_1_0,
            parts: [{
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'ErrorMask',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2211_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_2211_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '020_1_1',
            name: 'Sensor 1 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2211_0100_020_1_1,
            parts: [{
                offset: 20,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_2',
            name: 'Sensor 2 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2211_0100_020_1_2,
            parts: [{
                offset: 20,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_4',
            name: 'Sensor 3 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2211_0100_020_1_4,
            parts: [{
                offset: 20,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_8',
            name: 'Sensor 4 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2211_0100_020_1_8,
            parts: [{
                offset: 20,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'Statusmask',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2211_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_2211_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '032_2_0',
            name: 'SW-Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_2211_0100_032_2_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, ],
        _0010_2231_0100: [{
            fieldId: '000_2_0',
            name: 'Kollektor',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2231_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Speicher Solar',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2231_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Ofen Kesseltemp',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2231_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Speicher unten',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2231_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Rücklauf Heizkreis',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2231_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Speicher Entnahme',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2231_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Brauchwasserspeicher',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2231_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Zirkulation-Fühler',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2231_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Sensor 9',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2231_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Sensor 10',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2231_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Sensor 11',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2231_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Sensor 12',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2231_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Sensor 13',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2231_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'Vorlauftemperatur HK1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2231_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Aussentemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2231_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '030_2_0',
            name: 'Abgastemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2231_0100_030_2_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Einstrahlung',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_2231_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '038_4_0',
            name: 'Impulseingang 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2231_0100_038_4_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 41,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '040_4_0',
            name: 'Impulseingang 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2231_0100_040_4_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '088_2_0',
            name: 'Sensorbruch-Maske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2231_0100_088_2_0,
            parts: [{
                offset: 88,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 89,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '090_2_0',
            name: 'Sensorkurzschluss-Maske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2231_0100_090_2_0,
            parts: [{
                offset: 90,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 91,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '080_4_0',
            name: 'Sensorbenutzungs-Maske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2231_0100_080_4_0,
            parts: [{
                offset: 80,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 81,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 82,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 83,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '042_1_0',
            name: 'Pumpe Solar',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2231_0100_042_1_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '043_1_0',
            name: 'Pumpe Ofen',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2231_0100_043_1_0,
            parts: [{
                offset: 43,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_0',
            name: 'Umschaltventil Kessel',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2231_0100_044_1_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_0',
            name: 'BW Ladepumpe',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2231_0100_045_1_0,
            parts: [{
                offset: 45,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_0',
            name: 'Zirkulationspumpe',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2231_0100_046_1_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_0',
            name: 'Relais 6',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2231_0100_047_1_0,
            parts: [{
                offset: 47,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_1_0',
            name: 'Relais 7',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2231_0100_048_1_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '049_1_0',
            name: 'Relais 8',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2231_0100_049_1_0,
            parts: [{
                offset: 49,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '050_1_0',
            name: 'Brennersperre 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2231_0100_050_1_0,
            parts: [{
                offset: 50,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '051_1_0',
            name: 'Mischer Auf',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2231_0100_051_1_0,
            parts: [{
                offset: 51,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '052_1_0',
            name: 'Mischer Zu',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2231_0100_052_1_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '053_1_0',
            name: 'HK - Pumpe',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2231_0100_053_1_0,
            parts: [{
                offset: 53,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '054_1_0',
            name: 'Gas/ÖL/Pelletofen',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2231_0100_054_1_0,
            parts: [{
                offset: 54,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '084_4_0',
            name: 'Relaisbenutzungsmaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2231_0100_084_4_0,
            parts: [{
                offset: 84,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 85,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 86,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 87,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '056_2_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2231_0100_056_2_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '058_2_0',
            name: 'Warnungsmaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2231_0100_058_2_0,
            parts: [{
                offset: 58,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 59,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '072_2_0',
            name: 'Reglerversion',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2231_0100_072_2_0,
            parts: [{
                offset: 72,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 73,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '074_2_0',
            name: 'Systemzeit',
            type: types.Weektime_1_None,
            getRawValue: getRawValueFunctions._0010_2231_0100_074_2_0,
            parts: [{
                offset: 74,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 75,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_2232_0100: [{
            fieldId: '000_2_0',
            name: 'Vorlauftemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2232_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Rücklauftemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2232_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Volumenstrom',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_2232_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Wärme',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_2232_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Wärme',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_2232_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Wärme',
            type: types.Number_1_MegawattHours,
            getRawValue: getRawValueFunctions._0010_2232_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_2251_0100: [{
            fieldId: '000_4_0',
            name: 'Systemdatum',
            type: types.DateTime_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_000_4_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2251_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2251_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2251_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2251_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2251_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur VFS/RPS (S6)',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_2251_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Volumenstrom V40',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_2251_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'Volumenstrom VFS (S6)',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_2251_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Volumenstrom Flowrotor (S7)',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_2251_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '032_2_0',
            name: 'Druck RPS (S6)',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0010_2251_0100_032_2_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 33,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '034_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2251_0100_034_1_0,
            parts: [{
                offset: 34,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '035_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2251_0100_035_1_0,
            parts: [{
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2251_0100_036_1_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '037_1_0',
            name: 'Drehzahl Relais 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2251_0100_037_1_0,
            parts: [{
                offset: 37,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '038_1_0',
            name: 'PWM A',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2251_0100_038_1_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '039_1_0',
            name: 'PWM B',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2251_0100_039_1_0,
            parts: [{
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '040_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_2251_0100_040_4_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '044_1_1',
            name: 'SW-Version',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_044_1_1,
            parts: [{
                offset: 44,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_4_0',
            name: 'Betriebssekunden Relais 1',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_2251_0100_048_4_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '052_4_0',
            name: 'Betriebssekunden Relais 2',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_2251_0100_052_4_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 54,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 55,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '056_4_0',
            name: 'Betriebssekunden Relais 3',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_2251_0100_056_4_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 58,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 59,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '060_4_0',
            name: 'Betriebssekunden Relais 4',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_2251_0100_060_4_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 61,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 62,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 63,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '064_1_1',
            name: 'Urlaubsfunktion',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_064_1_1,
            parts: [{
                offset: 64,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '065_1_0',
            name: 'Blockierschutz 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2251_0100_065_1_0,
            parts: [{
                offset: 65,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '066_1_0',
            name: 'Blockierschutz 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2251_0100_066_1_0,
            parts: [{
                offset: 66,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '067_1_0',
            name: 'Blockierschutz 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_2251_0100_067_1_0,
            parts: [{
                offset: 67,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '068_4_0',
            name: 'Initalisieren',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_068_4_0,
            parts: [{
                offset: 68,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 69,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 70,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 71,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '072_4_0',
            name: 'Befüllung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_072_4_0,
            parts: [{
                offset: 72,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 73,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 74,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 75,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '076_4_0',
            name: 'Stabilisieren',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_076_4_0,
            parts: [{
                offset: 76,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 77,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 78,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 79,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '080_1_0',
            name: 'Pumpenverzögerung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_080_1_0,
            parts: [{
                offset: 80,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '081_1_1',
            name: 'Überwärmeabfuhr',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_081_1_1,
            parts: [{
                offset: 81,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '082_1_0',
            name: 'Nachlauf',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_082_1_0,
            parts: [{
                offset: 82,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '083_1_0',
            name: 'Thermische Desinfektion',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_083_1_0,
            parts: [{
                offset: 83,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '084_1_1',
            name: 'Speicherkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_084_1_1,
            parts: [{
                offset: 84,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '085_1_1',
            name: 'Systemkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_085_1_1,
            parts: [{
                offset: 85,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '086_1_0',
            name: 'Spreizung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_086_1_0,
            parts: [{
                offset: 86,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '087_1_0',
            name: 'Frostschutz',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_087_1_0,
            parts: [{
                offset: 87,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '088_1_1',
            name: 'Kollektorkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_088_1_1,
            parts: [{
                offset: 88,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '089_1_1',
            name: 'Einheit Temperatur',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_089_1_1,
            parts: [{
                offset: 89,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '090_1_1',
            name: 'Einheit Durchfluss',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_090_1_1,
            parts: [{
                offset: 90,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '091_1_1',
            name: 'Einheit Druck',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_091_1_1,
            parts: [{
                offset: 91,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '093_1_1',
            name: 'Einheit Energie',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_093_1_1,
            parts: [{
                offset: 93,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '094_1_1',
            name: 'Speichermaximaltemperatur',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_094_1_1,
            parts: [{
                offset: 94,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '095_1_1',
            name: 'Neustarts',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_095_1_1,
            parts: [{
                offset: 95,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '096_4_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_2251_0100_096_4_0,
            parts: [{
                offset: 96,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 97,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 98,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 99,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_2252_0100: [{
            fieldId: '000_4_0',
            name: 'Wmz1_Wert_Wh',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_2252_0100_000_4_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '004_4_0',
            name: 'Wmz1_Leistung_W',
            type: types.Number_1_Watts,
            getRawValue: getRawValueFunctions._0010_2252_0100_004_4_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '008_4_0',
            name: 'Wmz1_WertHeute_Wh',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_2252_0100_008_4_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Wmz1_WertWoche_Wh',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_2252_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_3011_0100: [{
            fieldId: '000_2_0',
            name: 'Vorlauftemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3011_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Rücklauftemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3011_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Strömungsgeschwindigkeit',
            type: types.Number_0_01_MetersPerSecond,
            getRawValue: getRawValueFunctions._0010_3011_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Luftstrom-Volumen',
            type: types.Number_1_CubicMetersPerHour,
            getRawValue: getRawValueFunctions._0010_3011_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '016_4_0',
            name: 'Luftstrom-Masse',
            type: types.Number_1_KilogramsPerHour,
            getRawValue: getRawValueFunctions._0010_3011_0100_016_4_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Luftkanal-Querschnitt',
            type: types.Number_0_01_SquareMeters,
            getRawValue: getRawValueFunctions._0010_3011_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Luftdichte',
            type: types.Number_0_0001_KilogramsPerCubicMeter,
            getRawValue: getRawValueFunctions._0010_3011_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 0.0001,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 0.0256,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Luftdruck',
            type: types.Number_1_Hectopascals,
            getRawValue: getRawValueFunctions._0010_3011_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Leistung',
            type: types.Number_0_1_Kilowatts,
            getRawValue: getRawValueFunctions._0010_3011_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Wärmemenge kWh',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_3011_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '030_2_0',
            name: 'Wärmemenge MWh',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_3011_0100_030_2_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Betriebstage',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3011_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_3211_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3211_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3211_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3211_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_1_0',
            name: 'Drehzahl R1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_3211_0100_006_1_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '007_1_0',
            name: 'Fehlercode',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3211_0100_007_1_0,
            parts: [{
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Pumpenlaufzeit R1',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_3211_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Ladestatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3211_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_0',
            name: 'Flags',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3211_0100_011_1_0,
            parts: [{
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_3221_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3221_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3221_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3221_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_3221_0100_006_1_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '007_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_3221_0100_007_1_0,
            parts: [{
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Regelflags',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3221_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3221_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_3221_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Betriebsstunden Relais 2',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_3221_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_3231_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3231_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3231_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3231_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_3231_0100_006_1_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '007_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3231_0100_007_1_0,
            parts: [{
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_3231_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Relaismaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3231_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_1',
            name: 'Relaisstatus Relais 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3231_0100_010_1_1,
            parts: [{
                offset: 10,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_2',
            name: 'Relaisstatus Relais 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3231_0100_010_1_2,
            parts: [{
                offset: 10,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, ],
        _0010_3241_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3241_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3241_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3241_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_3241_0100_006_1_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '007_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3241_0100_007_1_0,
            parts: [{
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Relaismaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3241_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_3251_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3251_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3251_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3251_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_3251_0100_006_1_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '007_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3251_0100_007_1_0,
            parts: [{
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_3251_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, ],
        _0010_3271_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3271_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3271_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3271_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3271_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Pumpe 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_3271_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl Pumpe 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_3271_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Relaismaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3271_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3271_0100_011_1_0,
            parts: [{
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_3271_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Schema',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3271_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_1',
            name: 'Option PostPulse',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3271_0100_015_1_1,
            parts: [{
                offset: 15,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_2',
            name: 'Option Thermostat',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3271_0100_015_1_2,
            parts: [{
                offset: 15,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_4',
            name: 'Option WMZ',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3271_0100_015_1_4,
            parts: [{
                offset: 15,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3271_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Betriebsstunden Relais 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3271_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_3271_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_3271_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, ],
        _0010_3311_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3311_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3311_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3311_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4 (>= v1_02)',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_3311_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Drehzahl Relais 1 (<= v1_01)',
            type: types.Number_0_1_Percent,
            getRawValue: getRawValueFunctions._0010_3311_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Drehzahl Relais 2 (<= v1_01)',
            type: types.Number_0_1_Percent,
            getRawValue: getRawValueFunctions._0010_3311_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Relais 1 (>= v1_02)',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_3311_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl Relais 2 (>= v1_02)',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_3311_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Fehlermaske (>= v1_02)',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3311_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_0',
            name: 'Relaismaske (>= v1_02)',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_3311_0100_011_1_0,
            parts: [{
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '006_2_0_1',
            name: 'Wärmemenge (<= v1_01)',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_3311_0100_006_2_0_1,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Wärmemenge (>= v1_02)',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_3311_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_4111_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4111_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4111_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4111_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4111_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4111_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Anzeige-Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4111_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_4111_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '016_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_4111_0100_016_4_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, ],
        _0010_4211_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur S1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4211_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur S2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4211_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur S3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4211_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur S4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4211_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4211_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4211_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4211_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_4211_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Betriebsstunden Relais 2',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_4211_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_4211_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 1000,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 256000,
            }, {
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1000000,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 256000000,
            }, ],
        }, ],
        _0010_4212_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur S1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4212_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur S2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4212_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur S3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4212_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur S4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4212_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl R1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4212_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl R2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4212_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4212_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_0',
            name: 'Variante',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4212_0100_011_1_0,
            parts: [{
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Betriebsstunden R1',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_4212_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Betriebsstunden R2',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_4212_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_4212_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_4212_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, ],
        _0010_4213_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur S1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4213_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur S2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4213_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur S3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4213_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur S4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4213_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Temperatur VFD1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4213_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'Volumenstrom VFD1',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_4213_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4213_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4213_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '032_1_0',
            name: 'Spannung 10V',
            type: types.Number_0_1_Volts,
            getRawValue: getRawValueFunctions._0010_4213_0100_032_1_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 0.1,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4213_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_4213_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Betriebsstunden Relais 2',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_4213_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_4213_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 1000,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 256000,
            }, {
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1000000,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 256000000,
            }, ],
        }, ],
        _0010_4214_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur S1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4214_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur S2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4214_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur S3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4214_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur S4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4214_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Temperatur VFD1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4214_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'Volumenstrom VFD1',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_4214_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4214_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4214_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '032_1_0',
            name: 'Spannung 10V',
            type: types.Number_0_1_Volts,
            getRawValue: getRawValueFunctions._0010_4214_0100_032_1_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 0.1,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4214_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_4214_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Betriebsstunden Relais 2',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_4214_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_4214_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 1000,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 256000,
            }, {
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1000000,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 256000000,
            }, ],
        }, ],
        _0010_4221_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4221_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4221_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4221_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4221_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Pumpe 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4221_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl Pumpe 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4221_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Relaismaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4221_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4221_0100_011_1_0,
            parts: [{
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_4221_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Schema',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4221_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_1',
            name: 'Option Kollektor Max_',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4221_0100_015_1_1,
            parts: [{
                offset: 15,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_2',
            name: 'Option Kollektor Min_',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4221_0100_015_1_2,
            parts: [{
                offset: 15,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_4',
            name: 'Option Kollektor Frost',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4221_0100_015_1_4,
            parts: [{
                offset: 15,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_8',
            name: 'Option Röhrenkollektor',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4221_0100_015_1_8,
            parts: [{
                offset: 15,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_16',
            name: 'Option Rückkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4221_0100_015_1_16,
            parts: [{
                offset: 15,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_32',
            name: 'Option WMZ',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4221_0100_015_1_32,
            parts: [{
                offset: 15,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4221_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Betriebsstunden Relais 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4221_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_4221_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_4221_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, ],
        _0010_4223_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_4223_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_4223_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_4223_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_4223_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Pumpe 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4223_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl Pumpe 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4223_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Relaismaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4223_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4223_0100_011_1_0,
            parts: [{
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_4223_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Schema',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4223_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_1',
            name: 'Option Kollektor Max_',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4223_0100_015_1_1,
            parts: [{
                offset: 15,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_2',
            name: 'Option Kollektor Min_',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4223_0100_015_1_2,
            parts: [{
                offset: 15,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_4',
            name: 'Option Kollektor Frost',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4223_0100_015_1_4,
            parts: [{
                offset: 15,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_8',
            name: 'Option Röhrenkollektor',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4223_0100_015_1_8,
            parts: [{
                offset: 15,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_16',
            name: 'Option Rückkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4223_0100_015_1_16,
            parts: [{
                offset: 15,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_32',
            name: 'Option WMZ',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4223_0100_015_1_32,
            parts: [{
                offset: 15,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4223_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Betriebsstunden Relais 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4223_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_Btus,
            getRawValue: getRawValueFunctions._0010_4223_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_4223_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, ],
        _0010_4224_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4224_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4224_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4224_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4224_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Pumpe 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4224_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl Pumpe 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4224_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Relaismaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4224_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4224_0100_011_1_0,
            parts: [{
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_4224_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Schema',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4224_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_1',
            name: 'Option Kollektor Max_',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4224_0100_015_1_1,
            parts: [{
                offset: 15,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_2',
            name: 'Option Kollektor Min_',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4224_0100_015_1_2,
            parts: [{
                offset: 15,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_4',
            name: 'Option Kollektor Frost',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4224_0100_015_1_4,
            parts: [{
                offset: 15,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_8',
            name: 'Option Röhrenkollektor',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4224_0100_015_1_8,
            parts: [{
                offset: 15,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_16',
            name: 'Option Rückkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4224_0100_015_1_16,
            parts: [{
                offset: 15,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_32',
            name: 'Option WMZ',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4224_0100_015_1_32,
            parts: [{
                offset: 15,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4224_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Betriebsstunden Relais 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4224_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_4224_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_4224_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, ],
        _0010_4231_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Warmwasser',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4231_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Kaltwasser',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4231_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Zirkulation',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4231_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Volumenstrom',
            type: types.Number_0_1_LitersPerMinute,
            getRawValue: getRawValueFunctions._0010_4231_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4231_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4231_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_4231_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Optionen',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4231_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4231_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Relaisstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4231_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'SensorDefekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4231_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Temperatur WW-Soll',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4231_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '017_1_0',
            name: 'Temperatur Quelle',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4231_0100_017_1_0,
            parts: [{
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '019_1_0',
            name: 'verbl_ Zapfung',
            type: types.Number_1_Minutes,
            getRawValue: getRawValueFunctions._0010_4231_0100_019_1_0,
            parts: [{
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Schaltspiele',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4231_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_4231_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '030_1_0',
            name: 'Version',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4231_0100_030_1_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, ],
        }, {
            fieldId: '032_2_0',
            name: 'max_ Temperatur Kaltwasser',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4231_0100_032_2_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '034_2_0',
            name: 'min_ Temperatur Kaltwasser',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4231_0100_034_2_0,
            parts: [{
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'max_ Volumenstrom',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_4231_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Zapfmenge',
            type: types.Number_0_1_CubicMeters,
            getRawValue: getRawValueFunctions._0010_4231_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 0.1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 25.6,
            }, ],
        }, ],
        _0010_4241_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Warmwasser (Anzeige)',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4241_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Kaltwasser',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4241_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Puffer',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4241_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Volumenstrom',
            type: types.Number_0_01_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_4241_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4241_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4241_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '012_1_1',
            name: 'Option Zirkulation aktiv',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_012_1_1,
            parts: [{
                offset: 12,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_2',
            name: 'Option Notbetrieb aktiv',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_012_1_2,
            parts: [{
                offset: 12,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_1',
            name: 'Zapfung aktiv',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_013_1_1,
            parts: [{
                offset: 13,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_2',
            name: 'Frischwasserbereitung aktiv',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_013_1_2,
            parts: [{
                offset: 13,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_4',
            name: 'Handbetrieb aktiv',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_013_1_4,
            parts: [{
                offset: 13,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_8',
            name: 'Notbetrieb aktiv',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_013_1_8,
            parts: [{
                offset: 13,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_16',
            name: 'Blockierschutz aktiv',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_013_1_16,
            parts: [{
                offset: 13,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_32',
            name: 'Zirkulation aktiv',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_013_1_32,
            parts: [{
                offset: 13,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_64',
            name: 'Überhitzung aktiv',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_013_1_64,
            parts: [{
                offset: 13,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_128',
            name: 'Zapfungsimpuls aktiv',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_013_1_128,
            parts: [{
                offset: 13,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_1',
            name: 'Relais 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_014_1_1,
            parts: [{
                offset: 14,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_2',
            name: 'Relais 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_014_1_2,
            parts: [{
                offset: 14,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_1',
            name: 'Sensor 1 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_015_1_1,
            parts: [{
                offset: 15,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_2',
            name: 'Sensor 2 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_015_1_2,
            parts: [{
                offset: 15,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_4',
            name: 'Sensor 3 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_015_1_4,
            parts: [{
                offset: 15,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_8',
            name: 'Sensor 4 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_015_1_8,
            parts: [{
                offset: 15,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Warmwassersolltemperatur',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4241_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '017_1_0',
            name: 'Temperatur Mischer',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4241_0100_017_1_0,
            parts: [{
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '018_1_0',
            name: 'dT Puffer',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._0010_4241_0100_018_1_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 0.1,
            }, ],
        }, {
            fieldId: '019_1_0',
            name: 'Verbleibende Zirkulationsdauer',
            type: types.Number_1_Minutes,
            getRawValue: getRawValueFunctions._0010_4241_0100_019_1_0,
            parts: [{
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Anzahl Schaltspiele',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_4241_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '030_1_0',
            name: 'Softwareversion major',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_030_1_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '031_1_0',
            name: 'Softwareversion minor',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_031_1_0,
            parts: [{
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '032_2_0',
            name: 'Temperatur max_ Kaltwasser',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4241_0100_032_2_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '034_2_0',
            name: 'Temperatur min_ Kaltwasser',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4241_0100_034_2_0,
            parts: [{
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Volumenstrom max_',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_4241_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Zapfmenge max_',
            type: types.Number_1_CubicMeters,
            getRawValue: getRawValueFunctions._0010_4241_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '040_2_0',
            name: 'Temperatur Warmwasser (Regel)',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4241_0100_040_2_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '042_2_0',
            name: 'Temperatur Quelle (Regel)',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4241_0100_042_2_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '044_1_0',
            name: 'Interner Wert',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_044_1_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_0',
            name: 'Interner Wert',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_045_1_0,
            parts: [{
                offset: 45,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_0',
            name: 'Interner Wert',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_046_1_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_0',
            name: 'Interner Wert',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_047_1_0,
            parts: [{
                offset: 47,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_2_0',
            name: 'Interner Wert',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_048_2_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '050_2_0',
            name: 'Interner Wert',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4241_0100_050_2_0,
            parts: [{
                offset: 50,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 51,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_4251_0100: [{
            fieldId: '000_2_0',
            name: 'Absorbertemperatur (S1)',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4251_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur hinter Wärmepumpe (S2)',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4251_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur hinter Erdspeicher (S3)',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4251_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Ann_ Temperatur Erdspeicher',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4251_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur hinter Pumpe 1 (S4)',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4251_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_4251_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Einschalttemperaturdifferenz',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._0010_4251_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Ausschalttemperaturdifferenz',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._0010_4251_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'dT Wärmepumpe an',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._0010_4251_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'dT Wärmepumpe aus',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._0010_4251_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Erdspeicher Maximaltemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4251_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_1_1',
            name: 'S1 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4251_0100_022_1_1,
            parts: [{
                offset: 22,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_2',
            name: 'S2 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4251_0100_022_1_2,
            parts: [{
                offset: 22,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_4',
            name: 'S3 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4251_0100_022_1_4,
            parts: [{
                offset: 22,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_8',
            name: 'S4 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4251_0100_022_1_8,
            parts: [{
                offset: 22,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_16',
            name: 'dT ausreichend',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4251_0100_022_1_16,
            parts: [{
                offset: 22,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_32',
            name: 'Wärmepumpe an',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4251_0100_022_1_32,
            parts: [{
                offset: 22,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_64',
            name: 'Erdspeicher voll',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4251_0100_022_1_64,
            parts: [{
                offset: 22,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_128',
            name: 'Relais 1 an',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4251_0100_022_1_128,
            parts: [{
                offset: 22,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_256',
            name: 'Relais 2 an',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4251_0100_022_1_256,
            parts: [{
                offset: 22,
                mask: 256,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_4251_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, ],
        _0010_4252_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4252_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4252_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4252_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4252_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Einheit',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4252_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4252_0100_011_1_0,
            parts: [{
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Betriebssekunden Relais 1',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_4252_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '016_4_0',
            name: 'Betriebssekunden Relais 2',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_4252_0100_016_4_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '020_1_1',
            name: 'Sensor 1 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_020_1_1,
            parts: [{
                offset: 20,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_2',
            name: 'Sensor 2 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_020_1_2,
            parts: [{
                offset: 20,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_4',
            name: 'Sensor 3 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_020_1_4,
            parts: [{
                offset: 20,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_8',
            name: 'Sensor 4 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_020_1_8,
            parts: [{
                offset: 20,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_1',
            name: 'Kollektor Nottemperatur',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_022_1_1,
            parts: [{
                offset: 22,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_2',
            name: 'Kollektor Minimaltemperatur',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_022_1_2,
            parts: [{
                offset: 22,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_4',
            name: 'Wärmetauscher Nottemperatur',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_022_1_4,
            parts: [{
                offset: 22,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_8',
            name: 'Speichernottemperatur',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_022_1_8,
            parts: [{
                offset: 22,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_16',
            name: 'Speicher leer',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_022_1_16,
            parts: [{
                offset: 22,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_32',
            name: 'Speichermaximaltemperatur',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_022_1_32,
            parts: [{
                offset: 22,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_64',
            name: 'Kollektor Frostschutz',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_022_1_64,
            parts: [{
                offset: 22,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_128',
            name: 'Wärmetauscher Frostschutz',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_022_1_128,
            parts: [{
                offset: 22,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '023_1_1',
            name: 'Röhrenkollektor',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_023_1_1,
            parts: [{
                offset: 23,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '023_1_2',
            name: 'Beladung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_023_1_2,
            parts: [{
                offset: 23,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '023_1_4',
            name: 'R1 - Handbetrieb',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_023_1_4,
            parts: [{
                offset: 23,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '023_1_8',
            name: 'R2 - Handbetrieb',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_023_1_8,
            parts: [{
                offset: 23,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_4252_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Uhrzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '030_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_4252_0100_030_2_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, ],
        _0010_4261_0100: [{
            fieldId: '000_2_0',
            name: 'T LT OUT:',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4261_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'T LT IN:',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4261_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'T MT OUT:',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4261_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'T A1 OUT:',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4261_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'T A2 OUT:',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4261_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'T HT Ext:',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4261_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'T LT Ext:',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4261_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_1_1',
            name: 'Anlage:',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4261_0100_014_1_1,
            parts: [{
                offset: 14,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_2',
            name: 'Heizmodus:',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4261_0100_014_1_2,
            parts: [{
                offset: 14,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_4',
            name: 'Strömungswächter LT-Kreis:',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4261_0100_014_1_4,
            parts: [{
                offset: 14,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_8',
            name: 'HV_A1_IN:',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4261_0100_014_1_8,
            parts: [{
                offset: 14,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_16',
            name: 'HV_A2_IN:',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4261_0100_014_1_16,
            parts: [{
                offset: 14,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_32',
            name: 'HV_OUT:',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4261_0100_014_1_32,
            parts: [{
                offset: 14,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_64',
            name: 'Melderelais',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4261_0100_014_1_64,
            parts: [{
                offset: 14,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'RCS %:',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4261_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Pumpenrelais:',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4261_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '017_1_0',
            name: 'SPR Relais:',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4261_0100_017_1_0,
            parts: [{
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '018_1_0',
            name: 'Phase:',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4261_0100_018_1_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '019_1_0',
            name: 'Systemcode:',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4261_0100_019_1_0,
            parts: [{
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'W Soll:',
            type: types.Number_1_Hertz,
            getRawValue: getRawValueFunctions._0010_4261_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'T LTS OUT AVG',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4261_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '052_2_0',
            name: 'T LT OUT Cycle',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4261_0100_052_2_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '048_2_0',
            name: 'T LT IN AVG',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4261_0100_048_2_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '050_2_0',
            name: 'T LT IN Cycle',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4261_0100_050_2_0,
            parts: [{
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'T MT OUT AVG',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4261_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '054_2_0',
            name: 'T MT OUT Cycle',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4261_0100_054_2_0,
            parts: [{
                offset: 54,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 55,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '056_2_0',
            name: 'dQ LT Cycle',
            type: types.Number_0_1_Kilowatts,
            getRawValue: getRawValueFunctions._0010_4261_0100_056_2_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '058_2_0',
            name: 'dV LT',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_4261_0100_058_2_0,
            parts: [{
                offset: 58,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 59,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '052_2_0_1',
            name: 'Aktuellen Sollwert:',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4261_0100_052_2_0_1,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '030_2_0',
            name: 'Externe Solltemperatur:',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4261_0100_030_2_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'Anzahl Zyklen:',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4261_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_4_0',
            name: 'Aufsummierte Besprühungzeit:',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4261_0100_036_4_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '040_2_0',
            name: 'Systemzeit:',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_4261_0100_040_2_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '042_2_0',
            name: 'Jahr:',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4261_0100_042_2_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '044_1_0',
            name: 'Monat:',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4261_0100_044_1_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_0',
            name: 'Tag:',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4261_0100_045_1_0,
            parts: [{
                offset: 45,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_0',
            name: 'Kern:',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_4261_0100_046_1_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, {
                offset: 47,
                mask: 255,
                isSigned: true,
                factor: 0.01,
            }, ],
        }, ],
        _0010_4265_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4265_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4265_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4265_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4265_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4265_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4265_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_1',
            name: 'Sensor 1 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4265_0100_010_1_1,
            parts: [{
                offset: 10,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_2',
            name: 'Sensor 2 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4265_0100_010_1_2,
            parts: [{
                offset: 10,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_4',
            name: 'Sensor 3 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4265_0100_010_1_4,
            parts: [{
                offset: 10,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_8',
            name: 'Sensor 4 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4265_0100_010_1_8,
            parts: [{
                offset: 10,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_4265_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Betriebsstunden Relais 2',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_4265_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_4265_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_4265_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, ],
        _0010_4278_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4278_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4278_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4278_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4278_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4278_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4278_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_1',
            name: 'Sensor 1 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4278_0100_010_1_1,
            parts: [{
                offset: 10,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_2',
            name: 'Sensor 2 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4278_0100_010_1_2,
            parts: [{
                offset: 10,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_4',
            name: 'Sensor 3 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4278_0100_010_1_4,
            parts: [{
                offset: 10,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_8',
            name: 'Sensor 4 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4278_0100_010_1_8,
            parts: [{
                offset: 10,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_16',
            name: 'Speichernottemperatur',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4278_0100_010_1_16,
            parts: [{
                offset: 10,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_32',
            name: 'Kollektor Nottemperatur',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4278_0100_010_1_32,
            parts: [{
                offset: 10,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_1',
            name: 'R1 - Handbetrieb',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4278_0100_011_1_1,
            parts: [{
                offset: 11,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_2',
            name: 'R2 - Handbetrieb',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4278_0100_011_1_2,
            parts: [{
                offset: 11,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_4278_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Betriebsstunden Relais 2',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_4278_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_4278_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '022_1_0',
            name: 'Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4278_0100_022_1_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '023_1_0',
            name: 'Programm',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4278_0100_023_1_0,
            parts: [{
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_4278_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, ],
        _0010_4279_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_4279_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_4279_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_4279_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_4279_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4279_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4279_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_1',
            name: 'Sensor 1 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4279_0100_010_1_1,
            parts: [{
                offset: 10,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_2',
            name: 'Sensor 2 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4279_0100_010_1_2,
            parts: [{
                offset: 10,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_4',
            name: 'Sensor 3 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4279_0100_010_1_4,
            parts: [{
                offset: 10,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_8',
            name: 'Sensor 4 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4279_0100_010_1_8,
            parts: [{
                offset: 10,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_16',
            name: 'Speichernottemperatur',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4279_0100_010_1_16,
            parts: [{
                offset: 10,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_32',
            name: 'Kollektor Nottemperatur',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4279_0100_010_1_32,
            parts: [{
                offset: 10,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_1',
            name: 'R1 - Handbetrieb',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4279_0100_011_1_1,
            parts: [{
                offset: 11,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_2',
            name: 'R2 - Handbetrieb',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4279_0100_011_1_2,
            parts: [{
                offset: 11,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_4279_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Betriebsstunden Relais 2',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_4279_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_4279_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '022_1_0',
            name: 'Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4279_0100_022_1_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '023_1_0',
            name: 'Programm',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4279_0100_023_1_0,
            parts: [{
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_4279_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, ],
        _0010_427B_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_427B_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_427B_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_427B_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_427B_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_427B_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_427B_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Betriebsstunden Relais 1',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_427B_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Betriebsstunden Relais 2',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_427B_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'UnitType',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_427B_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '017_1_0',
            name: 'System',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_427B_0100_017_1_0,
            parts: [{
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'ErrorMask',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_427B_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_427B_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '020_1_1',
            name: 'Sensor 1 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_427B_0100_020_1_1,
            parts: [{
                offset: 20,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_2',
            name: 'Sensor 2 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_427B_0100_020_1_2,
            parts: [{
                offset: 20,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_4',
            name: 'Sensor 3 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_427B_0100_020_1_4,
            parts: [{
                offset: 20,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_8',
            name: 'Sensor 4 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_427B_0100_020_1_8,
            parts: [{
                offset: 20,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'Statusmask',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_427B_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_427B_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '032_2_0',
            name: 'SW-Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_427B_0100_032_2_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '034_2_0',
            name: 'Variante',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_427B_0100_034_2_0,
            parts: [{
                offset: 34,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 35,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_4311_0100: [{
            fieldId: '000_2_0',
            name: 'TC',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4311_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'CD',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4311_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'CU',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4311_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_1_0',
            name: 'P1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4311_0100_006_1_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'P1S',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4311_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '007_1_0',
            name: 'P2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4311_0100_007_1_0,
            parts: [{
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'LS',
            type: types.Number_0_1_None,
            getRawValue: getRawValueFunctions._0010_4311_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Ph',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4311_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_4_0',
            name: 'KWH',
            type: types.Number_0_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_4311_0100_016_4_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 25.6,
            }, {
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 6553.6,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 1677721.6,
            }, ],
        }, ],
        _0010_4321_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4321_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4321_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4321_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_4321_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4321_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_4321_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Systemzeit',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4321_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Status-Info 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4321_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Status-Info 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4321_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Status-Restlaufzeit',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4321_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '016_3_0',
            name: 'Filterlaufzeit heute',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_4321_0100_016_3_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, ],
        }, {
            fieldId: '019_1_0',
            name: 'Regelstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_4321_0100_019_1_0,
            parts: [{
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_4321_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, ],
        _0010_5111_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5111_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5111_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5111_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5111_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5111_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Systemdruck',
            type: types.Number_0_1_Bars,
            getRawValue: getRawValueFunctions._0010_5111_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Volumenstrom',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_5111_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5111_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Systemmeldung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5111_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_5111_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'Datum',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5111_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Uhrzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_5111_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, ],
        _0010_5112_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5112_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5112_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5112_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5112_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Volumenstrom',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_5112_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5112_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_0',
            name: 'Systemmeldung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5112_0100_011_1_0,
            parts: [{
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Leistung',
            type: types.Number_0_001_Kilowatts,
            getRawValue: getRawValueFunctions._0010_5112_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 0.001,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 0.256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 65.536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '016_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_5112_0100_016_4_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Datum',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5112_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Uhrzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_5112_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, ],
        _0010_5121_0100: [{
            fieldId: '000_2_0',
            name: 'Kaltwassertemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5121_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5121_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5121_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Sollwert',
            type: types.Number_0_01_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5121_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Ladetemperatur',
            type: types.Number_0_01_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5121_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Ladevolumenstrom',
            type: types.Number_0_01_LitersPerMinute,
            getRawValue: getRawValueFunctions._0010_5121_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Warmwassertemperatur',
            type: types.Number_0_01_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5121_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Zapfvolumenstrom',
            type: types.Number_0_01_LitersPerMinute,
            getRawValue: getRawValueFunctions._0010_5121_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'PWM1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5121_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '017_1_0',
            name: 'Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5121_0100_017_1_0,
            parts: [{
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '018_1_0',
            name: 'Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5121_0100_018_1_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '019_1_0',
            name: 'Zapfung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5121_0100_019_1_0,
            parts: [{
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5121_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'Warnungsmaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5121_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_5121_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '036_4_0',
            name: 'Zapfmenge',
            type: types.Number_0_1_None,
            getRawValue: getRawValueFunctions._0010_5121_0100_036_4_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 0.1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 25.6,
            }, {
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 6553.6,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 1677721.6,
            }, ],
        }, {
            fieldId: '040_4_0',
            name: 'Datum',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5121_0100_040_4_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '044_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_5121_0100_044_2_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '046_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_5121_0100_046_2_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 47,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, ],
        _0010_5141_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5141_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5141_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5141_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5141_0100_006_1_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '007_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5141_0100_007_1_0,
            parts: [{
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Systemmeldung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5141_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5141_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Datum',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5141_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Uhrzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_5141_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, ],
        _0010_5210_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5210_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5210_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5210_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5210_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5210_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5210_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5210_0100_011_1_0,
            parts: [{
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Volumenstrom',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_5210_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Frostschutzgehalt',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5210_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Frostschutzart',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5210_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Wärme',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_5210_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '022_1_0',
            name: 'Hardware',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5210_0100_022_1_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '023_1_0',
            name: 'Software',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5210_0100_023_1_0,
            parts: [{
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5210_0100_024_1_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '025_1_0',
            name: 'Fehler-Info 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5210_0100_025_1_0,
            parts: [{
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'Fehler-Info 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5210_0100_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_0',
            name: 'Relaismaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5210_0100_027_1_0,
            parts: [{
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_5210_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_5221_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5221_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5221_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5221_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5221_0100_006_1_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '007_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5221_0100_007_1_0,
            parts: [{
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Relaismaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5221_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5221_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5221_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Volumenstrom',
            type: types.Number_0_1_LitersPerMinute,
            getRawValue: getRawValueFunctions._0010_5221_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_5221_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, ],
        _0010_5231_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5231_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5231_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5231_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5231_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Durchfluss Sensor 5',
            type: types.Number_0_1_LitersPerMinute,
            getRawValue: getRawValueFunctions._0010_5231_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Drehzahl 1',
            type: types.Number_0_1_Percent,
            getRawValue: getRawValueFunctions._0010_5231_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Drehzahl 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5231_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5231_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Warnungsmaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5231_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Statusmaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5231_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_5231_0100_016_4_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Betriebssekunden Relais 1',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_5231_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'Betriebssekunden Relais 2',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_5231_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Zapfmenge',
            type: types.Number_0_001_CubicMeters,
            getRawValue: getRawValueFunctions._0010_5231_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 0.001,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 0.256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 65.536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'Datum',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5231_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_5231_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_5231_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, ],
        _0010_5311_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5311_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5311_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5311_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5311_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Einstrahlung Sensor 5',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_5311_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Drehzahl R1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5311_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_0',
            name: 'Drehzahl R2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5311_0100_011_1_0,
            parts: [{
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Drehzahl R3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5311_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Relais-Maske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_5311_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '021_1_0',
            name: 'System',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_021_1_0,
            parts: [{
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_1',
            name: 'Optionen: Frostschutz',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_022_1_1,
            parts: [{
                offset: 22,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_4',
            name: 'Optionen: Röhrenkollektor',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_022_1_4,
            parts: [{
                offset: 22,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_8',
            name: 'Optionen: Rückkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_022_1_8,
            parts: [{
                offset: 22,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_16',
            name: 'Optionen: Kollektorkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_022_1_16,
            parts: [{
                offset: 22,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_32',
            name: 'Optionen: Externer WT',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_022_1_32,
            parts: [{
                offset: 22,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_64',
            name: 'Optionen: Nachheizung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_022_1_64,
            parts: [{
                offset: 22,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_128',
            name: 'Optionen: Rücklaufanhebung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_022_1_128,
            parts: [{
                offset: 22,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_256',
            name: 'Optionen: Ventil',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_022_1_256,
            parts: [{
                offset: 22,
                mask: 256,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_512',
            name: 'Optionen: Minimal',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_022_1_512,
            parts: [{
                offset: 22,
                mask: 512,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_1024',
            name: 'Optionen: WMZ',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_022_1_1024,
            parts: [{
                offset: 22,
                mask: 1024,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_2048',
            name: 'Optionen: Boilerladung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_022_1_2048,
            parts: [{
                offset: 22,
                mask: 2048,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_4096',
            name: 'Optionen: Solarzelle',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_022_1_4096,
            parts: [{
                offset: 22,
                mask: 4096,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_8192',
            name: 'Optionen: 2_ Kollektor-Ventil',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_022_1_8192,
            parts: [{
                offset: 22,
                mask: 8192,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_024_1_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '025_1_0',
            name: 'Sensorbruch-Maske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_025_1_0,
            parts: [{
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'Sensorkurzschluss-Maske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_5311_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, ],
        _0010_5400_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5400_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5400_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5400_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5400_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5400_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5400_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5400_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5400_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Sensor 9',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5400_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Einstrahlung Sensor',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_5400_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Temperatur Sensor 11',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5400_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Temperatur Sensor 12',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5400_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'Volumenstrom Sensor 1',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_5400_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Volumenstrom Sensor 2',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_5400_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'Volumenstrom Sensor 3',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_5400_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Druck Sensor 11',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0010_5400_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 37,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Druck Sensor 12',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0010_5400_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '040_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5400_0100_040_1_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '041_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5400_0100_041_1_0,
            parts: [{
                offset: 41,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '042_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5400_0100_042_1_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '043_1_0',
            name: 'Drehzahl Relais 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5400_0100_043_1_0,
            parts: [{
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_0',
            name: 'Drehzahl Relais 5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5400_0100_044_1_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_0',
            name: 'Regler Ausgang 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5400_0100_045_1_0,
            parts: [{
                offset: 45,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_0',
            name: 'Regler Ausgang 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5400_0100_046_1_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_4_0',
            name: 'Systemdatum',
            type: types.DateTime_1_None,
            getRawValue: getRawValueFunctions._0010_5400_0100_048_4_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '052_4_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5400_0100_052_4_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 54,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 55,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '056_4_0',
            name: 'Warnungmaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5400_0100_056_4_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 58,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 59,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_5410_0100: [{
            fieldId: '000_2_0',
            name: 'TVorlaufSoll',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5410_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_1_0',
            name: 'Betriebsstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5410_0100_002_1_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '003_1_0',
            name: 'Betriebsart',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5410_0100_003_1_0,
            parts: [{
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '004_4_0',
            name: 'Brennerstarts',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5410_0100_004_4_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_5420_0100: [{
            fieldId: '000_4_0',
            name: 'Wert',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_5420_0100_000_4_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '004_4_0',
            name: 'Leistung',
            type: types.Number_1_Watts,
            getRawValue: getRawValueFunctions._0010_5420_0100_004_4_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '008_4_0',
            name: 'WertHeute',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_5420_0100_008_4_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'WertWoche',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_5420_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_5510_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5510_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5510_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5510_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5510_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Betriebsstunden',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_5510_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5510_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_0',
            name: 'Regelstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5510_0100_011_1_0,
            parts: [{
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5510_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_5611_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5611_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5611_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5611_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_5611_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5611_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5611_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Mischer auf',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5611_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_0',
            name: 'Mischer zu',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_5611_0100_011_1_0,
            parts: [{
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '018_1_0',
            name: 'Systemmeldung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5611_0100_018_1_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Datum',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_5611_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Uhrzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_5611_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, ],
        _0010_6610_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_6610_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_6610_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_6610_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_6610_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_6610_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_6610_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_1_1',
            name: 'Relaisstatus 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_012_1_1,
            parts: [{
                offset: 12,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_2',
            name: 'Relaisstatus 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_012_1_2,
            parts: [{
                offset: 12,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_4',
            name: 'Relaisstatus 3',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_012_1_4,
            parts: [{
                offset: 12,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_8',
            name: 'Relaisstatus 4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_012_1_8,
            parts: [{
                offset: 12,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_16',
            name: 'Relaisstatus 5',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_012_1_16,
            parts: [{
                offset: 12,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_32',
            name: 'Relaisstatus 6',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_012_1_32,
            parts: [{
                offset: 12,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Drehzahl 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_6610_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '030_1_0',
            name: 'Drehzahl 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_6610_0100_030_1_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '031_1_0',
            name: 'Drehzahl 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_6610_0100_031_1_0,
            parts: [{
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Fehlernummer',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '018_1_0',
            name: 'Fehler-Info 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_018_1_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '019_1_0',
            name: 'Fehler-Info 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_019_1_0,
            parts: [{
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_0',
            name: 'Fehler-Info 3',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_020_1_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '021_1_0',
            name: 'Fehler-Info 4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_021_1_0,
            parts: [{
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Anlagenoptionen 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '032_1_0',
            name: 'Anlagenoptionen 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_032_1_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_1_0',
            name: 'System',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_024_1_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '025_2_0',
            name: 'Version',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_025_2_0,
            parts: [{
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '027_1_0',
            name: 'Modulstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_027_1_0,
            parts: [{
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '033_2_0',
            name: 'Einstrahlung',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_6610_0100_033_2_0,
            parts: [{
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 34,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '035_1_0',
            name: 'Betriebsstunden-Flag',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6610_0100_035_1_0,
            parts: [{
                offset: 35,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_6620_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_6620_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_6620_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_6620_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_6620_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_6620_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_6620_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_1_1',
            name: 'Relaisstatus 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_012_1_1,
            parts: [{
                offset: 12,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_2',
            name: 'Relaisstatus 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_012_1_2,
            parts: [{
                offset: 12,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_4',
            name: 'Relaisstatus 3',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_012_1_4,
            parts: [{
                offset: 12,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_8',
            name: 'Relaisstatus 4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_012_1_8,
            parts: [{
                offset: 12,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_16',
            name: 'Relaisstatus 5',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_012_1_16,
            parts: [{
                offset: 12,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_32',
            name: 'Relaisstatus 6',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_012_1_32,
            parts: [{
                offset: 12,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Drehzahl 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_6620_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '030_1_0',
            name: 'Drehzahl 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_6620_0100_030_1_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '031_1_0',
            name: 'Drehzahl 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_6620_0100_031_1_0,
            parts: [{
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Fehlernummer',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '018_1_0',
            name: 'Fehler-Info 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_018_1_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '019_1_0',
            name: 'Fehler-Info 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_019_1_0,
            parts: [{
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_0',
            name: 'Fehler-Info 3',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_020_1_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '021_1_0',
            name: 'Fehler-Info 4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_021_1_0,
            parts: [{
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Anlagenoptionen 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '024_1_0',
            name: 'System',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_024_1_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '025_2_0',
            name: 'Version',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_025_2_0,
            parts: [{
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '027_1_0',
            name: 'Modulstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_027_1_0,
            parts: [{
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_6620_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_7101_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7101_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7101_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7101_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7101_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7101_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur RPS',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7101_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Druck RPS',
            type: types.Number_0_1_Bars,
            getRawValue: getRawValueFunctions._0010_7101_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur VFS',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7101_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Durchfluss VFS',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7101_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '024_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7101_0100_024_1_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '025_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7101_0100_025_1_0,
            parts: [{
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7101_0100_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_0',
            name: 'Drehzahl Relais 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7101_0100_027_1_0,
            parts: [{
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_0',
            name: 'PWM 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7101_0100_022_1_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '023_1_0',
            name: 'PWM 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7101_0100_023_1_0,
            parts: [{
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_2_0_1',
            name: 'Durchfluss VFS',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7101_0100_016_2_0_1,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Durchfluss V40',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7101_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '060_2_0',
            name: 'Durchfluss FlowRotor',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7101_0100_060_2_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 61,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '048_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7101_0100_048_4_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '054_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_054_2_0,
            parts: [{
                offset: 54,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 55,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '056_4_0',
            name: 'Datum',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_056_4_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 58,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 59,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '052_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_052_2_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 53,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Betriebssekunden Relais 1',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7101_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'Betriebssekunden Relais 2',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7101_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_4_0',
            name: 'Betriebssekunden Relais 3',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7101_0100_036_4_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '040_4_0',
            name: 'Betriebssekunden Relais 4',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7101_0100_040_4_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 42,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 43,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '046_2_0',
            name: 'Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_046_2_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 47,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '046_1_1',
            name: 'Blockierschutz 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_046_1_1,
            parts: [{
                offset: 46,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_2',
            name: 'Blockierschutz 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_046_1_2,
            parts: [{
                offset: 46,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_4',
            name: 'Blockierschutz 3',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_046_1_4,
            parts: [{
                offset: 46,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_8',
            name: 'Blockierschutz 4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_046_1_8,
            parts: [{
                offset: 46,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_16',
            name: 'Initialisierung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_046_1_16,
            parts: [{
                offset: 46,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_32',
            name: 'Befüllung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_046_1_32,
            parts: [{
                offset: 46,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_64',
            name: 'Stabilisierung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_046_1_64,
            parts: [{
                offset: 46,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_128',
            name: 'Pumpenverzögerung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_046_1_128,
            parts: [{
                offset: 46,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_1',
            name: 'Überwärmeabfuhr',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_047_1_1,
            parts: [{
                offset: 47,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_2',
            name: 'Nachlauf',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_047_1_2,
            parts: [{
                offset: 47,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_4',
            name: 'Thermische Desinfektion',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_047_1_4,
            parts: [{
                offset: 47,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_8',
            name: 'Systemkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_047_1_8,
            parts: [{
                offset: 47,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_16',
            name: 'Speicherkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_047_1_16,
            parts: [{
                offset: 47,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_32',
            name: 'Spreizung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_047_1_32,
            parts: [{
                offset: 47,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_64',
            name: 'Frostschutz',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_047_1_64,
            parts: [{
                offset: 47,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_128',
            name: 'Kollektorkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_047_1_128,
            parts: [{
                offset: 47,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_0',
            name: 'Einheit',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_020_1_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_2_0',
            name: 'Fehler',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_044_2_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '044_1_1',
            name: 'Fehler S1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_044_1_1,
            parts: [{
                offset: 44,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_2',
            name: 'Fehler S2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_044_1_2,
            parts: [{
                offset: 44,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_4',
            name: 'Fehler S3',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_044_1_4,
            parts: [{
                offset: 44,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_8',
            name: 'Fehler S4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_044_1_8,
            parts: [{
                offset: 44,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_16',
            name: 'Fehler S5',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_044_1_16,
            parts: [{
                offset: 44,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_32',
            name: 'Fehler S6',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_044_1_32,
            parts: [{
                offset: 44,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_64',
            name: 'Fehler S7',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_044_1_64,
            parts: [{
                offset: 44,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_128',
            name: 'Fehler S8',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_044_1_128,
            parts: [{
                offset: 44,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_1',
            name: 'Fehler S9',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_045_1_1,
            parts: [{
                offset: 45,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_2',
            name: 'Fehler V40',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_045_1_2,
            parts: [{
                offset: 45,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_4',
            name: 'Leckage',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_045_1_4,
            parts: [{
                offset: 45,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_8',
            name: 'Überdruck',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_045_1_8,
            parts: [{
                offset: 45,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_16',
            name: 'Durchflussfehler',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7101_0100_045_1_16,
            parts: [{
                offset: 45,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, ],
        _0010_7112_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7112_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7112_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7112_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7112_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7112_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7112_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7112_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7112_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Sensor 9',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7112_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Einstrahlung Sensor 10',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7112_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Temperatur Sensor 11',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7112_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Temperatur Sensor 12',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7112_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'Volumenstrom Sensor 9',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7112_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Volumenstrom Sensor 11',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7112_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'Volumenstrom Sensor 12',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7112_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Druck Sensor 11',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0010_7112_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 37,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Druck Sensor 12',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0010_7112_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '040_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7112_0100_040_1_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '041_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7112_0100_041_1_0,
            parts: [{
                offset: 41,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '042_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7112_0100_042_1_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '043_1_0',
            name: 'Drehzahl Relais 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7112_0100_043_1_0,
            parts: [{
                offset: 43,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_0',
            name: 'Drehzahl Relais 5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7112_0100_044_1_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_4_0',
            name: 'Systemdatum',
            type: types.DateTime_1_None,
            getRawValue: getRawValueFunctions._0010_7112_0100_048_4_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '052_4_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7112_0100_052_4_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 54,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 55,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7113_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Modul 1 Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7113_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Modul 1 Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7113_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Modul 1 Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7113_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Modul 1 Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7113_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Modul 1 Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7113_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Modul 1 Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7113_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Modul 2 Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7113_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Modul 2 Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7113_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Modul 2 Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7113_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Temperatur Modul 2 Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7113_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Temperatur Modul 2 Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7113_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Temperatur Modul 2 Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7113_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, ],
        _0010_7120_0100: [{
            fieldId: '000_2_0',
            name: 'Vorlauf-Soll-Temperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7120_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_1_0',
            name: 'Betriebsstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7120_0100_002_1_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_7130_0100: [{
            fieldId: '000_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7130_0100_000_4_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '008_4_0',
            name: 'Wärmemenge heute',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7130_0100_008_4_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Wärmemenge Woche',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7130_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7140_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7140_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7140_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7140_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7140_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7140_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7140_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7140_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7140_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Sensor 9',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7140_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Einstrahlung Sensor 10',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7140_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Volumenstrom Sensor 10',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7140_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '024_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7140_0100_024_1_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '025_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7140_0100_025_1_0,
            parts: [{
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7140_0100_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Systemdatum',
            type: types.DateTime_1_None,
            getRawValue: getRawValueFunctions._0010_7140_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7140_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7150_0100: [{
            fieldId: '000_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7150_0100_000_4_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '008_4_0',
            name: 'Wärmemenge heute',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7150_0100_008_4_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Wärmemenge Woche',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7150_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7160_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7160_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7160_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7160_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7160_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7160_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7160_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7160_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7160_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Temperatur GFD1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7160_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Temperatur GFD2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7160_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Einstrahlung',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7160_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Volumenstrom',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7160_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '044_4_0',
            name: 'Volumenstrom 2',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7160_0100_044_4_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 46,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 47,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '048_4_0',
            name: 'Volumenstrom 3',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7160_0100_048_4_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '020_1_0',
            name: 'Drehzahl A1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7160_0100_020_1_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '021_1_0',
            name: 'Drehzahl A2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7160_0100_021_1_0,
            parts: [{
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_0',
            name: 'Drehzahl A3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7160_0100_022_1_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '023_1_0',
            name: 'Drehzahl A',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7160_0100_023_1_0,
            parts: [{
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Wärme',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7160_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 1000,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 256000,
            }, {
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 1000000,
            }, {
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 256000000,
            }, {
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 1000000000,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 256000000000,
            }, ],
        }, {
            fieldId: '060_2_0',
            name: 'Wärme 2',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7160_0100_060_2_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 61,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, {
                offset: 62,
                mask: 255,
                isSigned: false,
                factor: 1000,
            }, {
                offset: 63,
                mask: 255,
                isSigned: true,
                factor: 256000,
            }, {
                offset: 64,
                mask: 255,
                isSigned: false,
                factor: 1000000,
            }, {
                offset: 65,
                mask: 255,
                isSigned: true,
                factor: 256000000,
            }, {
                offset: 66,
                mask: 255,
                isSigned: false,
                factor: 1000000000,
            }, {
                offset: 67,
                mask: 255,
                isSigned: true,
                factor: 256000000000,
            }, ],
        }, {
            fieldId: '068_2_0',
            name: 'Wärme 3',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7160_0100_068_2_0,
            parts: [{
                offset: 68,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 69,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, {
                offset: 70,
                mask: 255,
                isSigned: false,
                factor: 1000,
            }, {
                offset: 71,
                mask: 255,
                isSigned: true,
                factor: 256000,
            }, {
                offset: 72,
                mask: 255,
                isSigned: false,
                factor: 1000000,
            }, {
                offset: 73,
                mask: 255,
                isSigned: true,
                factor: 256000000,
            }, {
                offset: 74,
                mask: 255,
                isSigned: false,
                factor: 1000000000,
            }, {
                offset: 75,
                mask: 255,
                isSigned: true,
                factor: 256000000000,
            }, ],
        }, {
            fieldId: '052_4_0',
            name: 'Leistung 2',
            type: types.Number_0_001_Kilowatts,
            getRawValue: getRawValueFunctions._0010_7160_0100_052_4_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 53,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 54,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 55,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '056_4_0',
            name: 'Leistung 3',
            type: types.Number_0_001_Kilowatts,
            getRawValue: getRawValueFunctions._0010_7160_0100_056_4_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 57,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 58,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 59,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '032_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7160_0100_032_1_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '033_1_0',
            name: 'Sensorbruch-Nummer',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7160_0100_033_1_0,
            parts: [{
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '034_1_0',
            name: 'Sensorkurzschluss-Nummer',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7160_0100_034_1_0,
            parts: [{
                offset: 34,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '042_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7160_0100_042_2_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '042_2_0_1',
            name: 'Systemzeit2',
            type: types.Weektime_1_None,
            getRawValue: getRawValueFunctions._0010_7160_0100_042_2_0_1,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, ],
        _0010_7161_0100: [{
            fieldId: '000_2_0',
            name: 'Vorlaufsolltemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7161_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_1_0',
            name: 'Mischerlaufzeit',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7161_0100_002_1_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '003_1_0',
            name: 'Mischerpausenzeit',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7161_0100_003_1_0,
            parts: [{
                offset: 3,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'HK-Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7161_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_7162_0100: [{
            fieldId: '000_2_0',
            name: 'Vorlaufsolltemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7162_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_1_0',
            name: 'Mischerlaufzeit',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7162_0100_002_1_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '003_1_0',
            name: 'Mischerpausenzeit',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7162_0100_003_1_0,
            parts: [{
                offset: 3,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'HK-Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7162_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_7163_0100: [{
            fieldId: '000_2_0',
            name: 'Vorlaufsolltemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7163_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_1_0',
            name: 'Mischerlaufzeit',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7163_0100_002_1_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '003_1_0',
            name: 'Mischerpausenzeit',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7163_0100_003_1_0,
            parts: [{
                offset: 3,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'HK-Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7163_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_7210_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7210_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7210_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7210_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7210_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7210_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7210_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7210_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7210_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Einstrahlung',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7210_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Volumenstrom',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7210_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '020_1_0',
            name: 'Drehzahl A1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7210_0100_020_1_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '021_1_0',
            name: 'Drehzahl A2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7210_0100_021_1_0,
            parts: [{
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_0',
            name: 'Drehzahl A3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7210_0100_022_1_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '023_1_0',
            name: 'Drehzahl A',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7210_0100_023_1_0,
            parts: [{
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Wärme',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7210_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 1000,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 256000,
            }, {
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 1000000,
            }, {
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 256000000,
            }, {
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 1000000000,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 256000000000,
            }, ],
        }, {
            fieldId: '032_1_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7210_0100_032_1_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '033_1_0',
            name: 'Sensorbruch-Nummer',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7210_0100_033_1_0,
            parts: [{
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '034_1_0',
            name: 'Sensorkurzschluss-Nummer',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7210_0100_034_1_0,
            parts: [{
                offset: 34,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '042_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7210_0100_042_2_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '042_2_0_1',
            name: 'Systemzeit2',
            type: types.Weektime_1_None,
            getRawValue: getRawValueFunctions._0010_7210_0100_042_2_0_1,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, ],
        _0010_7211_0100: [{
            fieldId: '000_2_0',
            name: 'Vorlaufsolltemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7211_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_1_0',
            name: 'Mischerlaufzeit',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7211_0100_002_1_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '003_1_0',
            name: 'Mischerpausenzeit',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7211_0100_003_1_0,
            parts: [{
                offset: 3,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'HK-Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7211_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_7212_0100: [{
            fieldId: '000_2_0',
            name: 'Vorlaufsolltemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7212_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_1_0',
            name: 'Mischerlaufzeit',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7212_0100_002_1_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '003_1_0',
            name: 'Mischerpausenzeit',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7212_0100_003_1_0,
            parts: [{
                offset: 3,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'HK-Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7212_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_7213_0100: [{
            fieldId: '000_2_0',
            name: 'Vorlaufsolltemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7213_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_1_0',
            name: 'Mischerlaufzeit',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7213_0100_002_1_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '003_1_0',
            name: 'Mischerpausenzeit',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7213_0100_003_1_0,
            parts: [{
                offset: 3,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'HK-Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7213_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_7221_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7221_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7221_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7221_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7221_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7221_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Volumenstrom',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7221_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Systemdruck',
            type: types.Number_0_1_Bars,
            getRawValue: getRawValueFunctions._0010_7221_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Ansteuerung 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7221_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Ansteuerung 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7221_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7221_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '017_1_0',
            name: 'PWM 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7221_0100_017_1_0,
            parts: [{
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '018_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7221_0100_018_1_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '019_1_0',
            name: 'PWM 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7221_0100_019_1_0,
            parts: [{
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7221_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_1_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_7221_0100_036_1_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Uhrzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7221_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '040_4_0',
            name: 'Datum',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7221_0100_040_4_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7231_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7231_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7231_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7231_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7231_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7231_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Volumenstrom',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7231_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Systemdruck',
            type: types.Number_0_1_Bars,
            getRawValue: getRawValueFunctions._0010_7231_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7231_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Ansteuerung 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7231_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '017_1_0',
            name: 'Ansteuerung 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7231_0100_017_1_0,
            parts: [{
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '018_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7231_0100_018_1_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '019_1_0',
            name: 'PWM 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7231_0100_019_1_0,
            parts: [{
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7231_0100_020_1_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '021_1_0',
            name: 'PWM 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7231_0100_021_1_0,
            parts: [{
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_1',
            name: 'Handbetrieb 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_022_1_1,
            parts: [{
                offset: 22,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_2',
            name: 'Handbetrieb 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_022_1_2,
            parts: [{
                offset: 22,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7231_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '028_1_1',
            name: 'ΔT Kollektor-Speicher',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_028_1_1,
            parts: [{
                offset: 28,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_1_2',
            name: 'ΔT Vorlauf-Rücklauf',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_028_1_2,
            parts: [{
                offset: 28,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_1_4',
            name: 'Pendelpause',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_028_1_4,
            parts: [{
                offset: 28,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_1_8',
            name: 'Kollektorkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_028_1_8,
            parts: [{
                offset: 28,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_1_16',
            name: 'Rückkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_028_1_16,
            parts: [{
                offset: 28,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_1_32',
            name: 'Frostschutz',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_028_1_32,
            parts: [{
                offset: 28,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_1_64',
            name: 'Röhrenkollektor',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_028_1_64,
            parts: [{
                offset: 28,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_1_128',
            name: 'ΔT3',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_028_1_128,
            parts: [{
                offset: 28,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '029_1_1',
            name: 'Thermostat 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_029_1_1,
            parts: [{
                offset: 29,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '029_1_2',
            name: 'Blockierschutz 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_029_1_2,
            parts: [{
                offset: 29,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '029_1_4',
            name: 'Blockierschutz 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_029_1_4,
            parts: [{
                offset: 29,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '029_1_8',
            name: 'Stabilisierung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_029_1_8,
            parts: [{
                offset: 29,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '032_1_1',
            name: 'Überdruck',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_032_1_1,
            parts: [{
                offset: 32,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '032_1_2',
            name: 'Nachtumwälzung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_032_1_2,
            parts: [{
                offset: 32,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '032_1_4',
            name: 'ΔT zu hoch',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_032_1_4,
            parts: [{
                offset: 32,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_1',
            name: 'S1 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_036_1_1,
            parts: [{
                offset: 36,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_2',
            name: 'S2 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_036_1_2,
            parts: [{
                offset: 36,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_4',
            name: 'S3 defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_036_1_4,
            parts: [{
                offset: 36,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_8',
            name: 'S-Vorlauf defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_036_1_8,
            parts: [{
                offset: 36,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_16',
            name: 'S-Rücklauf defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_036_1_16,
            parts: [{
                offset: 36,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_32',
            name: 'Druck(S6) defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_036_1_32,
            parts: [{
                offset: 36,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_64',
            name: 'Volumenstrom(S7) defekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_036_1_64,
            parts: [{
                offset: 36,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_128',
            name: 'Durchfluss',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_036_1_128,
            parts: [{
                offset: 36,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '037_1_1',
            name: 'Leckage',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_037_1_1,
            parts: [{
                offset: 37,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '040_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_040_2_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 41,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '042_2_0',
            name: 'Uhrzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_042_2_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '044_4_0',
            name: 'Datum',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7231_0100_044_4_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 46,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 47,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7311_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7311_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7311_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7311_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7311_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7311_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7311_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7311_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7311_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Sensor 9',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7311_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Temperatur Sensor 10',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7311_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Temperatur Sensor 11',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7311_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Temperatur Sensor 12',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7311_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Einstrahlung',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7311_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Impulseingang 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7311_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'Impulseingang 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7311_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Sensorbruch-Maske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7311_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Sensorkurzschluss-Maske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7311_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '040_2_0',
            name: 'Sensorbenutzungs-Maske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7311_0100_040_2_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '044_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7311_0100_044_1_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7311_0100_045_1_0,
            parts: [{
                offset: 45,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7311_0100_046_1_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_0',
            name: 'Drehzahl Relais 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7311_0100_047_1_0,
            parts: [{
                offset: 47,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_1_0',
            name: 'Drehzahl Relais 5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7311_0100_048_1_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '049_1_0',
            name: 'Drehzahl Relais 6',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7311_0100_049_1_0,
            parts: [{
                offset: 49,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '050_1_0',
            name: 'Drehzahl Relais 7',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7311_0100_050_1_0,
            parts: [{
                offset: 50,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '051_1_0',
            name: 'Drehzahl Relais 8',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7311_0100_051_1_0,
            parts: [{
                offset: 51,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '052_1_0',
            name: 'Drehzahl Relais 9',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7311_0100_052_1_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '058_2_0',
            name: 'Relaisbenutzungsmaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7311_0100_058_2_0,
            parts: [{
                offset: 58,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 59,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '060_2_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7311_0100_060_2_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 61,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '062_2_0',
            name: 'Warnungsmaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7311_0100_062_2_0,
            parts: [{
                offset: 62,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 63,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '064_2_0',
            name: 'Reglerversion',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7311_0100_064_2_0,
            parts: [{
                offset: 64,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 65,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '066_2_0',
            name: 'Systemzeit',
            type: types.Weektime_1_None,
            getRawValue: getRawValueFunctions._0010_7311_0100_066_2_0,
            parts: [{
                offset: 66,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 67,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_7312_0100: [{
            fieldId: '000_2_0',
            name: 'Vorlauftemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7312_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Fernversteller',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._0010_7312_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Aussentemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7312_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Speichertemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7312_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Vorlaufsolltemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7312_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Relaismaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7312_0100_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_7315_0100: [{
            fieldId: '000_4_0',
            name: 'Betriebssekunden R1',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7315_0100_000_4_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 2,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 3,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '004_4_0',
            name: 'Betriebssekunden R2',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7315_0100_004_4_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '008_4_0',
            name: 'Betriebssekunden R3',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7315_0100_008_4_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Betriebssekunden R4',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7315_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '016_4_0',
            name: 'Betriebssekunden R5',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7315_0100_016_4_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Betriebssekunden R6',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7315_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'Betriebssekunden R7',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7315_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Betriebssekunden R8',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7315_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'Betriebssekunden R9',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7315_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_4_0',
            name: 'Volumen 1',
            type: types.Number_0_1_Liters,
            getRawValue: getRawValueFunctions._0010_7315_0100_036_4_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 0.1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 25.6,
            }, {
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 6553.6,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 1677721.6,
            }, ],
        }, {
            fieldId: '040_4_0',
            name: 'Volumen 2',
            type: types.Number_0_1_Liters,
            getRawValue: getRawValueFunctions._0010_7315_0100_040_4_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: 0,
                factor: 0.1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: 0,
                factor: 25.6,
            }, {
                offset: 42,
                mask: 255,
                isSigned: 0,
                factor: 6553.6,
            }, {
                offset: 43,
                mask: 255,
                isSigned: 0,
                factor: 1677721.6,
            }, ],
        }, ],
        _0010_7316_0100: [{
            fieldId: '000_2_0',
            name: 'Vorlauftemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7316_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Rücklauftemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7316_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Volumenstrom',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7316_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Wärme',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7316_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, ],
        _0010_7321_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7321_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7321_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7321_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7321_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7321_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7321_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7321_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7321_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Sensor 9',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7321_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Temperatur Sensor 10',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7321_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Temperatur Sensor 11',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7321_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Temperatur Sensor 12',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7321_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Einstrahlung',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7321_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Impulseingang 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7321_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'Impulseingang 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7321_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Sensorbruch-Maske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7321_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Sensorkurzschluss-Maske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7321_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '040_2_0',
            name: 'Sensorbenutzungs-Maske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7321_0100_040_2_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '044_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7321_0100_044_1_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7321_0100_045_1_0,
            parts: [{
                offset: 45,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7321_0100_046_1_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_0',
            name: 'Drehzahl Relais 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7321_0100_047_1_0,
            parts: [{
                offset: 47,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_1_0',
            name: 'Drehzahl Relais 5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7321_0100_048_1_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '049_1_0',
            name: 'Drehzahl Relais 6',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7321_0100_049_1_0,
            parts: [{
                offset: 49,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '050_1_0',
            name: 'Drehzahl Relais 7',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7321_0100_050_1_0,
            parts: [{
                offset: 50,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '051_1_0',
            name: 'Drehzahl Relais 8',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7321_0100_051_1_0,
            parts: [{
                offset: 51,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '052_1_0',
            name: 'Drehzahl Relais 9',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7321_0100_052_1_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '058_2_0',
            name: 'Relaisbenutzungsmaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7321_0100_058_2_0,
            parts: [{
                offset: 58,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 59,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '060_2_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7321_0100_060_2_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 61,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '062_2_0',
            name: 'Warnungsmaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7321_0100_062_2_0,
            parts: [{
                offset: 62,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 63,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '064_2_0',
            name: 'Reglerversion',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7321_0100_064_2_0,
            parts: [{
                offset: 64,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 65,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '066_2_0',
            name: 'Systemzeit',
            type: types.Weektime_1_None,
            getRawValue: getRawValueFunctions._0010_7321_0100_066_2_0,
            parts: [{
                offset: 66,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 67,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_7326_0100: [{
            fieldId: '000_2_0',
            name: 'Vorlauftemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7326_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Rücklauftemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7326_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Volumenstrom',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7326_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Wärme',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7326_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, ],
        _0010_7331_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Sensor 9',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Temperatur Sensor 10',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Temperatur Sensor 11',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Temperatur Sensor 12',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Temperatur Sensor 13',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'Temperatur Sensor 14',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Temperatur Sensor 15',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '030_2_0',
            name: 'Temperatur Sensor 16',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_030_2_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '032_2_0',
            name: 'Temperatur Sensor 17',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_032_2_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '034_2_0',
            name: 'Temperatur Sensor 18',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_034_2_0,
            parts: [{
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Temperatur Sensor 19',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Temperatur Sensor 20',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '040_2_0',
            name: 'Temperatur Sensor 21',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_040_2_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '042_2_0',
            name: 'Temperatur Sensor 22',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7331_0100_042_2_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '044_1_0',
            name: 'Drehzahl R1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_044_1_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_0',
            name: 'Drehzahl R2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_045_1_0,
            parts: [{
                offset: 45,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_0',
            name: 'Drehzahl R3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_046_1_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_0',
            name: 'Drehzahl R4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_047_1_0,
            parts: [{
                offset: 47,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_1_0',
            name: 'Drehzahl R5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_048_1_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '049_1_0',
            name: 'Drehzahl R6',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_049_1_0,
            parts: [{
                offset: 49,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '050_1_0',
            name: 'Drehzahl R7',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_050_1_0,
            parts: [{
                offset: 50,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '051_1_0',
            name: 'Drehzahl R8',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_051_1_0,
            parts: [{
                offset: 51,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '052_1_0',
            name: 'Drehzahl R9',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_052_1_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '053_1_0',
            name: 'Drehzahl R10',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_053_1_0,
            parts: [{
                offset: 53,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '054_1_0',
            name: 'Drehzahl R11',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_054_1_0,
            parts: [{
                offset: 54,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '055_1_0',
            name: 'Drehzahl R12',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_055_1_0,
            parts: [{
                offset: 55,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '056_1_0',
            name: 'Drehzahl R13',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_056_1_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '057_1_0',
            name: 'Drehzahl R14',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_057_1_0,
            parts: [{
                offset: 57,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '058_1_0',
            name: 'Drehzahl R15',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_058_1_0,
            parts: [{
                offset: 58,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '059_1_0',
            name: 'Drehzahl R16',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_059_1_0,
            parts: [{
                offset: 59,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '060_1_0',
            name: 'Drehzahl R17',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_060_1_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '061_1_0',
            name: 'Drehzahl R18',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7331_0100_061_1_0,
            parts: [{
                offset: 61,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '064_4_0',
            name: 'Sensorbenutzungs-Maske #1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7331_0100_064_4_0,
            parts: [{
                offset: 64,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 65,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 66,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 67,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '068_4_0',
            name: 'Sensorbenutzungs-Maske #2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7331_0100_068_4_0,
            parts: [{
                offset: 68,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 69,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 70,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 71,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '072_2_0',
            name: 'Fehler-Maske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7331_0100_072_2_0,
            parts: [{
                offset: 72,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 73,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '074_2_0',
            name: 'Warnungen-Maske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7331_0100_074_2_0,
            parts: [{
                offset: 74,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 75,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '076_2_0',
            name: 'Version',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7331_0100_076_2_0,
            parts: [{
                offset: 76,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 77,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '078_2_0',
            name: 'Systemzeit',
            type: types.Weektime_1_None,
            getRawValue: getRawValueFunctions._0010_7331_0100_078_2_0,
            parts: [{
                offset: 78,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 79,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '080_1_0',
            name: 'Variante',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7331_0100_080_1_0,
            parts: [{
                offset: 80,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_7332_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 17',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7332_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 18',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7332_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 19',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7332_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 20',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7332_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 21',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7332_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 22',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7332_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Drehzahl R14',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7332_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Drehzahl R15',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7332_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Drehzahl R16',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7332_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Drehzahl R17',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7332_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Drehzahl R18',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7332_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_7333_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 23',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7333_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 24',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7333_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 25',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7333_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 26',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7333_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 27',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7333_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 28',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7333_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Drehzahl R19',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7333_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Drehzahl R20',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7333_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Drehzahl R21',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7333_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Drehzahl R22',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7333_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Drehzahl R23',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7333_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_7334_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 29',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7334_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 30',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7334_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 31',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7334_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 32',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7334_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 33',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7334_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 34',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7334_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Drehzahl R24',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7334_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Drehzahl R25',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7334_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Drehzahl R26',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7334_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Drehzahl R27',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7334_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Drehzahl R28',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7334_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_7335_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 35',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7335_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 36',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7335_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 37',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7335_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 38',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7335_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 39',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7335_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 40',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7335_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Drehzahl R29',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7335_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Drehzahl R30',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7335_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Drehzahl R31',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7335_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Drehzahl R32',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7335_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Drehzahl R33',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7335_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_7341_0100: [{
            fieldId: '000_2_0',
            name: 'S1-SF-K',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'S2-SF-1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'S3-SF-2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'S4-SF-3/WT/F-RLA1/RLU1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'S5-FN-HK/F-RLA2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'S6-FN-WW/BF/SF-WT',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'S7-FN-K2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'S8-FZ',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'S9-AF',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'S10-VL-F1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'S11-FV-1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'S12-VL-F2/WA-1/SF-4/F-RLU1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'S13-FV-2/WA-2/SF-WT',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'S14-KF-1/KF-NH',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'S15-KF-2/SF-K2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '030_2_0',
            name: 'S16-BF/BF-1/F-RLU2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_030_2_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'SensorVolumenstrom_Regler_GAS1_TotalWert_L',
            type: types.Number_1_Liters,
            getRawValue: getRawValueFunctions._0010_7341_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_4_0',
            name: 'SensorVolumenstrom_Regler_GAS2_TotalWert_L',
            type: types.Number_1_Liters,
            getRawValue: getRawValueFunctions._0010_7341_0100_036_4_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '040_4_0',
            name: 'SensorVolumenstrom_Regler_GDS1_TotalWert_L',
            type: types.Number_1_Liters,
            getRawValue: getRawValueFunctions._0010_7341_0100_040_4_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '044_4_0',
            name: 'SensorVolumenstrom_Regler_GDS2_TotalWert_L',
            type: types.Number_1_Liters,
            getRawValue: getRawValueFunctions._0010_7341_0100_044_4_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 46,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 47,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '048_2_0',
            name: 'Sensor_Regler_Druck_GAS1_Wert_Bar',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0010_7341_0100_048_2_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 49,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '050_2_0',
            name: 'Sensor_Regler_Druck_GAS2_Wert_Bar',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0010_7341_0100_050_2_0,
            parts: [{
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '052_2_0',
            name: 'Sensor_Regler_Druck_GDS1_Wert_Bar',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0010_7341_0100_052_2_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 53,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '054_2_0',
            name: 'Sensor_Regler_Druck_GDS2_Wert_Bar',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0010_7341_0100_054_2_0,
            parts: [{
                offset: 54,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 55,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '056_1_0',
            name: 'R1-SP-1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7341_0100_056_1_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '057_1_0',
            name: 'R2-SP-2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7341_0100_057_1_0,
            parts: [{
                offset: 57,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '058_1_0',
            name: 'R3-BLP/1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7341_0100_058_1_0,
            parts: [{
                offset: 58,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '059_1_0',
            name: 'R4-SV1/V-RLU',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7341_0100_059_1_0,
            parts: [{
                offset: 59,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '060_1_0',
            name: 'R5-HKP1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7341_0100_060_1_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '061_1_0',
            name: 'R6-MV-1 auf',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7341_0100_061_1_0,
            parts: [{
                offset: 61,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '062_1_0',
            name: 'R7-MV-1 zu',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7341_0100_062_1_0,
            parts: [{
                offset: 62,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '063_1_0',
            name: 'R8-KLP-1/HKP-2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7341_0100_063_1_0,
            parts: [{
                offset: 63,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '064_1_0',
            name: 'R9-KLP-2/SP-3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7341_0100_064_1_0,
            parts: [{
                offset: 64,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '065_1_0',
            name: 'R10-SV-2/HKP-2/V-RL',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7341_0100_065_1_0,
            parts: [{
                offset: 65,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '066_1_0',
            name: 'R11-MV-2 auf/BLP-2/SV-3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7341_0100_066_1_0,
            parts: [{
                offset: 66,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '067_1_0',
            name: 'R12-MV-2 zu/SV-3/V-RLU',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7341_0100_067_1_0,
            parts: [{
                offset: 67,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '068_1_0',
            name: 'R13-ZP',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7341_0100_068_1_0,
            parts: [{
                offset: 68,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '069_1_0',
            name: 'R14-RP',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7341_0100_069_1_0,
            parts: [{
                offset: 69,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '072_2_0',
            name: 'Hk1_T_VorlSoll',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_072_2_0,
            parts: [{
                offset: 72,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 73,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '074_2_0',
            name: 'Hk2_T_VorlSoll',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_074_2_0,
            parts: [{
                offset: 74,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 75,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '076_2_0',
            name: 'Hk3_T_VorlSoll',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_076_2_0,
            parts: [{
                offset: 76,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 77,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '078_2_0',
            name: 'Hk4_T_VorlSoll',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_078_2_0,
            parts: [{
                offset: 78,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 79,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '080_2_0',
            name: 'Hk5_T_VorlSoll',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_080_2_0,
            parts: [{
                offset: 80,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 81,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '082_2_0',
            name: 'SW_VL_Soll',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7341_0100_082_2_0,
            parts: [{
                offset: 82,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 83,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '084_4_0',
            name: 'Wmz1_Wert_Wh',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7341_0100_084_4_0,
            parts: [{
                offset: 84,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 85,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 86,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 87,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '088_4_0',
            name: 'Wmz2_Wert_Wh',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7341_0100_088_4_0,
            parts: [{
                offset: 88,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 89,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 90,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 91,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '092_4_0',
            name: 'Systemdatum',
            type: types.DateTime_1_None,
            getRawValue: getRawValueFunctions._0010_7341_0100_092_4_0,
            parts: [{
                offset: 92,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 93,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 94,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 95,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '096_4_0',
            name: 'SensorBenutzt bit 0__31',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7341_0100_096_4_0,
            parts: [{
                offset: 96,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 97,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 98,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 99,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '100_4_0',
            name: 'SensorBenutzt bit 31__63',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7341_0100_100_4_0,
            parts: [{
                offset: 100,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 101,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 102,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 103,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '104_4_0',
            name: 'Error SensorBruch bit 0__31',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7341_0100_104_4_0,
            parts: [{
                offset: 104,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 105,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 106,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 107,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '108_4_0',
            name: 'Error SensorBruch bit 31__63',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7341_0100_108_4_0,
            parts: [{
                offset: 108,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 109,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 110,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 111,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '112_4_0',
            name: 'Error SensorKurzschluss bit 0__31',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7341_0100_112_4_0,
            parts: [{
                offset: 112,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 113,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 114,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 115,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '116_4_0',
            name: 'Error SensorKurzschluss bit 31__63',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7341_0100_116_4_0,
            parts: [{
                offset: 116,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 117,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 118,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 119,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '120_2_0',
            name: 'Errormask',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7341_0100_120_2_0,
            parts: [{
                offset: 120,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 121,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '122_2_0',
            name: 'Warningmask',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7341_0100_122_2_0,
            parts: [{
                offset: 122,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 123,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '124_2_0',
            name: 'Systemflow_Parameteraenderungen',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7341_0100_124_2_0,
            parts: [{
                offset: 124,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 125,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_7342_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7342_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7342_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7342_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7342_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7342_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7342_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Drehzahl R1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7342_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Drehzahl R2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7342_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Drehzahl R3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7342_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Drehzahl R4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7342_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Drehzahl R5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7342_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_7343_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7343_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7343_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7343_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7343_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7343_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7343_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Drehzahl R1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7343_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Drehzahl R2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7343_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Drehzahl R3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7343_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Drehzahl R4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7343_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Drehzahl R5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7343_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_7344_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7344_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7344_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7344_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7344_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7344_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7344_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Drehzahl R1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7344_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Drehzahl R2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7344_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Drehzahl R3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7344_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Drehzahl R4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7344_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Drehzahl R5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7344_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_7345_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7345_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7345_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7345_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7345_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7345_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7345_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Drehzahl R1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7345_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Drehzahl R2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7345_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Drehzahl R3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7345_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Drehzahl R4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7345_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Drehzahl R5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7345_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_7346_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7346_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7346_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7346_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7346_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7346_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7346_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Drehzahl R1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7346_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Drehzahl R2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7346_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Drehzahl R3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7346_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Drehzahl R4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7346_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Drehzahl R5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7346_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_7411_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7411_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7411_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7411_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7411_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7411_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7411_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7411_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7411_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Volumenstrom',
            type: types.Number_0_01_CubicMetersPerHour,
            getRawValue: getRawValueFunctions._0010_7411_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Einstrahlung',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7411_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '021_1_0',
            name: 'Drehzahl 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7411_0100_021_1_0,
            parts: [{
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_0',
            name: 'Drehzahl 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7411_0100_022_1_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '023_1_0',
            name: 'Drehzahl 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7411_0100_023_1_0,
            parts: [{
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_8',
            name: 'Relais 4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7411_0100_020_1_8,
            parts: [{
                offset: 20,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_16',
            name: 'Relais 5',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7411_0100_020_1_16,
            parts: [{
                offset: 20,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_32',
            name: 'Relais 6',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7411_0100_020_1_32,
            parts: [{
                offset: 20,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7411_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'Schema',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7411_0100_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_1',
            name: 'Option: Kollektorkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7411_0100_027_1_1,
            parts: [{
                offset: 27,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_2',
            name: 'Option: Kollektorminimalbegrenzung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7411_0100_027_1_2,
            parts: [{
                offset: 27,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_4',
            name: 'Option: Frostschutzfunktion',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7411_0100_027_1_4,
            parts: [{
                offset: 27,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_8',
            name: 'Option: Röhrenkollektorfunktion',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7411_0100_027_1_8,
            parts: [{
                offset: 27,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_16',
            name: 'Option: Rückkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7411_0100_027_1_16,
            parts: [{
                offset: 27,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_32',
            name: 'Option: Wärmemengenzählung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7411_0100_027_1_32,
            parts: [{
                offset: 27,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Betriebsstunden 1',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_7411_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '030_2_0',
            name: 'Betriebsstunden 2',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_7411_0100_030_2_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '032_2_0',
            name: 'Betriebsstunden 3',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_7411_0100_032_2_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '034_2_0',
            name: 'Betriebsstunden 4',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_7411_0100_034_2_0,
            parts: [{
                offset: 34,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 35,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Betriebsstunden 5',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_7411_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Betriebsstunden 6',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_7411_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '040_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7411_0100_040_2_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 42,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 43,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 44,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 45,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, ],
        _0010_7421_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7421_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7421_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7421_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7421_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7421_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur RPS',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7421_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Druck RPS',
            type: types.Number_0_1_Bars,
            getRawValue: getRawValueFunctions._0010_7421_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur VFS',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7421_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Durchfluss VFS',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7421_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '024_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7421_0100_024_1_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '025_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7421_0100_025_1_0,
            parts: [{
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7421_0100_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_0',
            name: 'Drehzahl Relais 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7421_0100_027_1_0,
            parts: [{
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_0',
            name: 'PWM 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7421_0100_022_1_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '023_1_0',
            name: 'PWM 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7421_0100_023_1_0,
            parts: [{
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_2_0_1',
            name: 'Durchfluss VFS',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7421_0100_016_2_0_1,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Durchfluss V40',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7421_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '048_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7421_0100_048_4_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '054_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_054_2_0,
            parts: [{
                offset: 54,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 55,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '056_4_0',
            name: 'Datum',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_056_4_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 58,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 59,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '052_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_052_2_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 53,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Betriebssekunden Relais 1',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7421_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'Betriebssekunden Relais 2',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7421_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_4_0',
            name: 'Betriebssekunden Relais 3',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7421_0100_036_4_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '040_4_0',
            name: 'Betriebssekunden Relais 4',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7421_0100_040_4_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 42,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 43,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '046_2_0',
            name: 'Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_046_2_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 47,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '046_1_1',
            name: 'Blockierschutz 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_046_1_1,
            parts: [{
                offset: 46,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_2',
            name: 'Blockierschutz 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_046_1_2,
            parts: [{
                offset: 46,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_4',
            name: 'Blockierschutz 3',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_046_1_4,
            parts: [{
                offset: 46,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_8',
            name: 'Blockierschutz 4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_046_1_8,
            parts: [{
                offset: 46,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_16',
            name: 'Initialisierung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_046_1_16,
            parts: [{
                offset: 46,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_32',
            name: 'Befüllung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_046_1_32,
            parts: [{
                offset: 46,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_64',
            name: 'Stabilisierung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_046_1_64,
            parts: [{
                offset: 46,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_128',
            name: 'Pumpenverzögerung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_046_1_128,
            parts: [{
                offset: 46,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_1',
            name: 'Überwärmeabfuhr',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_047_1_1,
            parts: [{
                offset: 47,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_2',
            name: 'Nachlauf',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_047_1_2,
            parts: [{
                offset: 47,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_4',
            name: 'Thermische Desinfektion',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_047_1_4,
            parts: [{
                offset: 47,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_8',
            name: 'Systemkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_047_1_8,
            parts: [{
                offset: 47,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_16',
            name: 'Speicherkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_047_1_16,
            parts: [{
                offset: 47,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_32',
            name: 'Spreizung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_047_1_32,
            parts: [{
                offset: 47,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_64',
            name: 'Frostschutz',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_047_1_64,
            parts: [{
                offset: 47,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_128',
            name: 'Kollektorkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_047_1_128,
            parts: [{
                offset: 47,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_0',
            name: 'Einheit',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_020_1_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_2_0',
            name: 'Fehler',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_044_2_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '044_1_1',
            name: 'Fehler S1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_044_1_1,
            parts: [{
                offset: 44,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_2',
            name: 'Fehler S2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_044_1_2,
            parts: [{
                offset: 44,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_4',
            name: 'Fehler S3',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_044_1_4,
            parts: [{
                offset: 44,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_8',
            name: 'Fehler S4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_044_1_8,
            parts: [{
                offset: 44,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_16',
            name: 'Fehler S5',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_044_1_16,
            parts: [{
                offset: 44,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_32',
            name: 'Fehler S6',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_044_1_32,
            parts: [{
                offset: 44,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_64',
            name: 'Fehler S7',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_044_1_64,
            parts: [{
                offset: 44,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_128',
            name: 'Fehler S8',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_044_1_128,
            parts: [{
                offset: 44,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_1',
            name: 'Fehler S9',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_045_1_1,
            parts: [{
                offset: 45,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_2',
            name: 'Fehler V40',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_045_1_2,
            parts: [{
                offset: 45,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_4',
            name: 'Leckage',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_045_1_4,
            parts: [{
                offset: 45,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_8',
            name: 'Überdruck',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_045_1_8,
            parts: [{
                offset: 45,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_16',
            name: 'Durchflussfehler',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7421_0100_045_1_16,
            parts: [{
                offset: 45,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, ],
        _0010_7428_0100: [{
            fieldId: '000_2_0',
            name: 'S1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7428_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'S2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7428_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'S3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7428_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'S4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7428_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'S5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7428_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_1_0',
            name: 'DR 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7428_0100_024_1_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '025_1_0',
            name: 'DR 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7428_0100_025_1_0,
            parts: [{
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'DR 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7428_0100_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_0',
            name: 'DR 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7428_0100_027_1_0,
            parts: [{
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Flow V40',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7428_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '048_4_0',
            name: 'Wärme',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7428_0100_048_4_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '054_2_0',
            name: 'Zeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_054_2_0,
            parts: [{
                offset: 54,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 55,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '056_4_0',
            name: 'Datum',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_056_4_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 58,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 59,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '052_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_052_2_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 53,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'BSR 1',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7428_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'BSR 2',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7428_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_4_0',
            name: 'BSR 3',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7428_0100_036_4_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '040_4_0',
            name: 'BSR 4',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7428_0100_040_4_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 42,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 43,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '046_2_0',
            name: 'Regelstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_046_2_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 47,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '046_1_1',
            name: 'BLSC 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_046_1_1,
            parts: [{
                offset: 46,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_2',
            name: 'BLSC 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_046_1_2,
            parts: [{
                offset: 46,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_4',
            name: 'BLSC 3',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_046_1_4,
            parts: [{
                offset: 46,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_8',
            name: 'BLSC 4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_046_1_8,
            parts: [{
                offset: 46,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_32',
            name: 'DeltaT-FKT',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_046_1_32,
            parts: [{
                offset: 46,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_64',
            name: 'Thermostat',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_046_1_64,
            parts: [{
                offset: 46,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '046_1_128',
            name: 'Pumpenverzögerung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_046_1_128,
            parts: [{
                offset: 46,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_1',
            name: 'Überwärmeabfuhr',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_047_1_1,
            parts: [{
                offset: 47,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_4',
            name: 'Thermische Desinfektion',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_047_1_4,
            parts: [{
                offset: 47,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_8',
            name: 'Systemkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_047_1_8,
            parts: [{
                offset: 47,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_16',
            name: 'Speicherkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_047_1_16,
            parts: [{
                offset: 47,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_32',
            name: 'Spreizung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_047_1_32,
            parts: [{
                offset: 47,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_64',
            name: 'Frostschutz',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_047_1_64,
            parts: [{
                offset: 47,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_128',
            name: 'Kollektorkühlung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_047_1_128,
            parts: [{
                offset: 47,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_0',
            name: 'Einheit',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_020_1_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_2_0',
            name: 'Fehler',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_044_2_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '044_1_1',
            name: 'Fehler S1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_044_1_1,
            parts: [{
                offset: 44,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_2',
            name: 'Fehler S2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_044_1_2,
            parts: [{
                offset: 44,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_4',
            name: 'Fehler S3',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_044_1_4,
            parts: [{
                offset: 44,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_8',
            name: 'Fehler S4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_044_1_8,
            parts: [{
                offset: 44,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_16',
            name: 'Fehler S5',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_044_1_16,
            parts: [{
                offset: 44,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_2',
            name: 'Fehler V40',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7428_0100_045_1_2,
            parts: [{
                offset: 45,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, ],
        _0010_7511_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Kollektoren',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7511_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur S,p',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7511_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur S,s',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7511_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur WP-VL',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7511_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur WP-RL',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7511_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Verdampf',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7511_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Erde',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7511_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Volumenstrom Ko',
            type: types.Number_0_1_LitersPerMinute,
            getRawValue: getRawValueFunctions._0010_7511_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_1_0',
            name: 'Leistung P,Ko',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7511_0100_018_1_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '019_1_0',
            name: 'Leistung P,S',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7511_0100_019_1_0,
            parts: [{
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_4',
            name: 'Relais P,H',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7511_0100_016_1_4,
            parts: [{
                offset: 16,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_8',
            name: 'Relais WP',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7511_0100_016_1_8,
            parts: [{
                offset: 16,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_16',
            name: 'Ventil WP',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7511_0100_016_1_16,
            parts: [{
                offset: 16,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_32',
            name: 'Ventil SW',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7511_0100_016_1_32,
            parts: [{
                offset: 16,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_64',
            name: 'Ventil Ko',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7511_0100_016_1_64,
            parts: [{
                offset: 16,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_128',
            name: 'Ventil So',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7511_0100_016_1_128,
            parts: [{
                offset: 16,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '017_1_1',
            name: 'Ventil SP',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7511_0100_017_1_1,
            parts: [{
                offset: 17,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7511_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '025_1_0',
            name: 'P,Ko Nennleistung',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7511_0100_025_1_0,
            parts: [{
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'T_Wabs',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7511_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Wärmemenge S,p',
            type: types.Number_0_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_7511_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: false,
                factor: 25.6,
            }, {
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 6553.6,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 1677721.6,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'Wärmemenge S,s',
            type: types.Number_0_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_7511_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: false,
                factor: 25.6,
            }, {
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 6553.6,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 1677721.6,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Diff_ TUmg/24h',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._0010_7511_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Diff_ TSs/8h',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._0010_7511_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '040_2_0',
            name: 'Diff_ TSs/1h',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._0010_7511_0100_040_2_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '042_2_0',
            name: 'Betriebssekunden WP',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7511_0100_042_2_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '044_4_0',
            name: 'Zeitraum WP / 24h',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7511_0100_044_4_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 46,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 47,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '048_4_0',
            name: 'Laufzeit WP / 24h',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7511_0100_048_4_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '056_2_0',
            name: 'Temperatur T,H',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7511_0100_056_2_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '058_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7511_0100_058_2_0,
            parts: [{
                offset: 58,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 59,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, ],
        _0010_7512_0100: [{
            fieldId: '000_4_0',
            name: 't-Sp',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7512_0100_000_4_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '004_4_0',
            name: 't-Ss',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7512_0100_004_4_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '008_4_0',
            name: 'Laufzeit WP',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7512_0100_008_4_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Anzahl WP-Starts',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7512_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '016_4_0',
            name: 't-WP-Ss',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7512_0100_016_4_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 't-Ps',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7512_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Temperatur T-x',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7512_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'Temperatur T-xx',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7512_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'C1',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_7512_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '030_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_7512_0100_030_2_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, ],
        _0010_7521_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7521_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7521_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7521_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7521_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7521_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7521_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7521_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7521_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Sensor 9',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7521_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Durchfluss Sensor 10',
            type: types.Number_0_1_LitersPerMinute,
            getRawValue: getRawValueFunctions._0010_7521_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7521_0100_020_1_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '021_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7521_0100_021_1_0,
            parts: [{
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7521_0100_022_1_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Drehzahl Relais 4',
            type: types.Number_0_1_Percent,
            getRawValue: getRawValueFunctions._0010_7521_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 0.1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '023_1_0',
            name: 'Drehzahl Relais 5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7521_0100_023_1_0,
            parts: [{
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '026_1_1',
            name: 'Fehler',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_026_1_1,
            parts: [{
                offset: 26,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_0',
            name: 'Desinf_ Phase',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_027_1_0,
            parts: [{
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Betriebssekunden Relais 1',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7521_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'Betriebssekunden Relais 2',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7521_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_4_0',
            name: 'Betriebssekunden Relais 3',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7521_0100_036_4_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '040_4_0',
            name: 'Betriebssekunden Relais 4',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7521_0100_040_4_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 42,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 43,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '044_4_0',
            name: 'Betriebssekunden Relais 5',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7521_0100_044_4_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 46,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 47,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '048_2_0',
            name: 'Funktionen',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_048_2_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '048_1_1',
            name: 'WW-Bereitung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_048_1_1,
            parts: [{
                offset: 48,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_1_2',
            name: 'Blockierschutz R4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_048_1_2,
            parts: [{
                offset: 48,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_1_4',
            name: 'Blockierschutz R2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_048_1_4,
            parts: [{
                offset: 48,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_1_8',
            name: 'Kaltwasser',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_048_1_8,
            parts: [{
                offset: 48,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_1_16',
            name: 'Zirkulationserfassung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_048_1_16,
            parts: [{
                offset: 48,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_1_32',
            name: 'Warmstart',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_048_1_32,
            parts: [{
                offset: 48,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_1_64',
            name: 'Dauerzirkulation',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_048_1_64,
            parts: [{
                offset: 48,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_1_128',
            name: 'Thermische Zirkulation',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_048_1_128,
            parts: [{
                offset: 48,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '049_1_1',
            name: 'Anforderungszirkulation',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_049_1_1,
            parts: [{
                offset: 49,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '049_1_2',
            name: 'Nachheizung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_049_1_2,
            parts: [{
                offset: 49,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '049_1_4',
            name: 'Desinfektionsnachheizung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_049_1_4,
            parts: [{
                offset: 49,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '049_1_8',
            name: 'Desinfektionszirkulation',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_049_1_8,
            parts: [{
                offset: 49,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '049_1_16',
            name: 'Desinfektionsspülung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_049_1_16,
            parts: [{
                offset: 49,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '049_1_32',
            name: 'Fehlerrelais',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_049_1_32,
            parts: [{
                offset: 49,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '049_1_64',
            name: 'Rücklaufeinschichtung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_049_1_64,
            parts: [{
                offset: 49,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '049_1_128',
            name: 'Funktionsblock 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_049_1_128,
            parts: [{
                offset: 49,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '050_1_1',
            name: 'Funktionsblock 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_050_1_1,
            parts: [{
                offset: 50,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '051_1_1',
            name: 'Kaltstart',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_051_1_1,
            parts: [{
                offset: 51,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '051_1_2',
            name: 'Wärmepumpe',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_051_1_2,
            parts: [{
                offset: 51,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '051_1_4',
            name: 'Sollwertanpassung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_051_1_4,
            parts: [{
                offset: 51,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '052_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7521_0100_052_4_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 54,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 55,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '056_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_056_2_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 57,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '058_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_058_2_0,
            parts: [{
                offset: 58,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 59,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '060_4_0',
            name: 'Datum',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7521_0100_060_4_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 61,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 62,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 63,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7522_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7522_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7522_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7522_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7522_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7522_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7522_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7522_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7522_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Sensor 9',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7522_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Temperatur Sensor Gds1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7522_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Temperatur Sensor Gds2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7522_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Einstrahlung Sensor',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7522_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'Volumenstrom Sensor V40',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7522_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Volumenstrom Sensor Gds1',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7522_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'Volumenstrom Sensor Gds2',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7522_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Druck Sensor Gds1',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0010_7522_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 37,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Druck Sensor Gds2',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0010_7522_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '040_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7522_0100_040_1_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '041_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7522_0100_041_1_0,
            parts: [{
                offset: 41,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '042_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7522_0100_042_1_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '043_1_0',
            name: 'Drehzahl Relais 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7522_0100_043_1_0,
            parts: [{
                offset: 43,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_0',
            name: 'Drehzahl Relais 5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7522_0100_044_1_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_4_0',
            name: 'Systemdatum',
            type: types.DateTime_1_None,
            getRawValue: getRawValueFunctions._0010_7522_0100_048_4_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '052_4_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7522_0100_052_4_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 54,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 55,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7523_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Modul 1 Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Modul 1 Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Modul 1 Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Modul 1 Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Modul 1 Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Modul 1 Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Modul 2 Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Modul 2 Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Modul 2 Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Temperatur Modul 2 Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Temperatur Modul 2 Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Temperatur Modul 2 Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Temperatur Modul 3 Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'Temperatur Modul 3 Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Temperatur Modul 3 Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '030_2_0',
            name: 'Temperatur Modul 3 Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_030_2_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '032_2_0',
            name: 'Temperatur Modul 3 Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_032_2_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '034_2_0',
            name: 'Temperatur Modul 3 Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_034_2_0,
            parts: [{
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Temperatur Modul 4 Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Temperatur Modul 4 Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '040_2_0',
            name: 'Temperatur Modul 4 Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_040_2_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '042_2_0',
            name: 'Temperatur Modul 4 Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_042_2_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '044_2_0',
            name: 'Temperatur Modul 4 Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_044_2_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '046_2_0',
            name: 'Temperatur Modul 4 Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_046_2_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 47,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '048_2_0',
            name: 'Temperatur Modul 5 Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_048_2_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '050_2_0',
            name: 'Temperatur Modul 5 Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_050_2_0,
            parts: [{
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '052_2_0',
            name: 'Temperatur Modul 5 Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_052_2_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '054_2_0',
            name: 'Temperatur Modul 5 Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_054_2_0,
            parts: [{
                offset: 54,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 55,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '056_2_0',
            name: 'Temperatur Modul 5 Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_056_2_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '058_2_0',
            name: 'Temperatur Modul 5 Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7523_0100_058_2_0,
            parts: [{
                offset: 58,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 59,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, ],
        _0010_7530_0100: [{
            fieldId: '000_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7530_0100_000_4_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '008_4_0',
            name: 'Wärmemenge heute',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7530_0100_008_4_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Wärmemenge Woche',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7530_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7611_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7611_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7611_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7611_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7611_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7611_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7611_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7611_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7611_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Sensor 9',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7611_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7611_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '020_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7611_0100_020_1_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '021_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7611_0100_021_1_0,
            parts: [{
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_4',
            name: 'Status Relais 3',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7611_0100_022_1_4,
            parts: [{
                offset: 22,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_8',
            name: 'Status Relais 4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7611_0100_022_1_8,
            parts: [{
                offset: 22,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '023_1_0',
            name: 'Sensordefekt-Maske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7611_0100_023_1_0,
            parts: [{
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_1_0',
            name: 'Warmwassersolltemperatur',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7611_0100_024_1_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '025_1_0',
            name: 'Optionen',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7611_0100_025_1_0,
            parts: [{
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7611_0100_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7611_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '034_1_0',
            name: 'Version',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7611_0100_034_1_0,
            parts: [{
                offset: 34,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 0.01,
            }, ],
        }, ],
        _0010_7621_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7621_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7621_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7621_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7621_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7621_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7621_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7621_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Durchfluss Sensor 8',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7621_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Einstrahlung Sensor 9',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7621_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7621_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '020_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7621_0100_020_1_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '021_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7621_0100_021_1_0,
            parts: [{
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7621_0100_022_1_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '023_1_0',
            name: 'Drehzahl Relais 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7621_0100_023_1_0,
            parts: [{
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_1_0',
            name: 'Drehzahl Relais 5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7621_0100_024_1_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '025_2_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7621_0100_025_2_0,
            parts: [{
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Meldungen',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7621_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '030_1_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_7621_0100_030_1_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 0.01,
            }, ],
        }, ],
        _0010_7622_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Vorlauf',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7622_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Rücklauf',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7622_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Durchfluss Sensor 8',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7622_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7622_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, ],
        _0010_7651_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7651_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7651_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7651_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7651_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7651_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7651_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7651_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Volumenstrom Sensor 8',
            type: types.Number_0_1_LitersPerMinute,
            getRawValue: getRawValueFunctions._0010_7651_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Digitaler Eingang 9',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7651_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '017_1_0',
            name: 'Status Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7651_0100_017_1_0,
            parts: [{
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '018_1_0',
            name: 'Status Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7651_0100_018_1_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '019_1_0',
            name: 'Status Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7651_0100_019_1_0,
            parts: [{
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_1_0',
            name: 'Status Relais 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7651_0100_020_1_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '021_1_0',
            name: 'Status Relais 5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7651_0100_021_1_0,
            parts: [{
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_1',
            name: 'T-Sensor Fehler',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7651_0100_022_1_1,
            parts: [{
                offset: 22,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_2',
            name: 'V-Sensor Fehler',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7651_0100_022_1_2,
            parts: [{
                offset: 22,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_4',
            name: 'EEPROM Fehler',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7651_0100_022_1_4,
            parts: [{
                offset: 22,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_8',
            name: 'S1 Fehler',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7651_0100_022_1_8,
            parts: [{
                offset: 22,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '022_1_16',
            name: 'S2 Fehler',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7651_0100_022_1_16,
            parts: [{
                offset: 22,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_7651_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7651_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, ],
        _0010_7711_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7711_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7711_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7711_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7711_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7711_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7711_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7711_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7711_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Sensor 9',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7711_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Temperatur Sensor 10',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7711_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Einstrahlung',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7711_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Impulseingang 1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7711_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Impulseingang 2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7711_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7711_0100_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7711_0100_027_1_0,
            parts: [{
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7711_0100_028_1_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '029_1_0',
            name: 'Drehzahl Relais 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7711_0100_029_1_0,
            parts: [{
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '030_1_0',
            name: 'Drehzahl Relais 5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7711_0100_030_1_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '031_1_0',
            name: 'Drehzahl Relais 6',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7711_0100_031_1_0,
            parts: [{
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '032_1_0',
            name: 'Drehzahl Relais 7',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7711_0100_032_1_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '034_2_0',
            name: 'Systemzeit',
            type: types.Weektime_1_None,
            getRawValue: getRawValueFunctions._0010_7711_0100_034_2_0,
            parts: [{
                offset: 34,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 35,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7711_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Warnungsmaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7711_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '040_2_0',
            name: 'Reglerversion',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7711_0100_040_2_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '042_1_0',
            name: 'System',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7711_0100_042_1_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '043_1_0',
            name: 'Schema',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7711_0100_043_1_0,
            parts: [{
                offset: 43,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_2_0',
            name: 'HK1-VL-Soll',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7711_0100_044_2_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '046_1_0',
            name: 'HK1-Betriebsstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7711_0100_046_1_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_0',
            name: 'HK1-Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7711_0100_047_1_0,
            parts: [{
                offset: 47,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '048_2_0',
            name: 'HK2-VL-Soll',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7711_0100_048_2_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '050_1_0',
            name: 'HK2-Betriebsstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7711_0100_050_1_0,
            parts: [{
                offset: 50,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '051_1_0',
            name: 'HK2-Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7711_0100_051_1_0,
            parts: [{
                offset: 51,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '052_2_0',
            name: 'HK3-VL-Soll',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7711_0100_052_2_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '054_1_0',
            name: 'HK3-Betriebsstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7711_0100_054_1_0,
            parts: [{
                offset: 54,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '055_1_0',
            name: 'HK3-Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7711_0100_055_1_0,
            parts: [{
                offset: 55,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '056_4_0',
            name: 'Sensorbenutzungs-Maske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7711_0100_056_4_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 58,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 59,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '060_4_0',
            name: 'Relaisbenutzungsmaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7711_0100_060_4_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 61,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 62,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 63,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7712_0100: [{
            fieldId: '000_2_0',
            name: 'Vorlauftemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7712_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Rücklauftemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7712_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Volumenstrom',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7712_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Wärme',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7712_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, ],
        _0010_7721_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7721_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7721_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7721_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7721_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7721_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7721_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7721_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7721_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Sensor 9',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7721_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Temperatur Sensor 10',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7721_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Einstrahlung CS',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7721_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Impulse 1 V40',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7721_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Digital Input',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7721_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7721_0100_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7721_0100_027_1_0,
            parts: [{
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7721_0100_028_1_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '029_1_0',
            name: 'Drehzahl Relais 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7721_0100_029_1_0,
            parts: [{
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '030_1_0',
            name: 'Drehzahl Relais 5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7721_0100_030_1_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '031_1_0',
            name: 'Drehzahl Relais 6',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7721_0100_031_1_0,
            parts: [{
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '032_1_0',
            name: 'Drehzahl Relais 7',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7721_0100_032_1_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7721_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Meldungen',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7721_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '040_1_0',
            name: 'System',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7721_0100_040_1_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '042_2_0',
            name: 'Schema',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7721_0100_042_2_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 43,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '044_2_0',
            name: 'Vorlauf Soll HK1 Modul Sensor 18',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7721_0100_044_2_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '046_2_0',
            name: 'Status HK1 Modul',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7721_0100_046_2_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 47,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '048_2_0',
            name: 'Vorlauf Soll HK2 Modul Sensor 25',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7721_0100_048_2_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '050_2_0',
            name: 'Status HK2 Modul',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7721_0100_050_2_0,
            parts: [{
                offset: 50,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 51,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '052_2_0',
            name: 'Vorlauf Soll HK3 Modul Sensor 32',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7721_0100_052_2_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '054_2_0',
            name: 'Status HK3 Modul',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7721_0100_054_2_0,
            parts: [{
                offset: 54,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 55,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '056_2_0',
            name: 'Vorlauf Soll Heizkreis Sensor 11',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7721_0100_056_2_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '058_2_0',
            name: 'Status Heizkreis',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7721_0100_058_2_0,
            parts: [{
                offset: 58,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 59,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '062_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7721_0100_062_2_0,
            parts: [{
                offset: 62,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 63,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '064_2_0',
            name: 'Jahr',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7721_0100_064_2_0,
            parts: [{
                offset: 64,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 65,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '066_1_0',
            name: 'Monat',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7721_0100_066_1_0,
            parts: [{
                offset: 66,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '067_1_0',
            name: 'Tag',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7721_0100_067_1_0,
            parts: [{
                offset: 67,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '060_1_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_7721_0100_060_1_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, {
                offset: 61,
                mask: 255,
                isSigned: true,
                factor: 0.01,
            }, ],
        }, ],
        _0010_7722_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Vorlauf',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7722_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Rücklauf',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7722_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Durchfluss Sensor 8',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7722_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7722_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, ],
        _0010_7729_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_7729_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_7729_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_7729_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_7729_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_7729_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_7729_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_7729_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_7729_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Sensor 9',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_7729_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Temperatur Sensor 10',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_7729_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Einstrahlung CS',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7729_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Impulse 1 V40',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7729_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Digital Input',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7729_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7729_0100_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7729_0100_027_1_0,
            parts: [{
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7729_0100_028_1_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '029_1_0',
            name: 'Drehzahl Relais 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7729_0100_029_1_0,
            parts: [{
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '030_1_0',
            name: 'Drehzahl Relais 5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7729_0100_030_1_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '031_1_0',
            name: 'Drehzahl Relais 6',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7729_0100_031_1_0,
            parts: [{
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '032_1_0',
            name: 'Drehzahl Relais 7',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7729_0100_032_1_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7729_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Meldungen',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7729_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '040_1_0',
            name: 'System',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7729_0100_040_1_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '042_2_0',
            name: 'Schema',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7729_0100_042_2_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 43,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '044_2_0',
            name: 'Vorlauf Soll HK1 Modul Sensor 18',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_7729_0100_044_2_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '046_2_0',
            name: 'Status HK1 Modul',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7729_0100_046_2_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 47,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '048_2_0',
            name: 'Vorlauf Soll HK2 Modul Sensor 25',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_7729_0100_048_2_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '050_2_0',
            name: 'Status HK2 Modul',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7729_0100_050_2_0,
            parts: [{
                offset: 50,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 51,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '052_2_0',
            name: 'Vorlauf Soll HK3 Modul Sensor 32',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_7729_0100_052_2_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '054_2_0',
            name: 'Status HK3 Modul',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7729_0100_054_2_0,
            parts: [{
                offset: 54,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 55,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '056_2_0',
            name: 'Vorlauf Soll Heizkreis Sensor 11',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_7729_0100_056_2_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '058_2_0',
            name: 'Status Heizkreis',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7729_0100_058_2_0,
            parts: [{
                offset: 58,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 59,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '062_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7729_0100_062_2_0,
            parts: [{
                offset: 62,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 63,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '064_2_0',
            name: 'Jahr',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7729_0100_064_2_0,
            parts: [{
                offset: 64,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 65,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '066_1_0',
            name: 'Monat',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7729_0100_066_1_0,
            parts: [{
                offset: 66,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '067_1_0',
            name: 'Tag',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7729_0100_067_1_0,
            parts: [{
                offset: 67,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '060_1_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_7729_0100_060_1_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, {
                offset: 61,
                mask: 255,
                isSigned: true,
                factor: 0.01,
            }, ],
        }, ],
        _0010_772A_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Vorlauf',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_772A_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Rücklauf',
            type: types.Number_0_1_DegreesFahrenheit,
            getRawValue: getRawValueFunctions._0010_772A_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Durchfluss Sensor 8',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_772A_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_772A_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, ],
        _0010_7731_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7731_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7731_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7731_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7731_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7731_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7731_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7731_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7731_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Drehzahl R1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7731_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '017_1_0',
            name: 'Drehzahl R2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7731_0100_017_1_0,
            parts: [{
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '018_1_0',
            name: 'Drehzahl R3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7731_0100_018_1_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '019_1_0',
            name: 'Relaisbyte',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7731_0100_019_1_0,
            parts: [{
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Wärme',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7731_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'Schema',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7731_0100_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_7751_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7751_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7751_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7751_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7751_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7751_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7751_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7751_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7751_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Sensor 9',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7751_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Temperatur Sensor 10',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7751_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Temperatur Sensor 11',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7751_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Volumenstrom',
            type: types.Number_0_1_LitersPerMinute,
            getRawValue: getRawValueFunctions._0010_7751_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_1_0',
            name: 'Drehzahl R1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7751_0100_024_1_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '025_1_0',
            name: 'Drehzahl R2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7751_0100_025_1_0,
            parts: [{
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'Drehzahl R3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7751_0100_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_1',
            name: 'Relaisstatus R4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7751_0100_027_1_1,
            parts: [{
                offset: 27,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_2',
            name: 'Relaisstatus R5',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7751_0100_027_1_2,
            parts: [{
                offset: 27,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_4',
            name: 'Relaisstatus R6',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7751_0100_027_1_4,
            parts: [{
                offset: 27,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_8',
            name: 'Relaisstatus R7',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7751_0100_027_1_8,
            parts: [{
                offset: 27,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_16',
            name: 'Relaisstatus R8',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7751_0100_027_1_16,
            parts: [{
                offset: 27,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_32',
            name: 'Relaisstatus R9',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7751_0100_027_1_32,
            parts: [{
                offset: 27,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7751_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'Systemdatum',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7751_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7751_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '039_1_0',
            name: 'Variante',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7751_0100_039_1_0,
            parts: [{
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_7761_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7761_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7761_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7761_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7761_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7761_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7761_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7761_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7761_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Sensor 9',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7761_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Temperatur Sensor 10',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7761_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Einstrahlung CS',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7761_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Impulse 1 V40',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Digital Input',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7761_0100_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7761_0100_027_1_0,
            parts: [{
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7761_0100_028_1_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '029_1_0',
            name: 'Drehzahl Relais 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7761_0100_029_1_0,
            parts: [{
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '030_1_0',
            name: 'Drehzahl Relais 5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7761_0100_030_1_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '031_1_0',
            name: 'Drehzahl Relais 6',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7761_0100_031_1_0,
            parts: [{
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '032_1_0',
            name: 'Drehzahl Relais 7',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7761_0100_032_1_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '033_2_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_033_2_0,
            parts: [{
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 34,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '036_4_0',
            name: 'Meldungen',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_4_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '040_2_0',
            name: 'Filterlaufzeit',
            type: types.Number_1_Minutes,
            getRawValue: getRawValueFunctions._0010_7761_0100_040_2_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '046_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_046_2_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 47,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '048_2_0',
            name: 'Jahr',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_048_2_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '050_1_0',
            name: 'Monat',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_050_1_0,
            parts: [{
                offset: 50,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '051_1_0',
            name: 'Tag',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_051_1_0,
            parts: [{
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_044_1_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: true,
                factor: 0.01,
            }, ],
        }, {
            fieldId: '052_4_0',
            name: 'Umwaelzzeitzähler',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7761_0100_052_4_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 54,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 55,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '056_4_0',
            name: 'Extra-Filterzeit',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7761_0100_056_4_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 58,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 59,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '060_4_0',
            name: 'Pumpenüberwachung',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7761_0100_060_4_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 61,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 62,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 63,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '064_4_0',
            name: 'Solar Min_ Ein/Aus',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7761_0100_064_4_0,
            parts: [{
                offset: 64,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 65,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 66,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 67,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '068_4_0',
            name: 'Sim5',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_068_4_0,
            parts: [{
                offset: 68,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 69,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 70,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 71,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '072_4_0',
            name: 'Dauer Regelungsblock',
            type: types.Number_1_Milliseconds,
            getRawValue: getRawValueFunctions._0010_7761_0100_072_4_0,
            parts: [{
                offset: 72,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 73,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 74,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 75,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '044_1_0_1',
            name: 'Solarphase',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_044_1_0_1,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_1',
            name: 'Solar dTein',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_1,
            parts: [{
                offset: 36,
                mask: 1,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_67108864',
            name: 'Solar dTaus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_67108864,
            parts: [{
                offset: 36,
                mask: 67108864,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_2',
            name: 'CS ein',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_2,
            parts: [{
                offset: 36,
                mask: 2,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_4',
            name: 'Solar Mindestein',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_4,
            parts: [{
                offset: 36,
                mask: 4,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_8',
            name: 'Solar Mindestaus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_8,
            parts: [{
                offset: 36,
                mask: 8,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_16',
            name: 'Beckenmax_',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_16,
            parts: [{
                offset: 36,
                mask: 16,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_32',
            name: 'Filtermin_',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_32,
            parts: [{
                offset: 36,
                mask: 32,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_64',
            name: 'Nachheizung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_64,
            parts: [{
                offset: 36,
                mask: 64,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_128',
            name: 'Solar Nachheizung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_128,
            parts: [{
                offset: 36,
                mask: 128,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_256',
            name: 'dT Solar Nachheizung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_256,
            parts: [{
                offset: 36,
                mask: 256,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_512',
            name: 'Umwälzung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_512,
            parts: [{
                offset: 36,
                mask: 512,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_1024',
            name: 'Kollektorabschaltung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_1024,
            parts: [{
                offset: 36,
                mask: 1024,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_2048',
            name: 'Kollektorminimal',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_2048,
            parts: [{
                offset: 36,
                mask: 2048,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_262144',
            name: 'T Beckenkühlfkt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_262144,
            parts: [{
                offset: 36,
                mask: 262144,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_524288',
            name: 'dT Beckenkühlfkt ein',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_524288,
            parts: [{
                offset: 36,
                mask: 524288,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_4096',
            name: 'dT Beckenkühlfkt aus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_4096,
            parts: [{
                offset: 36,
                mask: 4096,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_8192',
            name: 'Vorlaufbegrenzung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_8192,
            parts: [{
                offset: 36,
                mask: 8192,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_16384',
            name: 'Extra Filterlaufzeit',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_16384,
            parts: [{
                offset: 36,
                mask: 16384,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_32768',
            name: 'Externe Reglerfreigabe',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_32768,
            parts: [{
                offset: 36,
                mask: 32768,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_65536',
            name: 'Fehlerrelais',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_65536,
            parts: [{
                offset: 36,
                mask: 65536,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_524288_1',
            name: 'Solarkreis ein',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_524288_1,
            parts: [{
                offset: 36,
                mask: 524288,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_1048576',
            name: 'Filter eingeschaltet',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_1048576,
            parts: [{
                offset: 36,
                mask: 1048576,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_2097152',
            name: 'Nachhzg normal',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_2097152,
            parts: [{
                offset: 36,
                mask: 2097152,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_4194304',
            name: 'Solarkreis aktiv',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_4194304,
            parts: [{
                offset: 36,
                mask: 4194304,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_8388608',
            name: 'Betriebsrelais ein',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_8388608,
            parts: [{
                offset: 36,
                mask: 8388608,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_1_16777216',
            name: 'Pumpencheck',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7761_0100_036_1_16777216,
            parts: [{
                offset: 36,
                mask: 16777216,
                isSigned: true,
                factor: 1,
            }, ],
        }, ],
        _0010_7762_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Vorlauf',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7762_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Rücklauf',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7762_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Durchfluss Sensor 8',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7762_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7762_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, ],
        _0010_7774_0100: [{
            fieldId: '000_4_0',
            name: 'Datum',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_000_4_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Uhrzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'TSS',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7774_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'TEF',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7774_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Wärme',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Wärme',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Wärme',
            type: types.Number_1_MegawattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Volumenstrom',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7774_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Volumen',
            type: types.Number_0_01_CubicMeters,
            getRawValue: getRawValueFunctions._0010_7774_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 21,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, {
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 655.36,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 167772.16,
            }, ],
        }, {
            fieldId: '096_4_0',
            name: 'Impulse',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_096_4_0,
            parts: [{
                offset: 96,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 97,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 98,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 99,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'TSS',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7774_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'TSA',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7774_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Wärme2',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '030_2_0',
            name: 'Wärme2',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_030_2_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '032_2_0',
            name: 'Wärme2',
            type: types.Number_1_MegawattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_032_2_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '034_2_0',
            name: 'Volumenstrom2',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7774_0100_034_2_0,
            parts: [{
                offset: 34,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 35,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '096_4_0_1',
            name: 'Impulse',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_096_4_0_1,
            parts: [{
                offset: 96,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 97,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 98,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 99,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'TAC',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7774_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'TAF',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7774_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '040_2_0',
            name: 'Wärme3',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_040_2_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '042_2_0',
            name: 'Wärme3',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_042_2_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 43,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '044_2_0',
            name: 'Wärme3',
            type: types.Number_1_MegawattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_044_2_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '046_2_0',
            name: 'Volumenstrom3',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7774_0100_046_2_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 47,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '100_4_0',
            name: 'Impulse',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_100_4_0,
            parts: [{
                offset: 100,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 101,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 102,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 103,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '048_2_0',
            name: 'TBC',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7774_0100_048_2_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '050_2_0',
            name: 'TBF',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7774_0100_050_2_0,
            parts: [{
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '052_2_0',
            name: 'Wärme4',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_052_2_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '054_2_0',
            name: 'Wärme4',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_054_2_0,
            parts: [{
                offset: 54,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 55,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '056_2_0',
            name: 'Wärme4',
            type: types.Number_1_MegawattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_056_2_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '058_2_0',
            name: 'Volumenstrom4',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7774_0100_058_2_0,
            parts: [{
                offset: 58,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 59,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '104_4_0',
            name: 'Impulse',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_104_4_0,
            parts: [{
                offset: 104,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 105,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 106,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 107,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '060_2_0',
            name: 'TSC',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7774_0100_060_2_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 61,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '062_2_0',
            name: 'TSF',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7774_0100_062_2_0,
            parts: [{
                offset: 62,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 63,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '064_2_0',
            name: 'Wärme5',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_064_2_0,
            parts: [{
                offset: 64,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 65,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '066_2_0',
            name: 'Wärme5',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_066_2_0,
            parts: [{
                offset: 66,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 67,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '068_2_0',
            name: 'Wärme5',
            type: types.Number_1_MegawattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_068_2_0,
            parts: [{
                offset: 68,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 69,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '070_2_0',
            name: 'Volumenstrom5',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7774_0100_070_2_0,
            parts: [{
                offset: 70,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 71,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '108_4_0',
            name: 'Impulse',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_108_4_0,
            parts: [{
                offset: 108,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 109,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 110,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 111,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '072_4_0',
            name: 'Strom1',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_072_4_0,
            parts: [{
                offset: 72,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 73,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 74,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 75,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '076_4_0',
            name: 'Strom1',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_076_4_0,
            parts: [{
                offset: 76,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 77,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 78,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 79,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '112_4_0',
            name: 'Impulse',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_112_4_0,
            parts: [{
                offset: 112,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 113,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 114,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 115,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '080_4_0',
            name: 'Strom2',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_080_4_0,
            parts: [{
                offset: 80,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 81,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 82,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 83,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '116_4_0',
            name: 'Impulse',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_116_4_0,
            parts: [{
                offset: 116,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 117,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 118,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 119,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '084_4_0',
            name: 'Gas1',
            type: types.Number_0_01_CubicMeters,
            getRawValue: getRawValueFunctions._0010_7774_0100_084_4_0,
            parts: [{
                offset: 84,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, {
                offset: 85,
                mask: 255,
                isSigned: 0,
                factor: 2.56,
            }, {
                offset: 86,
                mask: 255,
                isSigned: 0,
                factor: 655.36,
            }, {
                offset: 87,
                mask: 255,
                isSigned: 0,
                factor: 167772.16,
            }, ],
        }, {
            fieldId: '128_4_0',
            name: 'Impulse',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_128_4_0,
            parts: [{
                offset: 128,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 129,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 130,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 131,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '088_4_0',
            name: 'Therm_ Energie1',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_088_4_0,
            parts: [{
                offset: 88,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 89,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 90,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 91,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '120_4_0',
            name: 'Impulse',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_120_4_0,
            parts: [{
                offset: 120,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 121,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 122,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 123,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '092_4_0',
            name: 'Therm_ Energie2',
            type: types.Number_1_KilowattHours,
            getRawValue: getRawValueFunctions._0010_7774_0100_092_4_0,
            parts: [{
                offset: 92,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 93,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 94,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 95,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '124_4_0',
            name: 'Impulse',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_124_4_0,
            parts: [{
                offset: 124,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 125,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 126,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 127,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '096_4_0_2',
            name: 'Impulszähler 1 (Volumen 1/2)',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_096_4_0_2,
            parts: [{
                offset: 96,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 97,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 98,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 99,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '100_4_0_1',
            name: 'Impulszähler 2 (Volumen 3)',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_100_4_0_1,
            parts: [{
                offset: 100,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 101,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 102,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 103,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '104_4_0_1',
            name: 'Impulszähler 3 (Volumen 4)',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_104_4_0_1,
            parts: [{
                offset: 104,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 105,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 106,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 107,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '108_4_0_1',
            name: 'Impulszähler 4 (Volumen 5)',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_108_4_0_1,
            parts: [{
                offset: 108,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 109,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 110,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 111,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '112_4_0_1',
            name: 'Impulszähler 5 (Strom 1)',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_112_4_0_1,
            parts: [{
                offset: 112,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 113,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 114,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 115,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '116_4_0_1',
            name: 'Impulszähler 6 (Strom 2)',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_116_4_0_1,
            parts: [{
                offset: 116,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 117,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 118,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 119,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '120_4_0_1',
            name: 'Impulszähler 7 (th_ Energie 1)',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_120_4_0_1,
            parts: [{
                offset: 120,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 121,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 122,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 123,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '124_4_0_1',
            name: 'Impulszähler 8 (th_ Energie 2)',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_124_4_0_1,
            parts: [{
                offset: 124,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 125,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 126,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 127,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '128_4_0_1',
            name: 'Impulszähler 9 (Gas 1)',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7774_0100_128_4_0_1,
            parts: [{
                offset: 128,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 129,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 130,
                mask: 255,
                isSigned: 0,
                factor: 65536,
            }, {
                offset: 131,
                mask: 255,
                isSigned: 0,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7821_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7821_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7821_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7821_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7821_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7821_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7821_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7821_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7821_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Sensor 9',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7821_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Temperatur Sensor 10',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7821_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Einstrahlung CS',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7821_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Impulse 1 V40',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7821_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Digital Input',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7821_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7821_0100_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7821_0100_027_1_0,
            parts: [{
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7821_0100_028_1_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '029_1_0',
            name: 'Drehzahl Relais 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7821_0100_029_1_0,
            parts: [{
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '030_1_0',
            name: 'Drehzahl Relais 5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7821_0100_030_1_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '031_1_0',
            name: 'Drehzahl Relais 6',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7821_0100_031_1_0,
            parts: [{
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '032_1_0',
            name: 'Drehzahl Relais 7',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7821_0100_032_1_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7821_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Meldungen',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7821_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '040_1_0',
            name: 'System',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7821_0100_040_1_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '042_2_0',
            name: 'Schema',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7821_0100_042_2_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 43,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '044_2_0',
            name: 'Vorlauf Soll HK1 Modul Sensor 18',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7821_0100_044_2_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '046_2_0',
            name: 'Status HK1 Modul',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7821_0100_046_2_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 47,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '048_2_0',
            name: 'Vorlauf Soll HK2 Modul Sensor 25',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7821_0100_048_2_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '050_2_0',
            name: 'Status HK2 Modul',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7821_0100_050_2_0,
            parts: [{
                offset: 50,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 51,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '052_2_0',
            name: 'Vorlauf Soll HK3 Modul Sensor 32',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7821_0100_052_2_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '054_2_0',
            name: 'Status HK3 Modul',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7821_0100_054_2_0,
            parts: [{
                offset: 54,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 55,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '056_2_0',
            name: 'Vorlauf Soll Heizkreis Sensor 11',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7821_0100_056_2_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '058_2_0',
            name: 'Status Heizkreis',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7821_0100_058_2_0,
            parts: [{
                offset: 58,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 59,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '062_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7821_0100_062_2_0,
            parts: [{
                offset: 62,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 63,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '064_2_0',
            name: 'Jahr',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7821_0100_064_2_0,
            parts: [{
                offset: 64,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 65,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '066_1_0',
            name: 'Monat',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7821_0100_066_1_0,
            parts: [{
                offset: 66,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '067_1_0',
            name: 'Tag',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7821_0100_067_1_0,
            parts: [{
                offset: 67,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '060_1_0',
            name: 'Version',
            type: types.Number_0_01_None,
            getRawValue: getRawValueFunctions._0010_7821_0100_060_1_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, {
                offset: 61,
                mask: 255,
                isSigned: true,
                factor: 0.01,
            }, ],
        }, ],
        _0010_7822_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Vorlauf',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7822_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Rücklauf',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7822_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Durchfluss Sensor 8',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7822_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7822_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 10,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, ],
        _0010_7830_0100: [{
            fieldId: '000_2_0',
            name: 'Jahr',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7830_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '002_1_0',
            name: 'Monat',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7830_0100_002_1_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '003_1_0',
            name: 'Tag',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7830_0100_003_1_0,
            parts: [{
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7830_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '006_1_0',
            name: 'Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7830_0100_006_1_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '007_1_0',
            name: 'Fehlermeldung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7830_0100_007_1_0,
            parts: [{
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Vorlauf-Soll-Temperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7830_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Vorlauftemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7830_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Relais Pumpe',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7830_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Relais Mischer Auf',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7830_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Relais Mischer Zu',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7830_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Handebetrieb Relais Pumpe',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7830_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Handebetrieb Relais Mischer Auf',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7830_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '017_1_0',
            name: 'Handebetrieb Relais Mischer Zu',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7830_0100_017_1_0,
            parts: [{
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '018_1_0',
            name: 'NH-Anforderung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7830_0100_018_1_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '019_1_0',
            name: 'Parameter Start',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7830_0100_019_1_0,
            parts: [{
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Parameter TStart',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7830_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Parameter TMax',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7830_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Parameter Anstieg',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7830_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'Parameter Anstiegszeit',
            type: types.Number_1_Hours,
            getRawValue: getRawValueFunctions._0010_7830_0100_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_0',
            name: 'Parameter Haltezeit',
            type: types.Number_1_Days,
            getRawValue: getRawValueFunctions._0010_7830_0100_027_1_0,
            parts: [{
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, ],
        _0010_7D04_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Warmwasser',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7D04_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Kaltwasser',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7D04_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Zirkulation',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7D04_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Volumenstrom',
            type: types.Number_0_1_LitersPerMinute,
            getRawValue: getRawValueFunctions._0010_7D04_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7D04_0100_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7D04_0100_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Systemzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7D04_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Optionen',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7D04_0100_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Status',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7D04_0100_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Relaisstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7D04_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'SensorDefekt',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7D04_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Temperatur WW-Soll',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7D04_0100_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '017_1_0',
            name: 'Temperatur Quelle',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7D04_0100_017_1_0,
            parts: [{
                offset: 17,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '019_1_0',
            name: 'verbl_ Zapfung',
            type: types.Number_1_Minutes,
            getRawValue: getRawValueFunctions._0010_7D04_0100_019_1_0,
            parts: [{
                offset: 19,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Schaltspiele',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7D04_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7D04_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 1000,
            }, {
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 256000,
            }, {
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1000000,
            }, {
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 256000000,
            }, ],
        }, {
            fieldId: '030_1_0',
            name: 'Version',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7D04_0100_030_1_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 31,
                mask: 255,
                isSigned: 0,
                factor: 0.01,
            }, ],
        }, {
            fieldId: '032_2_0',
            name: 'max_ Temperatur Kaltwasser',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7D04_0100_032_2_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '034_2_0',
            name: 'min_ Temperatur Kaltwasser',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7D04_0100_034_2_0,
            parts: [{
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'max_ Volumenstrom',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7D04_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Zapfmenge',
            type: types.Number_0_1_CubicMeters,
            getRawValue: getRawValueFunctions._0010_7D04_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: 0,
                factor: 0.1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: 0,
                factor: 25.6,
            }, ],
        }, ],
        _0010_7E11_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Sensor 7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Sensor 8',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Sensor 9',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Temperatur Sensor 10',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Temperatur Sensor 11',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Temperatur Sensor 12',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Temperatur Sensor 13',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'Temperatur Sensor 14',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Temperatur Sensor 15',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '030_2_0',
            name: 'Einstrahlung Sensor 16',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7E11_0100_030_2_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '032_2_0',
            name: 'Temperatur Sensor 17',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_032_2_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '034_2_0',
            name: 'Temperatur Sensor 18',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_034_2_0,
            parts: [{
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Temperatur Sensor 19',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Temperatur Sensor 20',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E11_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '040_4_0',
            name: 'Volumenstrom Sensor 13',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7E11_0100_040_4_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '044_4_0',
            name: 'Volumenstrom Sensor 14',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7E11_0100_044_4_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 46,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 47,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '048_4_0',
            name: 'Volumenstrom Sensor 15',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7E11_0100_048_4_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '052_4_0',
            name: 'Volumenstrom Sensor 17',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7E11_0100_052_4_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 54,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 55,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '056_4_0',
            name: 'Volumenstrom Sensor 18',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7E11_0100_056_4_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 58,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 59,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '060_4_0',
            name: 'Volumenstrom Sensor 19',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7E11_0100_060_4_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 61,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 62,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 63,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '064_4_0',
            name: 'Volumenstrom Sensor 20',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7E11_0100_064_4_0,
            parts: [{
                offset: 64,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 65,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 66,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 67,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '068_2_0',
            name: 'Druck Sensor 17',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0010_7E11_0100_068_2_0,
            parts: [{
                offset: 68,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 69,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '070_2_0',
            name: 'Druck Sensor 18',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0010_7E11_0100_070_2_0,
            parts: [{
                offset: 70,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 71,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '072_2_0',
            name: 'Druck Sensor 19',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0010_7E11_0100_072_2_0,
            parts: [{
                offset: 72,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 73,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '074_2_0',
            name: 'Druck Sensor 20',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0010_7E11_0100_074_2_0,
            parts: [{
                offset: 74,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 75,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '076_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7E11_0100_076_1_0,
            parts: [{
                offset: 76,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '077_1_0',
            name: 'Drehzahl Relais 2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7E11_0100_077_1_0,
            parts: [{
                offset: 77,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '078_1_0',
            name: 'Drehzahl Relais 3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7E11_0100_078_1_0,
            parts: [{
                offset: 78,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '079_1_0',
            name: 'Drehzahl Relais 4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7E11_0100_079_1_0,
            parts: [{
                offset: 79,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '080_1_0',
            name: 'Drehzahl Relais 5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7E11_0100_080_1_0,
            parts: [{
                offset: 80,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '081_1_0',
            name: 'Drehzahl Relais 6',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7E11_0100_081_1_0,
            parts: [{
                offset: 81,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '082_1_0',
            name: 'Drehzahl Relais 7',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7E11_0100_082_1_0,
            parts: [{
                offset: 82,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '083_1_0',
            name: 'Drehzahl Relais 8',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7E11_0100_083_1_0,
            parts: [{
                offset: 83,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '084_1_0',
            name: 'Drehzahl Relais 9',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7E11_0100_084_1_0,
            parts: [{
                offset: 84,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '085_1_0',
            name: 'Drehzahl Relais 10',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7E11_0100_085_1_0,
            parts: [{
                offset: 85,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '086_1_0',
            name: 'Drehzahl Relais 11',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7E11_0100_086_1_0,
            parts: [{
                offset: 86,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '087_1_0',
            name: 'Drehzahl Relais 12',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7E11_0100_087_1_0,
            parts: [{
                offset: 87,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '088_1_0',
            name: 'Drehzahl Relais 13',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7E11_0100_088_1_0,
            parts: [{
                offset: 88,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '089_1_0',
            name: 'Drehzahl Relais 14',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7E11_0100_089_1_0,
            parts: [{
                offset: 89,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '092_4_0',
            name: 'Systemdatum',
            type: types.DateTime_1_None,
            getRawValue: getRawValueFunctions._0010_7E11_0100_092_4_0,
            parts: [{
                offset: 92,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 93,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 94,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 95,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '096_4_0',
            name: 'Fehlermaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7E11_0100_096_4_0,
            parts: [{
                offset: 96,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 97,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 98,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 99,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7E12_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Modul 1 Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Modul 1 Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Modul 1 Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Modul 1 Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Modul 1 Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Temperatur Modul 1 Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Temperatur Modul 2 Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '014_2_0',
            name: 'Temperatur Modul 2 Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_014_2_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Temperatur Modul 2 Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Temperatur Modul 2 Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'Temperatur Modul 2 Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'Temperatur Modul 2 Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Temperatur Modul 3 Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'Temperatur Modul 3 Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Temperatur Modul 3 Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '030_2_0',
            name: 'Temperatur Modul 3 Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_030_2_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '032_2_0',
            name: 'Temperatur Modul 3 Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_032_2_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '034_2_0',
            name: 'Temperatur Modul 3 Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_034_2_0,
            parts: [{
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '036_2_0',
            name: 'Temperatur Modul 4 Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_036_2_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '038_2_0',
            name: 'Temperatur Modul 4 Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_038_2_0,
            parts: [{
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '040_2_0',
            name: 'Temperatur Modul 4 Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_040_2_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '042_2_0',
            name: 'Temperatur Modul 4 Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_042_2_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '044_2_0',
            name: 'Temperatur Modul 4 Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_044_2_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '046_2_0',
            name: 'Temperatur Modul 4 Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_046_2_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 47,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '048_2_0',
            name: 'Temperatur Modul 5 Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_048_2_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '050_2_0',
            name: 'Temperatur Modul 5 Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_050_2_0,
            parts: [{
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '052_2_0',
            name: 'Temperatur Modul 5 Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_052_2_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '054_2_0',
            name: 'Temperatur Modul 5 Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_054_2_0,
            parts: [{
                offset: 54,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 55,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '056_2_0',
            name: 'Temperatur Modul 5 Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_056_2_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 57,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '058_2_0',
            name: 'Temperatur Modul 5 Sensor 6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E12_0100_058_2_0,
            parts: [{
                offset: 58,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 59,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, ],
        _0010_7E20_0100: [{
            fieldId: '000_2_0',
            name: 'Vorlauf-Soll-Temperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7E20_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_1_0',
            name: 'Betriebsstatus',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7E20_0100_002_1_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _0010_7E30_0100: [{
            fieldId: '000_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7E30_0100_000_4_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '008_4_0',
            name: 'Wärmemenge heute',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7E30_0100_008_4_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Wärmemenge Woche',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7E30_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7F61_0100: [{
            fieldId: '000_4_0',
            name: 'SekNr',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._0010_7F61_0100_000_4_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '004_4_0',
            name: 'T-Umgebung',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F61_0100_004_4_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: false,
                factor: 25.6,
            }, {
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 6553.6,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 1677721.6,
            }, ],
        }, {
            fieldId: '008_4_0',
            name: 'T-Vorlauf/S1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F61_0100_008_4_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: false,
                factor: 25.6,
            }, {
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 6553.6,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 1677721.6,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'T-Rücklauf/S2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F61_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 25.6,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 6553.6,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 1677721.6,
            }, ],
        }, {
            fieldId: '016_4_0',
            name: 'TSL',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F61_0100_016_4_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: false,
                factor: 25.6,
            }, {
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 6553.6,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 1677721.6,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Tmax-Temp_/S5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F61_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: false,
                factor: 25.6,
            }, {
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 6553.6,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 1677721.6,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'Einstrahlung',
            type: types.Number_0_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7F61_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: false,
                factor: 25.6,
            }, {
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 6553.6,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 1677721.6,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'Volumenstr_1',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7F61_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'Volumenstr_2',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7F61_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_4_0',
            name: 'S6',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F61_0100_036_4_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: false,
                factor: 25.6,
            }, {
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 6553.6,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 1677721.6,
            }, ],
        }, {
            fieldId: '040_4_0',
            name: 'S7',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F61_0100_040_4_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: false,
                factor: 25.6,
            }, {
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 6553.6,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 1677721.6,
            }, ],
        }, {
            fieldId: '044_4_0',
            name: 'Stromstärke 1',
            type: types.Number_0_01_Milliamperes,
            getRawValue: getRawValueFunctions._0010_7F61_0100_044_4_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 45,
                mask: 255,
                isSigned: false,
                factor: 2.56,
            }, {
                offset: 46,
                mask: 255,
                isSigned: false,
                factor: 655.36,
            }, {
                offset: 47,
                mask: 255,
                isSigned: true,
                factor: 167772.16,
            }, ],
        }, {
            fieldId: '048_4_0',
            name: 'Stromstärke 2',
            type: types.Number_0_01_Milliamperes,
            getRawValue: getRawValueFunctions._0010_7F61_0100_048_4_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 49,
                mask: 255,
                isSigned: false,
                factor: 2.56,
            }, {
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 655.36,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 167772.16,
            }, ],
        }, {
            fieldId: '052_4_0',
            name: 'Datum_Messdaten',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7F61_0100_052_4_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 54,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 55,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '056_4_0',
            name: 'Wärmemenge 1',
            type: types.Number_0_01_KilowattHours,
            getRawValue: getRawValueFunctions._0010_7F61_0100_056_4_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 57,
                mask: 255,
                isSigned: false,
                factor: 2.56,
            }, {
                offset: 58,
                mask: 255,
                isSigned: false,
                factor: 655.36,
            }, {
                offset: 59,
                mask: 255,
                isSigned: true,
                factor: 167772.16,
            }, ],
        }, {
            fieldId: '060_4_0',
            name: 'Wärmemenge 2',
            type: types.Number_0_01_KilowattHours,
            getRawValue: getRawValueFunctions._0010_7F61_0100_060_4_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 61,
                mask: 255,
                isSigned: false,
                factor: 2.56,
            }, {
                offset: 62,
                mask: 255,
                isSigned: false,
                factor: 655.36,
            }, {
                offset: 63,
                mask: 255,
                isSigned: true,
                factor: 167772.16,
            }, ],
        }, {
            fieldId: '068_2_0',
            name: 'Solarwärme',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7F61_0100_068_2_0,
            parts: [{
                offset: 68,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 69,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, {
                offset: 70,
                mask: 255,
                isSigned: false,
                factor: 1000,
            }, {
                offset: 71,
                mask: 255,
                isSigned: true,
                factor: 256000,
            }, {
                offset: 72,
                mask: 255,
                isSigned: false,
                factor: 1000000,
            }, {
                offset: 73,
                mask: 255,
                isSigned: true,
                factor: 256000000,
            }, {
                offset: 74,
                mask: 255,
                isSigned: false,
                factor: 1000000000,
            }, {
                offset: 75,
                mask: 255,
                isSigned: true,
                factor: 256000000000,
            }, ],
        }, {
            fieldId: '064_4_0',
            name: '5-Min-Fehlercode',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7F61_0100_064_4_0,
            parts: [{
                offset: 64,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 65,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 66,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 67,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7F62_0100: [{
            fieldId: '000_4_0',
            name: 'Datum',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7F62_0100_000_4_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '004_4_0',
            name: 'H-Day',
            type: types.Number_0_01_KiloWattHoursPerSquareMeterPerDay,
            getRawValue: getRawValueFunctions._0010_7F62_0100_004_4_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 5,
                mask: 255,
                isSigned: false,
                factor: 2.56,
            }, {
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 655.36,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 167772.16,
            }, ],
        }, {
            fieldId: '008_4_0',
            name: 'Q-mess',
            type: types.Number_0_001_KiloWattHoursPerSquareMeterPerDay,
            getRawValue: getRawValueFunctions._0010_7F62_0100_008_4_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 9,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Q-erw2',
            type: types.Number_0_001_KiloWattHoursPerSquareMeterPerDay,
            getRawValue: getRawValueFunctions._0010_7F62_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '016_4_0',
            name: 'Q-erw',
            type: types.Number_0_001_KiloWattHoursPerSquareMeterPerDay,
            getRawValue: getRawValueFunctions._0010_7F62_0100_016_4_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 17,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Meldung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7F62_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'dt-mess',
            type: types.Number_0_01_Hours,
            getRawValue: getRawValueFunctions._0010_7F62_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 25,
                mask: 255,
                isSigned: false,
                factor: 2.56,
            }, {
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 655.36,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 167772.16,
            }, ],
        }, {
            fieldId: '028_4_0',
            name: 'dt-erw2',
            type: types.Number_0_01_Hours,
            getRawValue: getRawValueFunctions._0010_7F62_0100_028_4_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 29,
                mask: 255,
                isSigned: false,
                factor: 2.56,
            }, {
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 655.36,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 167772.16,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'dt-erw',
            type: types.Number_0_01_Hours,
            getRawValue: getRawValueFunctions._0010_7F62_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 33,
                mask: 255,
                isSigned: false,
                factor: 2.56,
            }, {
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 655.36,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 167772.16,
            }, ],
        }, {
            fieldId: '036_4_0',
            name: 'Qutil-m',
            type: types.Number_0_01_KiloWattHoursPerSquareMeterPerDay,
            getRawValue: getRawValueFunctions._0010_7F62_0100_036_4_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 37,
                mask: 255,
                isSigned: false,
                factor: 2.56,
            }, {
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 655.36,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 167772.16,
            }, ],
        }, {
            fieldId: '040_4_0',
            name: 'Qutil-e2',
            type: types.Number_0_01_KiloWattHoursPerSquareMeterPerDay,
            getRawValue: getRawValueFunctions._0010_7F62_0100_040_4_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 41,
                mask: 255,
                isSigned: false,
                factor: 2.56,
            }, {
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 655.36,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 167772.16,
            }, ],
        }, {
            fieldId: '044_4_0',
            name: 'Qutil-e',
            type: types.Number_0_01_KiloWattHoursPerSquareMeterPerDay,
            getRawValue: getRawValueFunctions._0010_7F62_0100_044_4_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 45,
                mask: 255,
                isSigned: false,
                factor: 2.56,
            }, {
                offset: 46,
                mask: 255,
                isSigned: false,
                factor: 655.36,
            }, {
                offset: 47,
                mask: 255,
                isSigned: true,
                factor: 167772.16,
            }, ],
        }, {
            fieldId: '048_4_0',
            name: 'Qtv-e2',
            type: types.Number_0_001_KiloWattHoursPerSquareMeterPerDay,
            getRawValue: getRawValueFunctions._0010_7F62_0100_048_4_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 49,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '052_4_0',
            name: 'Qtv-e',
            type: types.Number_0_001_KiloWattHoursPerSquareMeterPerDay,
            getRawValue: getRawValueFunctions._0010_7F62_0100_052_4_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 53,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 54,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 55,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '056_4_0',
            name: 'Qkv-e2',
            type: types.Number_0_001_KiloWattHoursPerSquareMeterPerDay,
            getRawValue: getRawValueFunctions._0010_7F62_0100_056_4_0,
            parts: [{
                offset: 56,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 57,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 58,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 59,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '060_4_0',
            name: 'Qkv-e',
            type: types.Number_0_001_KiloWattHoursPerSquareMeterPerDay,
            getRawValue: getRawValueFunctions._0010_7F62_0100_060_4_0,
            parts: [{
                offset: 60,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 61,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 62,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 63,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '064_4_0',
            name: 'Qskv-e2',
            type: types.Number_0_001_KiloWattHoursPerSquareMeterPerDay,
            getRawValue: getRawValueFunctions._0010_7F62_0100_064_4_0,
            parts: [{
                offset: 64,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 65,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 66,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 67,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '068_4_0',
            name: 'Qskv-e',
            type: types.Number_0_001_KiloWattHoursPerSquareMeterPerDay,
            getRawValue: getRawValueFunctions._0010_7F62_0100_068_4_0,
            parts: [{
                offset: 68,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 69,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 70,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 71,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '072_4_0',
            name: 'Tsoll-Day',
            type: types.Number_0_01_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F62_0100_072_4_0,
            parts: [{
                offset: 72,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 73,
                mask: 255,
                isSigned: false,
                factor: 2.56,
            }, {
                offset: 74,
                mask: 255,
                isSigned: false,
                factor: 655.36,
            }, {
                offset: 75,
                mask: 255,
                isSigned: true,
                factor: 167772.16,
            }, ],
        }, ],
        _0010_7F63_0100: [{
            fieldId: '000_4_0',
            name: 'Vlast-Day/Vol2',
            type: types.Number_0_1_LitersPerSquareMeterPerDay,
            getRawValue: getRawValueFunctions._0010_7F63_0100_000_4_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 25.6,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 6553.6,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 1677721.6,
            }, ],
        }, {
            fieldId: '004_4_0',
            name: 'Qmess2',
            type: types.Number_0_001_KiloWattHoursPerSquareMeterPerDay,
            getRawValue: getRawValueFunctions._0010_7F63_0100_004_4_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.001,
            }, {
                offset: 5,
                mask: 255,
                isSigned: false,
                factor: 0.256,
            }, {
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 65.536,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 16777.216,
            }, ],
        }, {
            fieldId: '008_4_0',
            name: 'Tagesfehlercode',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7F63_0100_008_4_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7F64_0100: [{
            fieldId: '000_4_0',
            name: 'Tkol-erw',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F64_0100_000_4_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 25.6,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 6553.6,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 1677721.6,
            }, ],
        }, {
            fieldId: '004_4_0',
            name: 'Volumenstrom-erw',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7F64_0100_004_4_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '008_4_0',
            name: 'IAM',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7F64_0100_008_4_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Diffusstrahlung',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7F64_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '016_4_0',
            name: 'Einfallswinkel',
            type: types.Number_1_DegreesAngular,
            getRawValue: getRawValueFunctions._0010_7F64_0100_016_4_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7F65_0100: [{
            fieldId: '000_2_0',
            name: 'T-Umgebung_1s',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F65_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'T-Vorlauf/S1_1s',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F65_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'T-Rücklauf/S2_1s',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F65_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'TSL_1s',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F65_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Tmax-Temp_/S5_1s',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F65_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Einstrahlung_1s',
            type: types.Number_0_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7F65_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '012_4_0',
            name: 'Volumenstrom1_1s',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7F65_0100_012_4_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '016_4_0',
            name: 'Volumenstrom2_1s',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7F65_0100_016_4_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'S6_1s',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F65_0100_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'S7_1s',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F65_0100_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_2_0',
            name: 'Stromstärke1_1s',
            type: types.Number_0_01_Milliamperes,
            getRawValue: getRawValueFunctions._0010_7F65_0100_024_2_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 25,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '026_2_0',
            name: 'Stromstärke2_1s',
            type: types.Number_0_01_Milliamperes,
            getRawValue: getRawValueFunctions._0010_7F65_0100_026_2_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Solarwärme_1s',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7F65_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, {
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 1000,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 256000,
            }, {
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 1000000,
            }, {
                offset: 33,
                mask: 255,
                isSigned: true,
                factor: 256000000,
            }, {
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 1000000000,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 256000000000,
            }, ],
        }, {
            fieldId: '036_4_0',
            name: 'Statusflag_1s',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7F65_0100_036_4_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, ],
        _0010_7F71_0100: [{
            fieldId: '000_2_0',
            name: 'Temperatur Sensor 1',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F71_0100_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '002_2_0',
            name: 'Temperatur Sensor 2',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F71_0100_002_2_0,
            parts: [{
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '004_2_0',
            name: 'Temperatur Sensor 3',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F71_0100_004_2_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 5,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '006_2_0',
            name: 'Temperatur Sensor 4',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F71_0100_006_2_0,
            parts: [{
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '008_2_0',
            name: 'Temperatur Sensor 5',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F71_0100_008_2_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 9,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '010_2_0',
            name: 'Systemdruck',
            type: types.Number_0_01_Bars,
            getRawValue: getRawValueFunctions._0010_7F71_0100_010_2_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 0.01,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 2.56,
            }, ],
        }, {
            fieldId: '012_2_0',
            name: 'Volumenstrom',
            type: types.Number_1_LitersPerHour,
            getRawValue: getRawValueFunctions._0010_7F71_0100_012_2_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 13,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Drehzahl Relais 1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7F71_0100_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Systemmeldung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7F71_0100_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_4_0',
            name: 'Leistung',
            type: types.Number_1_Watts,
            getRawValue: getRawValueFunctions._0010_7F71_0100_016_4_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '020_4_0',
            name: 'Wärmemenge',
            type: types.Number_1_WattHours,
            getRawValue: getRawValueFunctions._0010_7F71_0100_020_4_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '024_4_0',
            name: 'Datum',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7F71_0100_024_4_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 25,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '028_2_0',
            name: 'Uhrzeit',
            type: types.Time_1_None,
            getRawValue: getRawValueFunctions._0010_7F71_0100_028_2_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 29,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '030_1_0',
            name: 'Eff_Min-Drehzahl',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._0010_7F71_0100_030_1_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '032_4_0',
            name: 'Debug1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7F71_0100_032_4_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 33,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '036_4_0',
            name: 'Debug2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7F71_0100_036_4_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 37,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '040_4_0',
            name: 'Debug3',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7F71_0100_040_4_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 41,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 42,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '044_4_0',
            name: 'Debug4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7F71_0100_044_4_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 45,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 46,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 47,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '048_4_0',
            name: 'Debug5',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._0010_7F71_0100_048_4_0,
            parts: [{
                offset: 48,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 49,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 50,
                mask: 255,
                isSigned: false,
                factor: 65536,
            }, {
                offset: 51,
                mask: 255,
                isSigned: true,
                factor: 16777216,
            }, ],
        }, {
            fieldId: '052_2_0',
            name: 'Einstrahlung',
            type: types.Number_1_WattsPerSquareMeter,
            getRawValue: getRawValueFunctions._0010_7F71_0100_052_2_0,
            parts: [{
                offset: 52,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 53,
                mask: 255,
                isSigned: true,
                factor: 256,
            }, ],
        }, {
            fieldId: '054_2_0',
            name: 'Zelltemperatur',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._0010_7F71_0100_054_2_0,
            parts: [{
                offset: 54,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 55,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, ],
        _4420_0000_0200: [{
            fieldId: '008_1_0',
            name: 'Vorlaufmaximaltemperatur',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._4420_0000_0200_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'HK-Kennlinie',
            type: types.Number_0_1_None,
            getRawValue: getRawValueFunctions._4420_0000_0200_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 0.1,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Nachtabsenkung',
            type: types.Number_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._4420_0000_0200_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_0',
            name: 'Tageskorrektur',
            type: types.Number_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._4420_0000_0200_011_1_0,
            parts: [{
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Mischerlaufzeit',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._4420_0000_0200_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Sommerbetrieb',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._4420_0000_0200_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Info Schaltuhr',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._4420_0000_0200_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        _6510_0000_0200: [{
            fieldId: '000_2_0',
            name: 'Steuerregister',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._6510_0000_0200_000_2_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, {
                offset: 1,
                mask: 255,
                isSigned: 0,
                factor: 256,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Vorlaufmaximaltemperatur',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._6510_0000_0200_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_1_0',
            name: 'HK-Kennlinie',
            type: types.Number_0_1_None,
            getRawValue: getRawValueFunctions._6510_0000_0200_009_1_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: 0,
                factor: 0.1,
            }, ],
        }, {
            fieldId: '010_1_0',
            name: 'Nachtabsenkung',
            type: types.Number_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._6510_0000_0200_010_1_0,
            parts: [{
                offset: 10,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '011_1_0',
            name: 'Tageskorrektur',
            type: types.Number_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._6510_0000_0200_011_1_0,
            parts: [{
                offset: 11,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Mischerlaufzeit',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6510_0000_0200_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_1_0',
            name: 'Sommerbetrieb',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._6510_0000_0200_013_1_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '014_1_0',
            name: 'Info Schaltuhr',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._6510_0000_0200_014_1_0,
            parts: [{
                offset: 14,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '015_1_0',
            name: 'Option Nachheizung',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._6510_0000_0200_015_1_0,
            parts: [{
                offset: 15,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '016_2_0',
            name: 'Speichertemperatur 1 (Bus)',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._6510_0000_0200_016_2_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 17,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '018_2_0',
            name: 'Aussentemperatur Bus',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._6510_0000_0200_018_2_0,
            parts: [{
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '020_2_0',
            name: 'dT-NH-ein',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._6510_0000_0200_020_2_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 21,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '022_2_0',
            name: 'dT-NH-aus',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._6510_0000_0200_022_2_0,
            parts: [{
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, {
            fieldId: '024_1_0',
            name: 'Speicherminimaltemperatur',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._6510_0000_0200_024_1_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '025_1_0',
            name: 'Speicherkühltemperatur',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._6510_0000_0200_025_1_0,
            parts: [{
                offset: 25,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '026_1_0',
            name: 'Speicheranforderungstemperatur (ein)',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._6510_0000_0200_026_1_0,
            parts: [{
                offset: 26,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '027_1_0',
            name: 'Speicheranforderungstemperatur (aus)',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._6510_0000_0200_027_1_0,
            parts: [{
                offset: 27,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '028_1_0',
            name: 'WW-Anforderungstemperatur (ein)',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._6510_0000_0200_028_1_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '029_1_0',
            name: 'WW-Anforderungstemperatur (aus)',
            type: types.Number_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._6510_0000_0200_029_1_0,
            parts: [{
                offset: 29,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '030_2_0',
            name: 'Speichertemperatur 2 (Bus)',
            type: types.Number_0_1_DegreesCelsius,
            getRawValue: getRawValueFunctions._6510_0000_0200_030_2_0,
            parts: [{
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 0.1,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 25.6,
            }, ],
        }, ],
        _6520_0000_0200: [{
            fieldId: '000_1_0',
            name: 'Drehzahl 1 R1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6520_0000_0200_000_1_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '001_3_0',
            name: 'Laufzeit 1 R1',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6520_0000_0200_001_3_0,
            parts: [{
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '004_1_0',
            name: 'Drehzahl 2 R1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6520_0000_0200_004_1_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '005_3_0',
            name: 'Laufzeit 2 R1',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6520_0000_0200_005_3_0,
            parts: [{
                offset: 5,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl 1 R2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6520_0000_0200_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_3_0',
            name: 'Laufzeit 1 R2',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6520_0000_0200_009_3_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Drehzahl 2 R2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6520_0000_0200_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_3_0',
            name: 'Laufzeit 2 R2',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6520_0000_0200_013_3_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Drehzahl 1 R3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6520_0000_0200_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '017_3_0',
            name: 'Laufzeit 1 R3',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6520_0000_0200_017_3_0,
            parts: [{
                offset: 17,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '020_1_0',
            name: 'Drehzahl 2 R3',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6520_0000_0200_020_1_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '021_3_0',
            name: 'Laufzeit 2 R3',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6520_0000_0200_021_3_0,
            parts: [{
                offset: 21,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '024_1_0',
            name: 'Drehzahl 1 R4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6520_0000_0200_024_1_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '025_3_0',
            name: 'Laufzeit 1 R4',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6520_0000_0200_025_3_0,
            parts: [{
                offset: 25,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '028_1_0',
            name: 'Drehzahl 2 R4',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6520_0000_0200_028_1_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '029_3_0',
            name: 'Laufzeit 2 R4',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6520_0000_0200_029_3_0,
            parts: [{
                offset: 29,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '032_1_0',
            name: 'Drehzahl 1 R5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6520_0000_0200_032_1_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '033_3_0',
            name: 'Laufzeit 1 R5',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6520_0000_0200_033_3_0,
            parts: [{
                offset: 33,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '036_1_0',
            name: 'Drehzahl 2 R5',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6520_0000_0200_036_1_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '037_3_0',
            name: 'Laufzeit 2 R5',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6520_0000_0200_037_3_0,
            parts: [{
                offset: 37,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '040_1_0',
            name: 'Offset Sensor 1',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._6520_0000_0200_040_1_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: true,
                factor: 0.1,
            }, ],
        }, {
            fieldId: '041_1_0',
            name: 'Offset Sensor 2',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._6520_0000_0200_041_1_0,
            parts: [{
                offset: 41,
                mask: 255,
                isSigned: true,
                factor: 0.1,
            }, ],
        }, {
            fieldId: '042_1_0',
            name: 'Offset Sensor 3',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._6520_0000_0200_042_1_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: true,
                factor: 0.1,
            }, ],
        }, {
            fieldId: '043_1_0',
            name: 'Offset Sensor 4',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._6520_0000_0200_043_1_0,
            parts: [{
                offset: 43,
                mask: 255,
                isSigned: true,
                factor: 0.1,
            }, ],
        }, {
            fieldId: '044_1_0',
            name: 'Offset Sensor 5',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._6520_0000_0200_044_1_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: true,
                factor: 0.1,
            }, ],
        }, {
            fieldId: '045_1_0',
            name: 'Offset Sensor 6',
            type: types.Number_0_1_DegreesKelvin,
            getRawValue: getRawValueFunctions._6520_0000_0200_045_1_0,
            parts: [{
                offset: 45,
                mask: 255,
                isSigned: true,
                factor: 0.1,
            }, ],
        }, {
            fieldId: '046_1_0',
            name: 'Sensormaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._6520_0000_0200_046_1_0,
            parts: [{
                offset: 46,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, {
            fieldId: '047_1_0',
            name: 'Relaismaske',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._6520_0000_0200_047_1_0,
            parts: [{
                offset: 47,
                mask: 255,
                isSigned: true,
                factor: 1,
            }, ],
        }, ],
        _6650_0000_0200: [{
            fieldId: '000_1_0',
            name: 'Drehzahl Relais 1_1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6650_0000_0200_000_1_0,
            parts: [{
                offset: 0,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '001_3_0',
            name: 'Timer 1_1',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6650_0000_0200_001_3_0,
            parts: [{
                offset: 1,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 2,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 3,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '004_1_0',
            name: 'Drehzahl Relais 1_2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6650_0000_0200_004_1_0,
            parts: [{
                offset: 4,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '005_3_0',
            name: 'Timer 1_2',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6650_0000_0200_005_3_0,
            parts: [{
                offset: 5,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 6,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 7,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '008_1_0',
            name: 'Drehzahl Relais 2_1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6650_0000_0200_008_1_0,
            parts: [{
                offset: 8,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '009_3_0',
            name: 'Timer 2_1',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6650_0000_0200_009_3_0,
            parts: [{
                offset: 9,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 10,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 11,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '012_1_0',
            name: 'Drehzahl Relais 2_2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6650_0000_0200_012_1_0,
            parts: [{
                offset: 12,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '013_3_0',
            name: 'Timer 2_2',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6650_0000_0200_013_3_0,
            parts: [{
                offset: 13,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 14,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 15,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '016_1_0',
            name: 'Drehzahl Relais 3_1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6650_0000_0200_016_1_0,
            parts: [{
                offset: 16,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '017_3_0',
            name: 'Timer 3_1',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6650_0000_0200_017_3_0,
            parts: [{
                offset: 17,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 18,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 19,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '020_1_0',
            name: 'Drehzahl Relais 3_2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6650_0000_0200_020_1_0,
            parts: [{
                offset: 20,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '021_3_0',
            name: 'Timer 3_2',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6650_0000_0200_021_3_0,
            parts: [{
                offset: 21,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 22,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 23,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '024_1_0',
            name: 'Drehzahl Relais 4_1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6650_0000_0200_024_1_0,
            parts: [{
                offset: 24,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '025_3_0',
            name: 'Timer 4_1',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6650_0000_0200_025_3_0,
            parts: [{
                offset: 25,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 26,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 27,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '028_1_0',
            name: 'Drehzahl Relais 4_2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6650_0000_0200_028_1_0,
            parts: [{
                offset: 28,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '029_3_0',
            name: 'Timer 4_2',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6650_0000_0200_029_3_0,
            parts: [{
                offset: 29,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 30,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 31,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '032_1_0',
            name: 'Drehzahl Relais 5_1',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6650_0000_0200_032_1_0,
            parts: [{
                offset: 32,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '033_3_0',
            name: 'Timer 5_1',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6650_0000_0200_033_3_0,
            parts: [{
                offset: 33,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 34,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 35,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '036_1_0',
            name: 'Drehzahl Relais 5_2',
            type: types.Number_1_Percent,
            getRawValue: getRawValueFunctions._6650_0000_0200_036_1_0,
            parts: [{
                offset: 36,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '037_3_0',
            name: 'Timer 5_2',
            type: types.Number_1_Seconds,
            getRawValue: getRawValueFunctions._6650_0000_0200_037_3_0,
            parts: [{
                offset: 37,
                mask: 255,
                isSigned: false,
                factor: 1,
            }, {
                offset: 38,
                mask: 255,
                isSigned: false,
                factor: 256,
            }, {
                offset: 39,
                mask: 255,
                isSigned: true,
                factor: 65536,
            }, ],
        }, {
            fieldId: '040_1_0',
            name: 'SensorOutputType1',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._6650_0000_0200_040_1_0,
            parts: [{
                offset: 40,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '041_1_0',
            name: 'SensorOutputType2',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._6650_0000_0200_041_1_0,
            parts: [{
                offset: 41,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '042_1_0',
            name: 'SensorOutputType3',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._6650_0000_0200_042_1_0,
            parts: [{
                offset: 42,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '043_1_0',
            name: 'SensorOutputType4',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._6650_0000_0200_043_1_0,
            parts: [{
                offset: 43,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '044_1_0',
            name: 'SensorOutputType5',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._6650_0000_0200_044_1_0,
            parts: [{
                offset: 44,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, {
            fieldId: '045_1_0',
            name: 'SensorOutputType6',
            type: types.Number_1_None,
            getRawValue: getRawValueFunctions._6650_0000_0200_045_1_0,
            parts: [{
                offset: 45,
                mask: 255,
                isSigned: 0,
                factor: 1,
            }, ],
        }, ],
        
    };



    var packetSpecs = {
        _0000_4010_0100: {
            packetId: '0000_4010_0100',
            packetFields: packetFieldSpecs._0000_4010_0100,
        },
        _0000_4420_0100: {
            packetId: '0000_4420_0100',
            packetFields: packetFieldSpecs._0000_4420_0100,
        },
        _0000_6510_0100: {
            packetId: '0000_6510_0100',
            packetFields: packetFieldSpecs._0000_6510_0100,
        },
        _0000_6520_0100: {
            packetId: '0000_6520_0100',
            packetFields: packetFieldSpecs._0000_6520_0100,
        },
        _0000_6650_0100: {
            packetId: '0000_6650_0100',
            packetFields: packetFieldSpecs._0000_6650_0100,
        },
        _0010_0053_0100: {
            packetId: '0010_0053_0100',
            packetFields: packetFieldSpecs._0010_0053_0100,
        },
        _0010_1120_0100: {
            packetId: '0010_1120_0100',
            packetFields: packetFieldSpecs._0010_1120_0100,
        },
        _0010_2211_0100: {
            packetId: '0010_2211_0100',
            packetFields: packetFieldSpecs._0010_2211_0100,
        },
        _0010_2231_0100: {
            packetId: '0010_2231_0100',
            packetFields: packetFieldSpecs._0010_2231_0100,
        },
        _0010_2232_0100: {
            packetId: '0010_2232_0100',
            packetFields: packetFieldSpecs._0010_2232_0100,
        },
        _0010_2251_0100: {
            packetId: '0010_2251_0100',
            packetFields: packetFieldSpecs._0010_2251_0100,
        },
        _0010_2252_0100: {
            packetId: '0010_2252_0100',
            packetFields: packetFieldSpecs._0010_2252_0100,
        },
        _0010_3011_0100: {
            packetId: '0010_3011_0100',
            packetFields: packetFieldSpecs._0010_3011_0100,
        },
        _0010_3211_0100: {
            packetId: '0010_3211_0100',
            packetFields: packetFieldSpecs._0010_3211_0100,
        },
        _0010_3221_0100: {
            packetId: '0010_3221_0100',
            packetFields: packetFieldSpecs._0010_3221_0100,
        },
        _0010_3231_0100: {
            packetId: '0010_3231_0100',
            packetFields: packetFieldSpecs._0010_3231_0100,
        },
        _0010_3241_0100: {
            packetId: '0010_3241_0100',
            packetFields: packetFieldSpecs._0010_3241_0100,
        },
        _0010_3251_0100: {
            packetId: '0010_3251_0100',
            packetFields: packetFieldSpecs._0010_3251_0100,
        },
        _0010_3271_0100: {
            packetId: '0010_3271_0100',
            packetFields: packetFieldSpecs._0010_3271_0100,
        },
        _0010_3311_0100: {
            packetId: '0010_3311_0100',
            packetFields: packetFieldSpecs._0010_3311_0100,
        },
        _0010_4111_0100: {
            packetId: '0010_4111_0100',
            packetFields: packetFieldSpecs._0010_4111_0100,
        },
        _0010_4211_0100: {
            packetId: '0010_4211_0100',
            packetFields: packetFieldSpecs._0010_4211_0100,
        },
        _0010_4212_0100: {
            packetId: '0010_4212_0100',
            packetFields: packetFieldSpecs._0010_4212_0100,
        },
        _0010_4213_0100: {
            packetId: '0010_4213_0100',
            packetFields: packetFieldSpecs._0010_4213_0100,
        },
        _0010_4214_0100: {
            packetId: '0010_4214_0100',
            packetFields: packetFieldSpecs._0010_4214_0100,
        },
        _0010_4221_0100: {
            packetId: '0010_4221_0100',
            packetFields: packetFieldSpecs._0010_4221_0100,
        },
        _0010_4223_0100: {
            packetId: '0010_4223_0100',
            packetFields: packetFieldSpecs._0010_4223_0100,
        },
        _0010_4224_0100: {
            packetId: '0010_4224_0100',
            packetFields: packetFieldSpecs._0010_4224_0100,
        },
        _0010_4231_0100: {
            packetId: '0010_4231_0100',
            packetFields: packetFieldSpecs._0010_4231_0100,
        },
        _0010_4241_0100: {
            packetId: '0010_4241_0100',
            packetFields: packetFieldSpecs._0010_4241_0100,
        },
        _0010_4251_0100: {
            packetId: '0010_4251_0100',
            packetFields: packetFieldSpecs._0010_4251_0100,
        },
        _0010_4252_0100: {
            packetId: '0010_4252_0100',
            packetFields: packetFieldSpecs._0010_4252_0100,
        },
        _0010_4261_0100: {
            packetId: '0010_4261_0100',
            packetFields: packetFieldSpecs._0010_4261_0100,
        },
        _0010_4265_0100: {
            packetId: '0010_4265_0100',
            packetFields: packetFieldSpecs._0010_4265_0100,
        },
        _0010_4278_0100: {
            packetId: '0010_4278_0100',
            packetFields: packetFieldSpecs._0010_4278_0100,
        },
        _0010_4279_0100: {
            packetId: '0010_4279_0100',
            packetFields: packetFieldSpecs._0010_4279_0100,
        },
        _0010_427B_0100: {
            packetId: '0010_427B_0100',
            packetFields: packetFieldSpecs._0010_427B_0100,
        },
        _0010_4311_0100: {
            packetId: '0010_4311_0100',
            packetFields: packetFieldSpecs._0010_4311_0100,
        },
        _0010_4321_0100: {
            packetId: '0010_4321_0100',
            packetFields: packetFieldSpecs._0010_4321_0100,
        },
        _0010_5111_0100: {
            packetId: '0010_5111_0100',
            packetFields: packetFieldSpecs._0010_5111_0100,
        },
        _0010_5112_0100: {
            packetId: '0010_5112_0100',
            packetFields: packetFieldSpecs._0010_5112_0100,
        },
        _0010_5121_0100: {
            packetId: '0010_5121_0100',
            packetFields: packetFieldSpecs._0010_5121_0100,
        },
        _0010_5141_0100: {
            packetId: '0010_5141_0100',
            packetFields: packetFieldSpecs._0010_5141_0100,
        },
        _0010_5210_0100: {
            packetId: '0010_5210_0100',
            packetFields: packetFieldSpecs._0010_5210_0100,
        },
        _0010_5221_0100: {
            packetId: '0010_5221_0100',
            packetFields: packetFieldSpecs._0010_5221_0100,
        },
        _0010_5231_0100: {
            packetId: '0010_5231_0100',
            packetFields: packetFieldSpecs._0010_5231_0100,
        },
        _0010_5311_0100: {
            packetId: '0010_5311_0100',
            packetFields: packetFieldSpecs._0010_5311_0100,
        },
        _0010_5400_0100: {
            packetId: '0010_5400_0100',
            packetFields: packetFieldSpecs._0010_5400_0100,
        },
        _0010_5410_0100: {
            packetId: '0010_5410_0100',
            packetFields: packetFieldSpecs._0010_5410_0100,
        },
        _0010_5420_0100: {
            packetId: '0010_5420_0100',
            packetFields: packetFieldSpecs._0010_5420_0100,
        },
        _0010_5510_0100: {
            packetId: '0010_5510_0100',
            packetFields: packetFieldSpecs._0010_5510_0100,
        },
        _0010_5611_0100: {
            packetId: '0010_5611_0100',
            packetFields: packetFieldSpecs._0010_5611_0100,
        },
        _0010_6610_0100: {
            packetId: '0010_6610_0100',
            packetFields: packetFieldSpecs._0010_6610_0100,
        },
        _0010_6620_0100: {
            packetId: '0010_6620_0100',
            packetFields: packetFieldSpecs._0010_6620_0100,
        },
        _0010_7101_0100: {
            packetId: '0010_7101_0100',
            packetFields: packetFieldSpecs._0010_7101_0100,
        },
        _0010_7112_0100: {
            packetId: '0010_7112_0100',
            packetFields: packetFieldSpecs._0010_7112_0100,
        },
        _0010_7113_0100: {
            packetId: '0010_7113_0100',
            packetFields: packetFieldSpecs._0010_7113_0100,
        },
        _0010_7120_0100: {
            packetId: '0010_7120_0100',
            packetFields: packetFieldSpecs._0010_7120_0100,
        },
        _0010_7130_0100: {
            packetId: '0010_7130_0100',
            packetFields: packetFieldSpecs._0010_7130_0100,
        },
        _0010_7140_0100: {
            packetId: '0010_7140_0100',
            packetFields: packetFieldSpecs._0010_7140_0100,
        },
        _0010_7150_0100: {
            packetId: '0010_7150_0100',
            packetFields: packetFieldSpecs._0010_7150_0100,
        },
        _0010_7160_0100: {
            packetId: '0010_7160_0100',
            packetFields: packetFieldSpecs._0010_7160_0100,
        },
        _0010_7161_0100: {
            packetId: '0010_7161_0100',
            packetFields: packetFieldSpecs._0010_7161_0100,
        },
        _0010_7162_0100: {
            packetId: '0010_7162_0100',
            packetFields: packetFieldSpecs._0010_7162_0100,
        },
        _0010_7163_0100: {
            packetId: '0010_7163_0100',
            packetFields: packetFieldSpecs._0010_7163_0100,
        },
        _0010_7210_0100: {
            packetId: '0010_7210_0100',
            packetFields: packetFieldSpecs._0010_7210_0100,
        },
        _0010_7211_0100: {
            packetId: '0010_7211_0100',
            packetFields: packetFieldSpecs._0010_7211_0100,
        },
        _0010_7212_0100: {
            packetId: '0010_7212_0100',
            packetFields: packetFieldSpecs._0010_7212_0100,
        },
        _0010_7213_0100: {
            packetId: '0010_7213_0100',
            packetFields: packetFieldSpecs._0010_7213_0100,
        },
        _0010_7221_0100: {
            packetId: '0010_7221_0100',
            packetFields: packetFieldSpecs._0010_7221_0100,
        },
        _0010_7231_0100: {
            packetId: '0010_7231_0100',
            packetFields: packetFieldSpecs._0010_7231_0100,
        },
        _0010_7311_0100: {
            packetId: '0010_7311_0100',
            packetFields: packetFieldSpecs._0010_7311_0100,
        },
        _0010_7312_0100: {
            packetId: '0010_7312_0100',
            packetFields: packetFieldSpecs._0010_7312_0100,
        },
        _0010_7315_0100: {
            packetId: '0010_7315_0100',
            packetFields: packetFieldSpecs._0010_7315_0100,
        },
        _0010_7316_0100: {
            packetId: '0010_7316_0100',
            packetFields: packetFieldSpecs._0010_7316_0100,
        },
        _0010_7321_0100: {
            packetId: '0010_7321_0100',
            packetFields: packetFieldSpecs._0010_7321_0100,
        },
        _0010_7326_0100: {
            packetId: '0010_7326_0100',
            packetFields: packetFieldSpecs._0010_7326_0100,
        },
        _0010_7331_0100: {
            packetId: '0010_7331_0100',
            packetFields: packetFieldSpecs._0010_7331_0100,
        },
        _0010_7332_0100: {
            packetId: '0010_7332_0100',
            packetFields: packetFieldSpecs._0010_7332_0100,
        },
        _0010_7333_0100: {
            packetId: '0010_7333_0100',
            packetFields: packetFieldSpecs._0010_7333_0100,
        },
        _0010_7334_0100: {
            packetId: '0010_7334_0100',
            packetFields: packetFieldSpecs._0010_7334_0100,
        },
        _0010_7335_0100: {
            packetId: '0010_7335_0100',
            packetFields: packetFieldSpecs._0010_7335_0100,
        },
        _0010_7341_0100: {
            packetId: '0010_7341_0100',
            packetFields: packetFieldSpecs._0010_7341_0100,
        },
        _0010_7342_0100: {
            packetId: '0010_7342_0100',
            packetFields: packetFieldSpecs._0010_7342_0100,
        },
        _0010_7343_0100: {
            packetId: '0010_7343_0100',
            packetFields: packetFieldSpecs._0010_7343_0100,
        },
        _0010_7344_0100: {
            packetId: '0010_7344_0100',
            packetFields: packetFieldSpecs._0010_7344_0100,
        },
        _0010_7345_0100: {
            packetId: '0010_7345_0100',
            packetFields: packetFieldSpecs._0010_7345_0100,
        },
        _0010_7346_0100: {
            packetId: '0010_7346_0100',
            packetFields: packetFieldSpecs._0010_7346_0100,
        },
        _0010_7411_0100: {
            packetId: '0010_7411_0100',
            packetFields: packetFieldSpecs._0010_7411_0100,
        },
        _0010_7421_0100: {
            packetId: '0010_7421_0100',
            packetFields: packetFieldSpecs._0010_7421_0100,
        },
        _0010_7428_0100: {
            packetId: '0010_7428_0100',
            packetFields: packetFieldSpecs._0010_7428_0100,
        },
        _0010_7511_0100: {
            packetId: '0010_7511_0100',
            packetFields: packetFieldSpecs._0010_7511_0100,
        },
        _0010_7512_0100: {
            packetId: '0010_7512_0100',
            packetFields: packetFieldSpecs._0010_7512_0100,
        },
        _0010_7521_0100: {
            packetId: '0010_7521_0100',
            packetFields: packetFieldSpecs._0010_7521_0100,
        },
        _0010_7522_0100: {
            packetId: '0010_7522_0100',
            packetFields: packetFieldSpecs._0010_7522_0100,
        },
        _0010_7523_0100: {
            packetId: '0010_7523_0100',
            packetFields: packetFieldSpecs._0010_7523_0100,
        },
        _0010_7530_0100: {
            packetId: '0010_7530_0100',
            packetFields: packetFieldSpecs._0010_7530_0100,
        },
        _0010_7611_0100: {
            packetId: '0010_7611_0100',
            packetFields: packetFieldSpecs._0010_7611_0100,
        },
        _0010_7621_0100: {
            packetId: '0010_7621_0100',
            packetFields: packetFieldSpecs._0010_7621_0100,
        },
        _0010_7622_0100: {
            packetId: '0010_7622_0100',
            packetFields: packetFieldSpecs._0010_7622_0100,
        },
        _0010_7651_0100: {
            packetId: '0010_7651_0100',
            packetFields: packetFieldSpecs._0010_7651_0100,
        },
        _0010_7711_0100: {
            packetId: '0010_7711_0100',
            packetFields: packetFieldSpecs._0010_7711_0100,
        },
        _0010_7712_0100: {
            packetId: '0010_7712_0100',
            packetFields: packetFieldSpecs._0010_7712_0100,
        },
        _0010_7721_0100: {
            packetId: '0010_7721_0100',
            packetFields: packetFieldSpecs._0010_7721_0100,
        },
        _0010_7722_0100: {
            packetId: '0010_7722_0100',
            packetFields: packetFieldSpecs._0010_7722_0100,
        },
        _0010_7729_0100: {
            packetId: '0010_7729_0100',
            packetFields: packetFieldSpecs._0010_7729_0100,
        },
        _0010_772A_0100: {
            packetId: '0010_772A_0100',
            packetFields: packetFieldSpecs._0010_772A_0100,
        },
        _0010_7731_0100: {
            packetId: '0010_7731_0100',
            packetFields: packetFieldSpecs._0010_7731_0100,
        },
        _0010_7751_0100: {
            packetId: '0010_7751_0100',
            packetFields: packetFieldSpecs._0010_7751_0100,
        },
        _0010_7761_0100: {
            packetId: '0010_7761_0100',
            packetFields: packetFieldSpecs._0010_7761_0100,
        },
        _0010_7762_0100: {
            packetId: '0010_7762_0100',
            packetFields: packetFieldSpecs._0010_7762_0100,
        },
        _0010_7774_0100: {
            packetId: '0010_7774_0100',
            packetFields: packetFieldSpecs._0010_7774_0100,
        },
        _0010_7821_0100: {
            packetId: '0010_7821_0100',
            packetFields: packetFieldSpecs._0010_7821_0100,
        },
        _0010_7822_0100: {
            packetId: '0010_7822_0100',
            packetFields: packetFieldSpecs._0010_7822_0100,
        },
        _0010_7830_0100: {
            packetId: '0010_7830_0100',
            packetFields: packetFieldSpecs._0010_7830_0100,
        },
        _0010_7D04_0100: {
            packetId: '0010_7D04_0100',
            packetFields: packetFieldSpecs._0010_7D04_0100,
        },
        _0010_7E11_0100: {
            packetId: '0010_7E11_0100',
            packetFields: packetFieldSpecs._0010_7E11_0100,
        },
        _0010_7E12_0100: {
            packetId: '0010_7E12_0100',
            packetFields: packetFieldSpecs._0010_7E12_0100,
        },
        _0010_7E20_0100: {
            packetId: '0010_7E20_0100',
            packetFields: packetFieldSpecs._0010_7E20_0100,
        },
        _0010_7E30_0100: {
            packetId: '0010_7E30_0100',
            packetFields: packetFieldSpecs._0010_7E30_0100,
        },
        _0010_7F61_0100: {
            packetId: '0010_7F61_0100',
            packetFields: packetFieldSpecs._0010_7F61_0100,
        },
        _0010_7F62_0100: {
            packetId: '0010_7F62_0100',
            packetFields: packetFieldSpecs._0010_7F62_0100,
        },
        _0010_7F63_0100: {
            packetId: '0010_7F63_0100',
            packetFields: packetFieldSpecs._0010_7F63_0100,
        },
        _0010_7F64_0100: {
            packetId: '0010_7F64_0100',
            packetFields: packetFieldSpecs._0010_7F64_0100,
        },
        _0010_7F65_0100: {
            packetId: '0010_7F65_0100',
            packetFields: packetFieldSpecs._0010_7F65_0100,
        },
        _0010_7F71_0100: {
            packetId: '0010_7F71_0100',
            packetFields: packetFieldSpecs._0010_7F71_0100,
        },
        _4420_0000_0200: {
            packetId: '4420_0000_0200',
            packetFields: packetFieldSpecs._4420_0000_0200,
        },
        _6510_0000_0200: {
            packetId: '6510_0000_0200',
            packetFields: packetFieldSpecs._6510_0000_0200,
        },
        _6520_0000_0200: {
            packetId: '6520_0000_0200',
            packetFields: packetFieldSpecs._6520_0000_0200,
        },
        _6650_0000_0200: {
            packetId: '6650_0000_0200',
            packetFields: packetFieldSpecs._6650_0000_0200,
        },
        
    };



    var getPacketSpecification = function(destinationAddress, sourceAddress, command) {
        var packetSpec;
        if ((true) && (sourceAddress === 0x4010) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4010_0100;
        } else if ((true) && (sourceAddress === 0x4011) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4010_0100;
        } else if ((true) && (sourceAddress === 0x4012) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4010_0100;
        } else if ((true) && (sourceAddress === 0x4013) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4010_0100;
        } else if ((true) && (sourceAddress === 0x4014) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4010_0100;
        } else if ((true) && (sourceAddress === 0x4015) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4010_0100;
        } else if ((true) && (sourceAddress === 0x4016) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4010_0100;
        } else if ((true) && (sourceAddress === 0x4017) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4010_0100;
        } else if ((true) && (sourceAddress === 0x4018) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4010_0100;
        } else if ((true) && (sourceAddress === 0x4019) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4010_0100;
        } else if ((true) && (sourceAddress === 0x401A) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4010_0100;
        } else if ((true) && (sourceAddress === 0x401B) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4010_0100;
        } else if ((true) && (sourceAddress === 0x401C) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4010_0100;
        } else if ((true) && (sourceAddress === 0x401D) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4010_0100;
        } else if ((true) && (sourceAddress === 0x401E) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4010_0100;
        } else if ((true) && (sourceAddress === 0x401F) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4010_0100;
        } else if ((true) && (sourceAddress === 0x4420) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4420_0100;
        } else if ((true) && (sourceAddress === 0x4421) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4420_0100;
        } else if ((true) && (sourceAddress === 0x4422) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4420_0100;
        } else if ((true) && (sourceAddress === 0x4423) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4420_0100;
        } else if ((true) && (sourceAddress === 0x4424) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4420_0100;
        } else if ((true) && (sourceAddress === 0x4425) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4420_0100;
        } else if ((true) && (sourceAddress === 0x4426) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4420_0100;
        } else if ((true) && (sourceAddress === 0x4427) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4420_0100;
        } else if ((true) && (sourceAddress === 0x4428) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4420_0100;
        } else if ((true) && (sourceAddress === 0x4429) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4420_0100;
        } else if ((true) && (sourceAddress === 0x442A) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4420_0100;
        } else if ((true) && (sourceAddress === 0x442B) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4420_0100;
        } else if ((true) && (sourceAddress === 0x442C) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4420_0100;
        } else if ((true) && (sourceAddress === 0x442D) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4420_0100;
        } else if ((true) && (sourceAddress === 0x442E) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4420_0100;
        } else if ((true) && (sourceAddress === 0x442F) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_4420_0100;
        } else if ((true) && (sourceAddress === 0x6510) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6510_0100;
        } else if ((true) && (sourceAddress === 0x6511) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6510_0100;
        } else if ((true) && (sourceAddress === 0x6512) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6510_0100;
        } else if ((true) && (sourceAddress === 0x6513) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6510_0100;
        } else if ((true) && (sourceAddress === 0x6514) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6510_0100;
        } else if ((true) && (sourceAddress === 0x6515) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6510_0100;
        } else if ((true) && (sourceAddress === 0x6516) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6510_0100;
        } else if ((true) && (sourceAddress === 0x6517) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6510_0100;
        } else if ((true) && (sourceAddress === 0x6518) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6510_0100;
        } else if ((true) && (sourceAddress === 0x6519) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6510_0100;
        } else if ((true) && (sourceAddress === 0x651A) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6510_0100;
        } else if ((true) && (sourceAddress === 0x651B) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6510_0100;
        } else if ((true) && (sourceAddress === 0x651C) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6510_0100;
        } else if ((true) && (sourceAddress === 0x651D) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6510_0100;
        } else if ((true) && (sourceAddress === 0x651E) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6510_0100;
        } else if ((true) && (sourceAddress === 0x651F) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6510_0100;
        } else if ((true) && (sourceAddress === 0x6520) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6520_0100;
        } else if ((true) && (sourceAddress === 0x6521) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6520_0100;
        } else if ((true) && (sourceAddress === 0x6522) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6520_0100;
        } else if ((true) && (sourceAddress === 0x6523) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6520_0100;
        } else if ((true) && (sourceAddress === 0x6524) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6520_0100;
        } else if ((true) && (sourceAddress === 0x6525) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6520_0100;
        } else if ((true) && (sourceAddress === 0x6526) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6520_0100;
        } else if ((true) && (sourceAddress === 0x6527) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6520_0100;
        } else if ((true) && (sourceAddress === 0x6528) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6520_0100;
        } else if ((true) && (sourceAddress === 0x6529) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6520_0100;
        } else if ((true) && (sourceAddress === 0x652A) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6520_0100;
        } else if ((true) && (sourceAddress === 0x652B) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6520_0100;
        } else if ((true) && (sourceAddress === 0x652C) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6520_0100;
        } else if ((true) && (sourceAddress === 0x652D) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6520_0100;
        } else if ((true) && (sourceAddress === 0x652E) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6520_0100;
        } else if ((true) && (sourceAddress === 0x652F) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6520_0100;
        } else if ((true) && (sourceAddress === 0x6650) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6650_0100;
        } else if ((true) && (sourceAddress === 0x6651) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6650_0100;
        } else if ((true) && (sourceAddress === 0x6652) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6650_0100;
        } else if ((true) && (sourceAddress === 0x6653) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6650_0100;
        } else if ((true) && (sourceAddress === 0x6654) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6650_0100;
        } else if ((true) && (sourceAddress === 0x6655) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6650_0100;
        } else if ((true) && (sourceAddress === 0x6656) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6650_0100;
        } else if ((true) && (sourceAddress === 0x6657) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6650_0100;
        } else if ((true) && (sourceAddress === 0x6658) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6650_0100;
        } else if ((true) && (sourceAddress === 0x6659) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6650_0100;
        } else if ((true) && (sourceAddress === 0x665A) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6650_0100;
        } else if ((true) && (sourceAddress === 0x665B) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6650_0100;
        } else if ((true) && (sourceAddress === 0x665C) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6650_0100;
        } else if ((true) && (sourceAddress === 0x665D) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6650_0100;
        } else if ((true) && (sourceAddress === 0x665E) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6650_0100;
        } else if ((true) && (sourceAddress === 0x665F) && (command === 0x0100)) {
            packetSpec = packetSpecs._0000_6650_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x0053) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_0053_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x1120) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_1120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x2211) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_2211_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x2231) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_2231_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x2232) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_2232_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x2251) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_2251_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x2252) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_2252_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x3011) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_3011_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x3211) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_3211_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x3221) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_3221_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x3231) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_3231_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x3241) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_3241_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x3251) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_3251_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x3271) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_3271_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x3311) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_3311_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4111) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4111_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4211) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4211_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4212) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4212_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4213) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4213_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4214) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4214_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4221) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4221_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4223) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4223_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4224) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4224_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4231) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4231_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4241) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4241_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4251) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4251_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4252) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4252_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4261) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4261_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4265) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4265_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4278) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4278_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4279) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4279_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x427B) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_427B_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4311) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4311_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x4321) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_4321_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5111) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5111_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5112) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5112_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5121) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5121_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5141) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5141_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5210) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5210_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5221) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5221_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5231) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5231_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5311) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5311_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5400) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5400_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5410) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5410_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5411) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5410_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5412) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5410_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5413) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5410_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5414) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5410_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5415) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5410_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5416) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5410_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5417) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5410_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5418) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5410_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5419) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5410_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x541A) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5410_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x541B) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5410_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x541C) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5410_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x541D) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5410_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x541E) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5410_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x541F) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5410_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5420) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5420_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5421) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5420_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5422) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5420_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5423) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5420_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5424) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5420_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5425) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5420_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5426) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5420_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5427) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5420_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5428) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5420_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5429) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5420_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x542A) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5420_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x542B) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5420_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x542C) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5420_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x542D) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5420_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x542E) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5420_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x542F) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5420_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5510) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5510_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x5611) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_5611_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x6610) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_6610_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x6620) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_6620_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7101) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7101_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7112) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7112_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7113) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7113_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7120) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7121) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7122) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7123) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7124) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7125) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7126) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7127) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7128) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7129) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x712A) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x712B) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x712C) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x712D) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x712E) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x712F) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7120_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7130) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7130_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7131) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7130_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7132) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7130_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7133) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7130_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7134) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7130_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7135) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7130_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7136) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7130_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7137) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7130_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7138) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7130_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7139) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7130_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x713A) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7130_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x713B) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7130_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x713C) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7130_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x713D) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7130_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x713E) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7130_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x713F) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7130_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7140) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7140_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7150) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7150_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7151) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7150_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7152) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7150_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7153) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7150_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7154) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7150_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7155) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7150_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7156) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7150_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7157) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7150_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7158) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7150_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7159) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7150_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x715A) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7150_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x715B) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7150_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x715C) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7150_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x715D) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7150_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x715E) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7150_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x715F) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7150_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7160) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7160_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7161) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7161_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7162) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7162_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7163) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7163_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7210) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7210_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7211) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7211_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7212) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7212_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7213) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7213_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7221) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7221_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7231) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7231_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7311) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7311_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7312) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7312_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7313) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7312_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7315) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7315_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7316) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7316_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7317) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7316_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7321) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7321_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7326) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7326_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7327) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7326_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7331) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7331_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7332) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7332_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7333) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7333_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7334) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7334_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7335) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7335_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7341) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7341_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7342) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7342_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7343) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7343_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7344) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7344_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7345) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7345_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7346) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7346_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7411) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7411_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7421) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7421_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7428) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7428_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7511) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7511_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7512) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7512_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7521) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7521_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7522) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7522_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7523) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7523_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7530) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7530_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7531) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7530_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7532) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7530_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7533) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7530_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7534) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7530_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7535) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7530_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7536) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7530_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7537) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7530_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7538) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7530_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7539) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7530_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x753A) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7530_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x753B) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7530_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x753C) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7530_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x753D) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7530_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x753E) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7530_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x753F) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7530_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7611) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7611_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7621) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7621_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7622) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7622_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7651) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7651_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7711) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7711_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7712) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7712_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7721) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7721_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7722) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7722_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7729) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7729_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x772A) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_772A_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7731) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7731_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7751) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7751_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7761) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7761_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7762) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7762_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7774) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7774_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7821) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7821_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7822) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7822_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7830) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7830_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7831) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7830_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7832) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7830_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7833) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7830_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7834) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7830_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7835) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7830_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7836) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7830_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7837) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7830_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7838) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7830_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7839) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7830_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x783A) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7830_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x783B) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7830_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x783C) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7830_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x783D) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7830_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x783E) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7830_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x783F) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7830_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7D04) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7D04_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E11) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E11_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E12) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E12_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E20) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E20_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E21) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E20_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E22) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E20_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E23) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E20_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E24) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E20_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E25) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E20_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E26) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E20_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E27) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E20_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E28) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E20_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E29) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E20_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E2A) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E20_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E2B) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E20_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E2C) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E20_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E2D) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E20_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E2E) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E20_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E2F) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E20_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E30) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E30_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E31) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E30_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E32) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E30_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E33) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E30_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E34) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E30_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E35) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E30_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E36) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E30_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E37) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E30_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E38) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E30_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E39) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E30_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E3A) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E30_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E3B) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E30_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E3C) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E30_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E3D) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E30_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E3E) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E30_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7E3F) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7E30_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7F61) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7F61_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7F62) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7F62_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7F63) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7F63_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7F64) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7F64_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7F65) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7F65_0100;
        } else if ((destinationAddress === 0x0010) && (sourceAddress === 0x7F71) && (command === 0x0100)) {
            packetSpec = packetSpecs._0010_7F71_0100;
        } else if ((destinationAddress === 0x4420) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._4420_0000_0200;
        } else if ((destinationAddress === 0x4421) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._4420_0000_0200;
        } else if ((destinationAddress === 0x4422) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._4420_0000_0200;
        } else if ((destinationAddress === 0x4423) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._4420_0000_0200;
        } else if ((destinationAddress === 0x4424) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._4420_0000_0200;
        } else if ((destinationAddress === 0x4425) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._4420_0000_0200;
        } else if ((destinationAddress === 0x4426) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._4420_0000_0200;
        } else if ((destinationAddress === 0x4427) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._4420_0000_0200;
        } else if ((destinationAddress === 0x4428) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._4420_0000_0200;
        } else if ((destinationAddress === 0x4429) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._4420_0000_0200;
        } else if ((destinationAddress === 0x442A) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._4420_0000_0200;
        } else if ((destinationAddress === 0x442B) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._4420_0000_0200;
        } else if ((destinationAddress === 0x442C) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._4420_0000_0200;
        } else if ((destinationAddress === 0x442D) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._4420_0000_0200;
        } else if ((destinationAddress === 0x442E) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._4420_0000_0200;
        } else if ((destinationAddress === 0x442F) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._4420_0000_0200;
        } else if ((destinationAddress === 0x6510) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6510_0000_0200;
        } else if ((destinationAddress === 0x6511) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6510_0000_0200;
        } else if ((destinationAddress === 0x6512) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6510_0000_0200;
        } else if ((destinationAddress === 0x6513) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6510_0000_0200;
        } else if ((destinationAddress === 0x6514) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6510_0000_0200;
        } else if ((destinationAddress === 0x6515) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6510_0000_0200;
        } else if ((destinationAddress === 0x6516) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6510_0000_0200;
        } else if ((destinationAddress === 0x6517) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6510_0000_0200;
        } else if ((destinationAddress === 0x6518) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6510_0000_0200;
        } else if ((destinationAddress === 0x6519) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6510_0000_0200;
        } else if ((destinationAddress === 0x651A) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6510_0000_0200;
        } else if ((destinationAddress === 0x651B) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6510_0000_0200;
        } else if ((destinationAddress === 0x651C) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6510_0000_0200;
        } else if ((destinationAddress === 0x651D) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6510_0000_0200;
        } else if ((destinationAddress === 0x651E) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6510_0000_0200;
        } else if ((destinationAddress === 0x651F) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6510_0000_0200;
        } else if ((destinationAddress === 0x6520) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6520_0000_0200;
        } else if ((destinationAddress === 0x6521) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6520_0000_0200;
        } else if ((destinationAddress === 0x6522) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6520_0000_0200;
        } else if ((destinationAddress === 0x6523) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6520_0000_0200;
        } else if ((destinationAddress === 0x6524) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6520_0000_0200;
        } else if ((destinationAddress === 0x6525) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6520_0000_0200;
        } else if ((destinationAddress === 0x6526) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6520_0000_0200;
        } else if ((destinationAddress === 0x6527) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6520_0000_0200;
        } else if ((destinationAddress === 0x6528) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6520_0000_0200;
        } else if ((destinationAddress === 0x6529) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6520_0000_0200;
        } else if ((destinationAddress === 0x652A) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6520_0000_0200;
        } else if ((destinationAddress === 0x652B) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6520_0000_0200;
        } else if ((destinationAddress === 0x652C) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6520_0000_0200;
        } else if ((destinationAddress === 0x652D) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6520_0000_0200;
        } else if ((destinationAddress === 0x652E) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6520_0000_0200;
        } else if ((destinationAddress === 0x652F) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6520_0000_0200;
        } else if ((destinationAddress === 0x6650) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6650_0000_0200;
        } else if ((destinationAddress === 0x6651) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6650_0000_0200;
        } else if ((destinationAddress === 0x6652) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6650_0000_0200;
        } else if ((destinationAddress === 0x6653) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6650_0000_0200;
        } else if ((destinationAddress === 0x6654) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6650_0000_0200;
        } else if ((destinationAddress === 0x6655) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6650_0000_0200;
        } else if ((destinationAddress === 0x6656) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6650_0000_0200;
        } else if ((destinationAddress === 0x6657) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6650_0000_0200;
        } else if ((destinationAddress === 0x6658) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6650_0000_0200;
        } else if ((destinationAddress === 0x6659) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6650_0000_0200;
        } else if ((destinationAddress === 0x665A) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6650_0000_0200;
        } else if ((destinationAddress === 0x665B) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6650_0000_0200;
        } else if ((destinationAddress === 0x665C) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6650_0000_0200;
        } else if ((destinationAddress === 0x665D) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6650_0000_0200;
        } else if ((destinationAddress === 0x665E) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6650_0000_0200;
        } else if ((destinationAddress === 0x665F) && (true) && (command === 0x0200)) {
            packetSpec = packetSpecs._6650_0000_0200;
        } else {
            packetSpec = null;
        }
        return packetSpec;
    };



    var vbusSpecificationData = {
        units: units,
        types: types,
        getRawValueFunctions: getRawValueFunctions,
        deviceSpecs: deviceSpecs,
        getDeviceSpecification: getDeviceSpecification,
        packetFieldSpecs: packetFieldSpecs,
        packetSpecs: packetSpecs,
        getPacketSpecification: getPacketSpecification,
    };

    return vbusSpecificationData;
};



module.exports = createVBusSpecificationData;

